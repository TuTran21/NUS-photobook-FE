{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/themes/_metronic/layout/aside/AsideLeft.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport objectPath from 'object-path';\nimport { withRouter } from 'react-router-dom';\nimport { removeCSSClass } from '../../utils/utils';\nimport MenuList from './components/MenuList';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport * as builder from 'state/ducks/layout/builder';\nimport KTMenu from '../../_assets/js/menu';\nimport KTOffcanvas from '../../_assets/js/offcanvas';\n\nclass AsideLeft extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.asideOffCanvasRef = React.createRef();\n    this.asideMenuRef = React.createRef();\n\n    this.mouseEnter = e => {\n      // check if the left aside menu is fixed\n      if (document.body.classList.contains('kt-aside--fixed')) {\n        if (this.outsideTm) {\n          clearTimeout(this.outsideTm);\n          this.outsideTm = null;\n        }\n\n        this.insideTm = setTimeout(() => {\n          // if the left aside menu is minimized\n          if (document.body.classList.contains('kt-aside--minimize') && // eslint-disable-next-line no-undef\n          KTUtil.isInResponsiveRange('desktop')) {\n            removeCSSClass(document.body, 'kt-aside--minimize');\n            removeCSSClass(document.body, 'kt-aside--minimize');\n            removeCSSClass(document.body, 'kt-aside--minimize-hover');\n          }\n        }, 50);\n      }\n    };\n\n    this.mouseLeave = e => {\n      if (document.body.classList.contains('kt-aside--fixed')) {\n        if (this.insideTm) {\n          clearTimeout(this.insideTm);\n          this.insideTm = null;\n        }\n\n        this.outsideTm = setTimeout(() => {\n          // if the left aside menu is expand\n\n          /* eslint-disable-next-line  */\n          if (document.body.classList.contains('kt-aside--minimize-hover') && // eslint-disable-next-line no-undef\n          KTUtil.isInResponsiveRange('desktop')) {\n            // hide back the left aside menu\n            document.body.classList.add('kt-aside--minimize');\n            removeCSSClass(document.body, 'kt-aside--minimize-hover');\n          }\n        }, 100);\n      }\n    };\n  }\n\n  componentDidMount() {\n    // eslint-disable-next-line\n    const ktoffConvas = new KTOffcanvas(this.asideOffCanvasRef.current, this.props.menuCanvasOptions);\n    this.initMenu(); // By ID\n\n    const options = this.setupMenuOptions();\n    const ktMenu = new KTMenu(this.asideMenuRef.current, options); // eslint-disable-line\n  }\n\n  initMenu() {\n    const {\n      config\n    } = this.props;\n\n    if (objectPath.get(config, 'aside.menu.dropdown') !== true && objectPath.get(config, 'aside.self.fixed')) {\n      this.asideMenuRef.current.setAttribute('data-ktmenu-scroll', '1');\n    }\n\n    if (objectPath.get(config, 'aside.menu.dropdown')) {\n      this.asideMenuRef.current.setAttribute('data-ktmenu-dropdown', '1');\n      this.asideMenuRef.current.setAttribute('data-ktmenu-dropdown-timeout', objectPath.get(config, 'aside.menu.submenu.dropdown.hover-timeout'));\n    }\n  }\n\n  setupMenuOptions() {\n    let menuOptions = {\n      // vertical scroll\n      scroll: null,\n      // submenu setup\n      submenu: {\n        desktop: {\n          // by default the menu mode set to accordion in desktop mode\n          default: 'dropdown'\n        },\n        tablet: 'accordion',\n        // menu set to accordion in tablet mode\n        mobile: 'accordion' // menu set to accordion in mobile mode\n\n      },\n      // accordion setup\n      accordion: {\n        expandAll: false // allow having multiple expanded accordions in the menu\n\n      }\n    }; // init aside menu\n\n    let menuDesktopMode = 'accordion';\n\n    if (this.asideMenuRef.current.getAttribute('data-ktmenu-dropdown') === '1') {\n      menuDesktopMode = 'dropdown';\n    }\n\n    if (typeof objectPath.get(menuOptions, 'submenu.desktop') === 'object') {\n      menuOptions.submenu.desktop.default = menuDesktopMode;\n    }\n\n    return menuOptions;\n  }\n\n  get currentUrl() {\n    return this.props.location.pathname.split(/[?#]/)[0];\n  }\n  /**\n   * Use for fixed left aside menu, to show menu on mouseenter event.\n   * @param e Event\n   */\n\n\n  render() {\n    const perfectScrollbarOptions = {\n      wheelPropagation: false,\n      wheelSpeed: 2\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"kt-aside-close\",\n      id: \"kt_aside_close_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"la la-close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.asideOffCanvasRef,\n      className: \"kt-aside kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop\",\n      id: \"kt_aside\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\",\n      id: \"kt_aside_menu_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      options: perfectScrollbarOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.asideMenuRef,\n      style: {\n        maxHeight: '90vh',\n        position: 'relative'\n      },\n      id: \"kt_aside_menu\",\n      className: `kt-aside-menu ${this.props.asideClassesFromConfig}`,\n      \"data-ktmenu-vertical\": \"1\",\n      onMouseEnter: this.mouseEnter,\n      onMouseLeave: this.mouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: `kt-menu__nav ${this.props.ulClasses}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MenuList, {\n      currentUrl: this.currentUrl,\n      menuConfig: this.props.menuConfig,\n      layoutConfig: this.props.config,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 10\n      }\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = store => ({\n  config: store.builder.layoutConfig,\n  menuConfig: store.builder.menuConfig,\n  ulClasses: builder.selectors.getClasses(store, {\n    path: 'aside_menu_nav',\n    toString: true\n  }),\n  asideClassesFromConfig: builder.selectors.getClasses(store, {\n    path: 'aside_menu',\n    toString: true\n  }),\n  menuCanvasOptions: {\n    baseClass: 'kt-aside',\n    overlay: true,\n    closeBy: 'kt_aside_close_btn',\n    toggleBy: {\n      target: 'kt_aside_mobile_toggler',\n      state: 'kt-header-mobile__toolbar-toggler--active'\n    }\n  }\n});\n\nexport default withRouter(connect(mapStateToProps)(AsideLeft));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/themes/_metronic/layout/aside/AsideLeft.js"],"names":["React","connect","objectPath","withRouter","removeCSSClass","MenuList","PerfectScrollbar","builder","KTMenu","KTOffcanvas","AsideLeft","Component","asideOffCanvasRef","createRef","asideMenuRef","mouseEnter","e","document","body","classList","contains","outsideTm","clearTimeout","insideTm","setTimeout","KTUtil","isInResponsiveRange","mouseLeave","add","componentDidMount","ktoffConvas","current","props","menuCanvasOptions","initMenu","options","setupMenuOptions","ktMenu","config","get","setAttribute","menuOptions","scroll","submenu","desktop","default","tablet","mobile","accordion","expandAll","menuDesktopMode","getAttribute","currentUrl","location","pathname","split","render","perfectScrollbarOptions","wheelPropagation","wheelSpeed","maxHeight","position","asideClassesFromConfig","ulClasses","menuConfig","mapStateToProps","store","layoutConfig","selectors","getClasses","path","toString","baseClass","overlay","closeBy","toggleBy","target","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport objectPath from 'object-path';\nimport { withRouter } from 'react-router-dom';\nimport { removeCSSClass } from '../../utils/utils';\nimport MenuList from './components/MenuList';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nimport * as builder from 'state/ducks/layout/builder';\nimport KTMenu from '../../_assets/js/menu';\nimport KTOffcanvas from '../../_assets/js/offcanvas';\n\nclass AsideLeft extends React.Component {\n\tasideOffCanvasRef = React.createRef();\n\tasideMenuRef = React.createRef();\n\n\tinsideTm;\n\toutsideTm;\n\n\tcomponentDidMount() {\n\t\t// eslint-disable-next-line\n\t\tconst ktoffConvas = new KTOffcanvas(this.asideOffCanvasRef.current, this.props.menuCanvasOptions);\n\t\tthis.initMenu(); // By ID\n\n\t\tconst options = this.setupMenuOptions();\n\t\tconst ktMenu = new KTMenu(this.asideMenuRef.current, options); // eslint-disable-line\n\t}\n\n\tinitMenu() {\n\t\tconst { config } = this.props;\n\n\t\tif (objectPath.get(config, 'aside.menu.dropdown') !== true && objectPath.get(config, 'aside.self.fixed')) {\n\t\t\tthis.asideMenuRef.current.setAttribute('data-ktmenu-scroll', '1');\n\t\t}\n\n\t\tif (objectPath.get(config, 'aside.menu.dropdown')) {\n\t\t\tthis.asideMenuRef.current.setAttribute('data-ktmenu-dropdown', '1');\n\t\t\tthis.asideMenuRef.current.setAttribute(\n\t\t\t\t'data-ktmenu-dropdown-timeout',\n\t\t\t\tobjectPath.get(config, 'aside.menu.submenu.dropdown.hover-timeout'),\n\t\t\t);\n\t\t}\n\t}\n\n\tsetupMenuOptions() {\n\t\tlet menuOptions = {\n\t\t\t// vertical scroll\n\t\t\tscroll: null,\n\t\t\t// submenu setup\n\t\t\tsubmenu: {\n\t\t\t\tdesktop: {\n\t\t\t\t\t// by default the menu mode set to accordion in desktop mode\n\t\t\t\t\tdefault: 'dropdown',\n\t\t\t\t},\n\t\t\t\ttablet: 'accordion', // menu set to accordion in tablet mode\n\t\t\t\tmobile: 'accordion', // menu set to accordion in mobile mode\n\t\t\t},\n\t\t\t// accordion setup\n\t\t\taccordion: {\n\t\t\t\texpandAll: false, // allow having multiple expanded accordions in the menu\n\t\t\t},\n\t\t};\n\n\t\t// init aside menu\n\t\tlet menuDesktopMode = 'accordion';\n\t\tif (this.asideMenuRef.current.getAttribute('data-ktmenu-dropdown') === '1') {\n\t\t\tmenuDesktopMode = 'dropdown';\n\t\t}\n\n\t\tif (typeof objectPath.get(menuOptions, 'submenu.desktop') === 'object') {\n\t\t\tmenuOptions.submenu.desktop.default = menuDesktopMode;\n\t\t}\n\n\t\treturn menuOptions;\n\t}\n\n\tget currentUrl() {\n\t\treturn this.props.location.pathname.split(/[?#]/)[0];\n\t}\n\n\t/**\n\t * Use for fixed left aside menu, to show menu on mouseenter event.\n\t * @param e Event\n\t */\n\tmouseEnter = e => {\n\t\t// check if the left aside menu is fixed\n\t\tif (document.body.classList.contains('kt-aside--fixed')) {\n\t\t\tif (this.outsideTm) {\n\t\t\t\tclearTimeout(this.outsideTm);\n\t\t\t\tthis.outsideTm = null;\n\t\t\t}\n\n\t\t\tthis.insideTm = setTimeout(() => {\n\t\t\t\t// if the left aside menu is minimized\n\t\t\t\tif (\n\t\t\t\t\tdocument.body.classList.contains('kt-aside--minimize') &&\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tKTUtil.isInResponsiveRange('desktop')\n\t\t\t\t) {\n\t\t\t\t\tremoveCSSClass(document.body, 'kt-aside--minimize');\n\t\t\t\t\tremoveCSSClass(document.body, 'kt-aside--minimize');\n\t\t\t\t\tremoveCSSClass(document.body, 'kt-aside--minimize-hover');\n\t\t\t\t}\n\t\t\t}, 50);\n\t\t}\n\t};\n\n\t/**\n\t * Use for fixed left aside menu, to show menu on mouseenter event.\n\t * @param e Event\n\t */\n\tmouseLeave = e => {\n\t\tif (document.body.classList.contains('kt-aside--fixed')) {\n\t\t\tif (this.insideTm) {\n\t\t\t\tclearTimeout(this.insideTm);\n\t\t\t\tthis.insideTm = null;\n\t\t\t}\n\n\t\t\tthis.outsideTm = setTimeout(() => {\n\t\t\t\t// if the left aside menu is expand\n\t\t\t\t/* eslint-disable-next-line  */\n\t\t\t\tif (\n\t\t\t\t\tdocument.body.classList.contains('kt-aside--minimize-hover') &&\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tKTUtil.isInResponsiveRange('desktop')\n\t\t\t\t) {\n\t\t\t\t\t// hide back the left aside menu\n\t\t\t\t\tdocument.body.classList.add('kt-aside--minimize');\n\n\t\t\t\t\tremoveCSSClass(document.body, 'kt-aside--minimize-hover');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst perfectScrollbarOptions = {\n\t\t\twheelPropagation: false,\n\t\t\twheelSpeed: 2,\n\t\t};\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<button className=\"kt-aside-close\" id=\"kt_aside_close_btn\">\n\t\t\t\t\t<i className=\"la la-close\" />\n\t\t\t\t</button>\n\t\t\t\t<div\n\t\t\t\t\tref={this.asideOffCanvasRef}\n\t\t\t\t\tclassName=\"kt-aside kt-grid__item kt-grid kt-grid--desktop kt-grid--hor-desktop\"\n\t\t\t\t\tid=\"kt_aside\"\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"kt-aside-menu-wrapper kt-grid__item kt-grid__item--fluid\"\n\t\t\t\t\t\tid=\"kt_aside_menu_wrapper\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<PerfectScrollbar options={perfectScrollbarOptions}>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tref={this.asideMenuRef}\n\t\t\t\t\t\t\t\tstyle={{ maxHeight: '90vh', position: 'relative' }}\n\t\t\t\t\t\t\t\tid=\"kt_aside_menu\"\n\t\t\t\t\t\t\t\tclassName={`kt-aside-menu ${this.props.asideClassesFromConfig}`}\n\t\t\t\t\t\t\t\tdata-ktmenu-vertical=\"1\"\n\t\t\t\t\t\t\t\tonMouseEnter={this.mouseEnter}\n\t\t\t\t\t\t\t\tonMouseLeave={this.mouseLeave}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ul className={`kt-menu__nav ${this.props.ulClasses}`}>\n\t\t\t\t\t\t\t\t\t<MenuList\n\t\t\t\t\t\t\t\t\t\tcurrentUrl={this.currentUrl}\n\t\t\t\t\t\t\t\t\t\tmenuConfig={this.props.menuConfig}\n\t\t\t\t\t\t\t\t\t\tlayoutConfig={this.props.config}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</PerfectScrollbar>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = store => ({\n\tconfig: store.builder.layoutConfig,\n\tmenuConfig: store.builder.menuConfig,\n\tulClasses: builder.selectors.getClasses(store, {\n\t\tpath: 'aside_menu_nav',\n\t\ttoString: true,\n\t}),\n\tasideClassesFromConfig: builder.selectors.getClasses(store, {\n\t\tpath: 'aside_menu',\n\t\ttoString: true,\n\t}),\n\tmenuCanvasOptions: {\n\t\tbaseClass: 'kt-aside',\n\t\toverlay: true,\n\t\tcloseBy: 'kt_aside_close_btn',\n\t\ttoggleBy: {\n\t\t\ttarget: 'kt_aside_mobile_toggler',\n\t\t\tstate: 'kt-header-mobile__toolbar-toggler--active',\n\t\t},\n\t},\n});\nexport default withRouter(connect(mapStateToProps)(AsideLeft));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/utils/react-avatar-edit/src/avatar.jsx\";\nimport React from 'react';\nimport Konva from 'konva/lib/Core';\nimport 'konva/lib/shapes/Image';\nimport 'konva/lib/shapes/Circle';\nimport 'konva/lib/shapes/Rect';\nimport 'konva/lib/shapes/Path';\nimport 'konva/lib/Animation';\nimport 'konva/lib/DragAndDrop';\nimport { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nclass Avatar extends React.Component {\n  constructor(props) {\n    super(props);\n    const containerId = this.generateHash('avatar_container');\n    const loaderId = this.generateHash('avatar_loader');\n    this.onFileLoad = this.onFileLoad.bind(this);\n    this.onCloseClick = this.onCloseClick.bind(this);\n    this.state = {\n      imgWidth: 0,\n      imgHeight: 0,\n      scale: 1,\n      containerId,\n      loaderId,\n      lastMouseY: 0,\n      showLoader: !(this.props.src || this.props.img),\n      preview: ''\n    };\n  }\n\n  get lineWidth() {\n    return this.props.lineWidth;\n  }\n\n  get containerId() {\n    return this.state.containerId;\n  }\n\n  get closeIconColor() {\n    return this.props.closeIconColor;\n  }\n\n  get cropColor() {\n    return this.props.cropColor;\n  }\n\n  get loaderId() {\n    return this.state.loaderId;\n  }\n\n  get mimeTypes() {\n    return this.props.mimeTypes;\n  }\n\n  get backgroundColor() {\n    return this.props.backgroundColor;\n  }\n\n  get shadingColor() {\n    return this.props.shadingColor;\n  }\n\n  get shadingOpacity() {\n    return this.props.shadingOpacity;\n  }\n\n  get mobileScaleSpeed() {\n    return this.props.mobileScaleSpeed;\n  }\n\n  get cropRadius() {\n    return this.state.cropRadius;\n  }\n\n  get minCropRadius() {\n    return this.props.minCropRadius;\n  }\n\n  get scale() {\n    return this.state.scale;\n  }\n\n  get width() {\n    return this.state.imgWidth;\n  }\n\n  get halfWidth() {\n    return this.state.imgWidth / 2;\n  }\n\n  get height() {\n    return this.state.imgHeight;\n  }\n\n  get halfHeight() {\n    return this.state.imgHeight / 2;\n  }\n\n  get image() {\n    return this.state.image;\n  }\n\n  generateHash(prefix) {\n    const s4 = () => Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n\n    return prefix + '-' + s4() + '-' + s4() + '-' + s4();\n  }\n\n  onCloseCallback() {\n    this.props.onClose();\n  }\n\n  onCropCallback(img) {\n    this.setState({\n      preview: img\n    });\n    this.props.onCrop(img);\n  }\n\n  onFileLoadCallback(file) {\n    this.props.onFileLoad(file);\n  }\n\n  onBeforeFileLoadCallback(elem) {\n    this.props.onBeforeFileLoad(elem);\n  }\n\n  onImageLoadCallback(image) {\n    this.props.onImageLoad(image);\n  }\n\n  componentDidMount() {\n    if (this.state.showLoader) return;\n    const image = this.props.img || new Image();\n    if (!this.props.img && this.props.src) image.src = this.props.src;\n    this.setState({\n      image\n    }, () => {\n      if (this.image.complete) return this.init();\n\n      this.image.onload = () => {\n        this.onImageLoadCallback(this.image);\n        this.init();\n      };\n    });\n  }\n\n  onFileLoad(e) {\n    e.preventDefault();\n    this.onBeforeFileLoadCallback(e);\n    if (!e.target.value) return;\n    let reader = new FileReader();\n    let file = e.target.files[0];\n    this.onFileLoadCallback(file);\n    const image = new Image();\n    const ref = this;\n\n    reader.onloadend = () => {\n      image.src = reader.result;\n      ref.setState({\n        image,\n        file,\n        showLoader: false\n      }, () => {\n        if (ref.image.complete) return ref.init();\n\n        ref.image.onload = () => ref.init();\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  onCloseClick() {\n    this.setState({\n      showLoader: true\n    }, () => this.onCloseCallback());\n  }\n\n  onConfirmClick(preview) {\n    this.props.onConfirm(preview);\n  }\n\n  init() {\n    const {\n      height,\n      minCropRadius,\n      cropRadius\n    } = this.props;\n    const originalWidth = this.image.width;\n    const originalHeight = this.image.height;\n    const ration = originalHeight / originalWidth;\n    const {\n      imageWidth,\n      imageHeight\n    } = this.props;\n    let imgHeight;\n    let imgWidth;\n\n    if (imageHeight && imageWidth) {\n      console.warn('The imageWidth and imageHeight properties can not be set together, using only imageWidth.');\n    }\n\n    if (imageHeight && !imageWidth) {\n      imgHeight = imageHeight || originalHeight;\n      imgWidth = imgHeight / ration;\n    } else if (imageWidth) {\n      imgWidth = imageWidth;\n      imgHeight = imgWidth * ration || originalHeight;\n    } else {\n      imgHeight = height || originalHeight;\n      imgWidth = imgHeight / ration;\n    }\n\n    const scale = imgHeight / originalHeight;\n    const calculatedRadius = Math.max(minCropRadius, cropRadius || Math.min(imgWidth, imgHeight) / 3);\n    this.setState({\n      imgWidth,\n      imgHeight,\n      scale,\n      cropRadius: calculatedRadius\n    }, this.initCanvas);\n  }\n\n  initCanvas() {\n    const stage = this.initStage();\n    const background = this.initBackground();\n    const shading = this.initShading();\n    const crop = this.initCrop();\n    const cropStroke = this.initCropStroke();\n    const resize = this.initResize();\n    const resizeIcon = this.initResizeIcon();\n    const layer = new Konva.Layer();\n    layer.add(background);\n    layer.add(shading);\n    layer.add(cropStroke);\n    layer.add(crop);\n    layer.add(resize);\n    layer.add(resizeIcon);\n    stage.add(layer);\n\n    const scaledRadius = (scale = 0) => crop.radius() - scale;\n\n    const isLeftCorner = scale => crop.x() - scaledRadius(scale) < 0;\n\n    const calcLeft = () => crop.radius() + 1;\n\n    const isTopCorner = scale => crop.y() - scaledRadius(scale) < 0;\n\n    const calcTop = () => crop.radius() + 1;\n\n    const isRightCorner = scale => crop.x() + scaledRadius(scale) > stage.width();\n\n    const calcRight = () => stage.width() - crop.radius() - 1;\n\n    const isBottomCorner = scale => crop.y() + scaledRadius(scale) > stage.height();\n\n    const calcBottom = () => stage.height() - crop.radius() - 1;\n\n    const isNotOutOfScale = scale => !isLeftCorner(scale) && !isRightCorner(scale) && !isBottomCorner(scale) && !isTopCorner(scale);\n\n    const calcScaleRadius = scale => scaledRadius(scale) >= this.minCropRadius ? scale : crop.radius() - this.minCropRadius;\n\n    const calcResizerX = x => x + crop.radius() * 0.86;\n\n    const calcResizerY = y => y - crop.radius() * 0.5;\n\n    const moveResizer = (x, y) => {\n      resize.x(calcResizerX(x) - 8);\n      resize.y(calcResizerY(y) - 8);\n      resizeIcon.x(calcResizerX(x) - 8);\n      resizeIcon.y(calcResizerY(y) - 10);\n    };\n\n    const getPreview = () => crop.toDataURL({\n      x: crop.x() - crop.radius(),\n      y: crop.y() - crop.radius(),\n      width: crop.radius() * 2,\n      height: crop.radius() * 2\n    });\n\n    const onScaleCallback = scaleY => {\n      const scale = scaleY > 0 || isNotOutOfScale(scaleY) ? scaleY : 0;\n      cropStroke.radius(cropStroke.radius() - calcScaleRadius(scale));\n      crop.radius(crop.radius() - calcScaleRadius(scale));\n      resize.fire('resize');\n    };\n\n    this.onCropCallback(getPreview());\n    crop.on('dragmove', () => crop.fire('resize'));\n    crop.on('dragend', () => this.onCropCallback(getPreview()));\n    crop.on('resize', () => {\n      const x = isLeftCorner() ? calcLeft() : isRightCorner() ? calcRight() : crop.x();\n      const y = isTopCorner() ? calcTop() : isBottomCorner() ? calcBottom() : crop.y();\n      moveResizer(x, y);\n      crop.setFillPatternOffset({\n        x: x / this.scale,\n        y: y / this.scale\n      });\n      crop.x(x);\n      cropStroke.x(x);\n      crop.y(y);\n      cropStroke.y(y);\n    });\n    crop.on('mouseenter', () => stage.container().style.cursor = 'move');\n    crop.on('mouseleave', () => stage.container().style.cursor = 'default');\n    crop.on('dragstart', () => stage.container().style.cursor = 'move');\n    crop.on('dragend', () => stage.container().style.cursor = 'default');\n    resize.on('touchstart', evt => {\n      resize.on('dragmove', dragEvt => {\n        if (dragEvt.evt.type !== 'touchmove') return;\n        const scaleY = dragEvt.evt.changedTouches['0'].pageY - evt.evt.changedTouches['0'].pageY || 0;\n        onScaleCallback(scaleY * this.mobileScaleSpeed);\n      });\n    });\n    resize.on('dragmove', evt => {\n      if (evt.evt.type === 'touchmove') return;\n      const newMouseY = evt.evt.y;\n      const ieScaleFactor = newMouseY ? newMouseY - this.state.lastMouseY : undefined;\n      const scaleY = evt.evt.movementY || ieScaleFactor || 0;\n      this.setState({\n        lastMouseY: newMouseY\n      });\n      onScaleCallback(scaleY);\n    });\n    resize.on('dragend', () => this.onCropCallback(getPreview()));\n    resize.on('resize', () => moveResizer(crop.x(), crop.y()));\n    resize.on('mouseenter', () => stage.container().style.cursor = 'nesw-resize');\n    resize.on('mouseleave', () => stage.container().style.cursor = 'default');\n    resize.on('dragstart', evt => {\n      this.setState({\n        lastMouseY: evt.evt.y\n      });\n      stage.container().style.cursor = 'nesw-resize';\n    });\n    resize.on('dragend', () => stage.container().style.cursor = 'default');\n  }\n\n  initStage() {\n    return new Konva.Stage({\n      container: this.containerId,\n      width: this.width,\n      height: this.height\n    });\n  }\n\n  initBackground() {\n    return new Konva.Image({\n      x: 0,\n      y: 0,\n      width: this.width,\n      height: this.height,\n      image: this.image\n    });\n  }\n\n  initShading() {\n    return new Konva.Rect({\n      x: 0,\n      y: 0,\n      width: this.width,\n      height: this.height,\n      fill: this.shadingColor,\n      strokeWidth: 4,\n      opacity: this.shadingOpacity\n    });\n  }\n\n  initCrop() {\n    return new Konva.Circle({\n      x: this.halfWidth,\n      y: this.halfHeight,\n      radius: this.cropRadius,\n      fillPatternImage: this.image,\n      fillPatternOffset: {\n        x: this.halfWidth / this.scale,\n        y: this.halfHeight / this.scale\n      },\n      fillPatternScale: {\n        x: this.scale,\n        y: this.scale\n      },\n      opacity: 1,\n      draggable: true,\n      dashEnabled: true,\n      dash: [10, 5]\n    });\n  }\n\n  initCropStroke() {\n    return new Konva.Circle({\n      x: this.halfWidth,\n      y: this.halfHeight,\n      radius: this.cropRadius,\n      stroke: this.cropColor,\n      strokeWidth: this.lineWidth,\n      strokeScaleEnabled: true,\n      dashEnabled: true,\n      dash: [10, 5]\n    });\n  }\n\n  initResize() {\n    return new Konva.Rect({\n      x: this.halfWidth + this.cropRadius * 0.86 - 8,\n      y: this.halfHeight + this.cropRadius * -0.5 - 8,\n      width: 16,\n      height: 16,\n      draggable: true,\n      dragBoundFunc: function (pos) {\n        return {\n          x: this.getAbsolutePosition().x,\n          y: pos.y\n        };\n      }\n    });\n  }\n\n  initResizeIcon() {\n    return new Konva.Path({\n      x: this.halfWidth + this.cropRadius * 0.86 - 8,\n      y: this.halfHeight + this.cropRadius * -0.5 - 10,\n      data: 'M47.624,0.124l12.021,9.73L44.5,24.5l10,10l14.661-15.161l9.963,12.285v-31.5H47.624z M24.5,44.5   L9.847,59.653L0,47.5V79h31.5l-12.153-9.847L34.5,54.5L24.5,44.5z',\n      fill: this.cropColor,\n      scale: {\n        x: 0.2,\n        y: 0.2\n      }\n    });\n  }\n\n  render() {\n    const {\n      width,\n      height\n    } = this.props;\n    const style = {\n      display: 'flex',\n      justifyContent: 'center',\n      backgroundColor: this.backgroundColor,\n      width: width || this.width,\n      position: 'relative'\n    };\n    const inputStyle = {\n      width: 0.1,\n      height: 0.1,\n      opacity: 0,\n      overflow: 'hidden',\n      position: 'absolute',\n      zIndex: -1\n    };\n    const label = this.props.label;\n    const labelStyle = { ...this.props.labelStyle,\n      ...{\n        lineHeight: (height || 200) + 'px'\n      }\n    };\n    const borderStyle = { ...this.props.borderStyle,\n      ...{\n        width: width || 200,\n        height: height || 200\n      }\n    };\n    const closeBtnStyle = {\n      position: 'absolute',\n      zIndex: 999,\n      cursor: 'pointer',\n      left: '0px',\n      top: '0px',\n      padding: '5px'\n    };\n    const confirmBtnStyle = {\n      position: 'absolute',\n      zIndex: 999,\n      cursor: 'pointer',\n      right: '0px',\n      top: '0px',\n      padding: '5px'\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 4\n      }\n    }, this.state.showLoader ? /*#__PURE__*/React.createElement(\"div\", {\n      style: borderStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: e => this.onFileLoad(e),\n      name: this.loaderId,\n      type: \"file\",\n      id: this.loaderId,\n      style: inputStyle,\n      accept: this.mimeTypes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: this.loaderId,\n      style: labelStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 7\n      }\n    }, label)) : /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: this.onCloseClick,\n      style: closeBtnStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Cancel, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 8\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => this.onConfirmClick(this.state.preview),\n      style: confirmBtnStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CheckCircle, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 8\n      }\n    })), this.props.loading ? /*#__PURE__*/React.createElement(LoadingIndicator, {\n      wrapperStyle: {\n        position: 'absolute',\n        zIndex: '10'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 8\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"div\", {\n      id: this.containerId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 7\n      }\n    })));\n  }\n\n}\n\nAvatar.defaultProps = {\n  loading: false,\n  shadingColor: 'grey',\n  shadingOpacity: 0.6,\n  cropColor: 'white',\n  closeIconColor: 'white',\n  lineWidth: 4,\n  minCropRadius: 30,\n  backgroundColor: 'grey',\n  mimeTypes: 'image/jpeg,image/png',\n  mobileScaleSpeed: 0.5,\n  // experimental\n  onClose: () => {},\n  onCrop: () => {},\n  onFileLoad: () => {},\n  onImageLoad: () => {},\n  onBeforeFileLoad: () => {},\n  onConfirm: () => {},\n  label: 'Select picture',\n  labelStyle: {\n    fontSize: '1em',\n    fontWeight: '600',\n    color: 'black',\n    display: 'inline-block',\n    fontFamily: 'Poppins',\n    cursor: 'pointer'\n  },\n  borderStyle: {\n    border: '2px solid #979797',\n    borderStyle: 'dashed',\n    borderRadius: '50%',\n    textAlign: 'center'\n  }\n};\nexport default Avatar;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/utils/react-avatar-edit/src/avatar.jsx"],"names":["React","Konva","IconButton","CloseIcon","Cancel","CheckCircle","LoadingIndicator","Avatar","Component","constructor","props","containerId","generateHash","loaderId","onFileLoad","bind","onCloseClick","state","imgWidth","imgHeight","scale","lastMouseY","showLoader","src","img","preview","lineWidth","closeIconColor","cropColor","mimeTypes","backgroundColor","shadingColor","shadingOpacity","mobileScaleSpeed","cropRadius","minCropRadius","width","halfWidth","height","halfHeight","image","prefix","s4","Math","floor","random","toString","substring","onCloseCallback","onClose","onCropCallback","setState","onCrop","onFileLoadCallback","file","onBeforeFileLoadCallback","elem","onBeforeFileLoad","onImageLoadCallback","onImageLoad","componentDidMount","Image","complete","init","onload","e","preventDefault","target","value","reader","FileReader","files","ref","onloadend","result","readAsDataURL","onConfirmClick","onConfirm","originalWidth","originalHeight","ration","imageWidth","imageHeight","console","warn","calculatedRadius","max","min","initCanvas","stage","initStage","background","initBackground","shading","initShading","crop","initCrop","cropStroke","initCropStroke","resize","initResize","resizeIcon","initResizeIcon","layer","Layer","add","scaledRadius","radius","isLeftCorner","x","calcLeft","isTopCorner","y","calcTop","isRightCorner","calcRight","isBottomCorner","calcBottom","isNotOutOfScale","calcScaleRadius","calcResizerX","calcResizerY","moveResizer","getPreview","toDataURL","onScaleCallback","scaleY","fire","on","setFillPatternOffset","container","style","cursor","evt","dragEvt","type","changedTouches","pageY","newMouseY","ieScaleFactor","undefined","movementY","Stage","Rect","fill","strokeWidth","opacity","Circle","fillPatternImage","fillPatternOffset","fillPatternScale","draggable","dashEnabled","dash","stroke","strokeScaleEnabled","dragBoundFunc","pos","getAbsolutePosition","Path","data","render","display","justifyContent","position","inputStyle","overflow","zIndex","label","labelStyle","lineHeight","borderStyle","closeBtnStyle","left","top","padding","confirmBtnStyle","right","loading","defaultProps","fontSize","fontWeight","color","fontFamily","border","borderRadius","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Konva from 'konva/lib/Core';\nimport 'konva/lib/shapes/Image';\nimport 'konva/lib/shapes/Circle';\nimport 'konva/lib/shapes/Rect';\nimport 'konva/lib/shapes/Path';\nimport 'konva/lib/Animation';\nimport 'konva/lib/DragAndDrop';\nimport { IconButton } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Cancel, CheckCircle } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nclass Avatar extends React.Component {\n\tstatic defaultProps = {\n\t\tloading: false,\n\t\tshadingColor: 'grey',\n\t\tshadingOpacity: 0.6,\n\t\tcropColor: 'white',\n\t\tcloseIconColor: 'white',\n\t\tlineWidth: 4,\n\t\tminCropRadius: 30,\n\t\tbackgroundColor: 'grey',\n\t\tmimeTypes: 'image/jpeg,image/png',\n\t\tmobileScaleSpeed: 0.5, // experimental\n\t\tonClose: () => {},\n\t\tonCrop: () => {},\n\t\tonFileLoad: () => {},\n\t\tonImageLoad: () => {},\n\t\tonBeforeFileLoad: () => {},\n\t\tonConfirm: () => {},\n\t\tlabel: 'Select picture',\n\t\tlabelStyle: {\n\t\t\tfontSize: '1em',\n\t\t\tfontWeight: '600',\n\t\t\tcolor: 'black',\n\t\t\tdisplay: 'inline-block',\n\t\t\tfontFamily: 'Poppins',\n\t\t\tcursor: 'pointer',\n\t\t},\n\t\tborderStyle: {\n\t\t\tborder: '2px solid #979797',\n\t\t\tborderStyle: 'dashed',\n\t\t\tborderRadius: '50%',\n\t\t\ttextAlign: 'center',\n\t\t},\n\t};\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tconst containerId = this.generateHash('avatar_container');\n\t\tconst loaderId = this.generateHash('avatar_loader');\n\t\tthis.onFileLoad = this.onFileLoad.bind(this);\n\t\tthis.onCloseClick = this.onCloseClick.bind(this);\n\t\tthis.state = {\n\t\t\timgWidth: 0,\n\t\t\timgHeight: 0,\n\t\t\tscale: 1,\n\t\t\tcontainerId,\n\t\t\tloaderId,\n\t\t\tlastMouseY: 0,\n\t\t\tshowLoader: !(this.props.src || this.props.img),\n\t\t\tpreview: '',\n\t\t};\n\t}\n\n\tget lineWidth() {\n\t\treturn this.props.lineWidth;\n\t}\n\n\tget containerId() {\n\t\treturn this.state.containerId;\n\t}\n\n\tget closeIconColor() {\n\t\treturn this.props.closeIconColor;\n\t}\n\n\tget cropColor() {\n\t\treturn this.props.cropColor;\n\t}\n\n\tget loaderId() {\n\t\treturn this.state.loaderId;\n\t}\n\n\tget mimeTypes() {\n\t\treturn this.props.mimeTypes;\n\t}\n\n\tget backgroundColor() {\n\t\treturn this.props.backgroundColor;\n\t}\n\n\tget shadingColor() {\n\t\treturn this.props.shadingColor;\n\t}\n\n\tget shadingOpacity() {\n\t\treturn this.props.shadingOpacity;\n\t}\n\n\tget mobileScaleSpeed() {\n\t\treturn this.props.mobileScaleSpeed;\n\t}\n\n\tget cropRadius() {\n\t\treturn this.state.cropRadius;\n\t}\n\n\tget minCropRadius() {\n\t\treturn this.props.minCropRadius;\n\t}\n\n\tget scale() {\n\t\treturn this.state.scale;\n\t}\n\n\tget width() {\n\t\treturn this.state.imgWidth;\n\t}\n\n\tget halfWidth() {\n\t\treturn this.state.imgWidth / 2;\n\t}\n\n\tget height() {\n\t\treturn this.state.imgHeight;\n\t}\n\n\tget halfHeight() {\n\t\treturn this.state.imgHeight / 2;\n\t}\n\n\tget image() {\n\t\treturn this.state.image;\n\t}\n\n\tgenerateHash(prefix) {\n\t\tconst s4 = () =>\n\t\t\tMath.floor((1 + Math.random()) * 0x10000)\n\t\t\t\t.toString(16)\n\t\t\t\t.substring(1);\n\t\treturn prefix + '-' + s4() + '-' + s4() + '-' + s4();\n\t}\n\n\tonCloseCallback() {\n\t\tthis.props.onClose();\n\t}\n\n\tonCropCallback(img) {\n\t\tthis.setState({ preview: img });\n\t\tthis.props.onCrop(img);\n\t}\n\n\tonFileLoadCallback(file) {\n\t\tthis.props.onFileLoad(file);\n\t}\n\n\tonBeforeFileLoadCallback(elem) {\n\t\tthis.props.onBeforeFileLoad(elem);\n\t}\n\n\tonImageLoadCallback(image) {\n\t\tthis.props.onImageLoad(image);\n\t}\n\n\tcomponentDidMount() {\n\t\tif (this.state.showLoader) return;\n\n\t\tconst image = this.props.img || new Image();\n\t\tif (!this.props.img && this.props.src) image.src = this.props.src;\n\t\tthis.setState({ image }, () => {\n\t\t\tif (this.image.complete) return this.init();\n\t\t\tthis.image.onload = () => {\n\t\t\t\tthis.onImageLoadCallback(this.image);\n\t\t\t\tthis.init();\n\t\t\t};\n\t\t});\n\t}\n\n\tonFileLoad(e) {\n\t\te.preventDefault();\n\n\t\tthis.onBeforeFileLoadCallback(e);\n\t\tif (!e.target.value) return;\n\n\t\tlet reader = new FileReader();\n\t\tlet file = e.target.files[0];\n\n\t\tthis.onFileLoadCallback(file);\n\n\t\tconst image = new Image();\n\t\tconst ref = this;\n\t\treader.onloadend = () => {\n\t\t\timage.src = reader.result;\n\n\t\t\tref.setState({ image, file, showLoader: false }, () => {\n\t\t\t\tif (ref.image.complete) return ref.init();\n\t\t\t\tref.image.onload = () => ref.init();\n\t\t\t});\n\t\t};\n\t\treader.readAsDataURL(file);\n\t}\n\n\tonCloseClick() {\n\t\tthis.setState({ showLoader: true }, () => this.onCloseCallback());\n\t}\n\n\tonConfirmClick(preview) {\n\t\tthis.props.onConfirm(preview);\n\t}\n\n\tinit() {\n\t\tconst { height, minCropRadius, cropRadius } = this.props;\n\t\tconst originalWidth = this.image.width;\n\t\tconst originalHeight = this.image.height;\n\t\tconst ration = originalHeight / originalWidth;\n\t\tconst { imageWidth, imageHeight } = this.props;\n\t\tlet imgHeight;\n\t\tlet imgWidth;\n\n\t\tif (imageHeight && imageWidth) {\n\t\t\tconsole.warn('The imageWidth and imageHeight properties can not be set together, using only imageWidth.');\n\t\t}\n\n\t\tif (imageHeight && !imageWidth) {\n\t\t\timgHeight = imageHeight || originalHeight;\n\t\t\timgWidth = imgHeight / ration;\n\t\t} else if (imageWidth) {\n\t\t\timgWidth = imageWidth;\n\t\t\timgHeight = imgWidth * ration || originalHeight;\n\t\t} else {\n\t\t\timgHeight = height || originalHeight;\n\t\t\timgWidth = imgHeight / ration;\n\t\t}\n\n\t\tconst scale = imgHeight / originalHeight;\n\t\tconst calculatedRadius = Math.max(minCropRadius, cropRadius || Math.min(imgWidth, imgHeight) / 3);\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\timgWidth,\n\t\t\t\timgHeight,\n\t\t\t\tscale,\n\t\t\t\tcropRadius: calculatedRadius,\n\t\t\t},\n\t\t\tthis.initCanvas,\n\t\t);\n\t}\n\n\tinitCanvas() {\n\t\tconst stage = this.initStage();\n\t\tconst background = this.initBackground();\n\t\tconst shading = this.initShading();\n\t\tconst crop = this.initCrop();\n\t\tconst cropStroke = this.initCropStroke();\n\t\tconst resize = this.initResize();\n\t\tconst resizeIcon = this.initResizeIcon();\n\n\t\tconst layer = new Konva.Layer();\n\n\t\tlayer.add(background);\n\t\tlayer.add(shading);\n\t\tlayer.add(cropStroke);\n\t\tlayer.add(crop);\n\n\t\tlayer.add(resize);\n\t\tlayer.add(resizeIcon);\n\n\t\tstage.add(layer);\n\n\t\tconst scaledRadius = (scale = 0) => crop.radius() - scale;\n\t\tconst isLeftCorner = scale => crop.x() - scaledRadius(scale) < 0;\n\t\tconst calcLeft = () => crop.radius() + 1;\n\t\tconst isTopCorner = scale => crop.y() - scaledRadius(scale) < 0;\n\t\tconst calcTop = () => crop.radius() + 1;\n\t\tconst isRightCorner = scale => crop.x() + scaledRadius(scale) > stage.width();\n\t\tconst calcRight = () => stage.width() - crop.radius() - 1;\n\t\tconst isBottomCorner = scale => crop.y() + scaledRadius(scale) > stage.height();\n\t\tconst calcBottom = () => stage.height() - crop.radius() - 1;\n\t\tconst isNotOutOfScale = scale =>\n\t\t\t!isLeftCorner(scale) && !isRightCorner(scale) && !isBottomCorner(scale) && !isTopCorner(scale);\n\t\tconst calcScaleRadius = scale =>\n\t\t\tscaledRadius(scale) >= this.minCropRadius ? scale : crop.radius() - this.minCropRadius;\n\t\tconst calcResizerX = x => x + crop.radius() * 0.86;\n\t\tconst calcResizerY = y => y - crop.radius() * 0.5;\n\t\tconst moveResizer = (x, y) => {\n\t\t\tresize.x(calcResizerX(x) - 8);\n\t\t\tresize.y(calcResizerY(y) - 8);\n\t\t\tresizeIcon.x(calcResizerX(x) - 8);\n\t\t\tresizeIcon.y(calcResizerY(y) - 10);\n\t\t};\n\n\t\tconst getPreview = () =>\n\t\t\tcrop.toDataURL({\n\t\t\t\tx: crop.x() - crop.radius(),\n\t\t\t\ty: crop.y() - crop.radius(),\n\t\t\t\twidth: crop.radius() * 2,\n\t\t\t\theight: crop.radius() * 2,\n\t\t\t});\n\n\t\tconst onScaleCallback = scaleY => {\n\t\t\tconst scale = scaleY > 0 || isNotOutOfScale(scaleY) ? scaleY : 0;\n\t\t\tcropStroke.radius(cropStroke.radius() - calcScaleRadius(scale));\n\t\t\tcrop.radius(crop.radius() - calcScaleRadius(scale));\n\t\t\tresize.fire('resize');\n\t\t};\n\n\t\tthis.onCropCallback(getPreview());\n\n\t\tcrop.on('dragmove', () => crop.fire('resize'));\n\t\tcrop.on('dragend', () => this.onCropCallback(getPreview()));\n\n\t\tcrop.on('resize', () => {\n\t\t\tconst x = isLeftCorner() ? calcLeft() : isRightCorner() ? calcRight() : crop.x();\n\t\t\tconst y = isTopCorner() ? calcTop() : isBottomCorner() ? calcBottom() : crop.y();\n\t\t\tmoveResizer(x, y);\n\t\t\tcrop.setFillPatternOffset({ x: x / this.scale, y: y / this.scale });\n\t\t\tcrop.x(x);\n\t\t\tcropStroke.x(x);\n\t\t\tcrop.y(y);\n\t\t\tcropStroke.y(y);\n\t\t});\n\n\t\tcrop.on('mouseenter', () => (stage.container().style.cursor = 'move'));\n\t\tcrop.on('mouseleave', () => (stage.container().style.cursor = 'default'));\n\t\tcrop.on('dragstart', () => (stage.container().style.cursor = 'move'));\n\t\tcrop.on('dragend', () => (stage.container().style.cursor = 'default'));\n\n\t\tresize.on('touchstart', evt => {\n\t\t\tresize.on('dragmove', dragEvt => {\n\t\t\t\tif (dragEvt.evt.type !== 'touchmove') return;\n\t\t\t\tconst scaleY = dragEvt.evt.changedTouches['0'].pageY - evt.evt.changedTouches['0'].pageY || 0;\n\t\t\t\tonScaleCallback(scaleY * this.mobileScaleSpeed);\n\t\t\t});\n\t\t});\n\n\t\tresize.on('dragmove', evt => {\n\t\t\tif (evt.evt.type === 'touchmove') return;\n\t\t\tconst newMouseY = evt.evt.y;\n\t\t\tconst ieScaleFactor = newMouseY ? newMouseY - this.state.lastMouseY : undefined;\n\t\t\tconst scaleY = evt.evt.movementY || ieScaleFactor || 0;\n\t\t\tthis.setState({\n\t\t\t\tlastMouseY: newMouseY,\n\t\t\t});\n\t\t\tonScaleCallback(scaleY);\n\t\t});\n\t\tresize.on('dragend', () => this.onCropCallback(getPreview()));\n\n\t\tresize.on('resize', () => moveResizer(crop.x(), crop.y()));\n\n\t\tresize.on('mouseenter', () => (stage.container().style.cursor = 'nesw-resize'));\n\t\tresize.on('mouseleave', () => (stage.container().style.cursor = 'default'));\n\t\tresize.on('dragstart', evt => {\n\t\t\tthis.setState({\n\t\t\t\tlastMouseY: evt.evt.y,\n\t\t\t});\n\t\t\tstage.container().style.cursor = 'nesw-resize';\n\t\t});\n\t\tresize.on('dragend', () => (stage.container().style.cursor = 'default'));\n\t}\n\n\tinitStage() {\n\t\treturn new Konva.Stage({\n\t\t\tcontainer: this.containerId,\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t});\n\t}\n\n\tinitBackground() {\n\t\treturn new Konva.Image({\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\timage: this.image,\n\t\t});\n\t}\n\n\tinitShading() {\n\t\treturn new Konva.Rect({\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.width,\n\t\t\theight: this.height,\n\t\t\tfill: this.shadingColor,\n\t\t\tstrokeWidth: 4,\n\t\t\topacity: this.shadingOpacity,\n\t\t});\n\t}\n\n\tinitCrop() {\n\t\treturn new Konva.Circle({\n\t\t\tx: this.halfWidth,\n\t\t\ty: this.halfHeight,\n\t\t\tradius: this.cropRadius,\n\t\t\tfillPatternImage: this.image,\n\t\t\tfillPatternOffset: {\n\t\t\t\tx: this.halfWidth / this.scale,\n\t\t\t\ty: this.halfHeight / this.scale,\n\t\t\t},\n\t\t\tfillPatternScale: {\n\t\t\t\tx: this.scale,\n\t\t\t\ty: this.scale,\n\t\t\t},\n\t\t\topacity: 1,\n\t\t\tdraggable: true,\n\t\t\tdashEnabled: true,\n\t\t\tdash: [10, 5],\n\t\t});\n\t}\n\n\tinitCropStroke() {\n\t\treturn new Konva.Circle({\n\t\t\tx: this.halfWidth,\n\t\t\ty: this.halfHeight,\n\t\t\tradius: this.cropRadius,\n\t\t\tstroke: this.cropColor,\n\t\t\tstrokeWidth: this.lineWidth,\n\t\t\tstrokeScaleEnabled: true,\n\t\t\tdashEnabled: true,\n\t\t\tdash: [10, 5],\n\t\t});\n\t}\n\n\tinitResize() {\n\t\treturn new Konva.Rect({\n\t\t\tx: this.halfWidth + this.cropRadius * 0.86 - 8,\n\t\t\ty: this.halfHeight + this.cropRadius * -0.5 - 8,\n\t\t\twidth: 16,\n\t\t\theight: 16,\n\t\t\tdraggable: true,\n\t\t\tdragBoundFunc: function(pos) {\n\t\t\t\treturn {\n\t\t\t\t\tx: this.getAbsolutePosition().x,\n\t\t\t\t\ty: pos.y,\n\t\t\t\t};\n\t\t\t},\n\t\t});\n\t}\n\n\tinitResizeIcon() {\n\t\treturn new Konva.Path({\n\t\t\tx: this.halfWidth + this.cropRadius * 0.86 - 8,\n\t\t\ty: this.halfHeight + this.cropRadius * -0.5 - 10,\n\t\t\tdata:\n\t\t\t\t'M47.624,0.124l12.021,9.73L44.5,24.5l10,10l14.661-15.161l9.963,12.285v-31.5H47.624z M24.5,44.5   L9.847,59.653L0,47.5V79h31.5l-12.153-9.847L34.5,54.5L24.5,44.5z',\n\t\t\tfill: this.cropColor,\n\t\t\tscale: {\n\t\t\t\tx: 0.2,\n\t\t\t\ty: 0.2,\n\t\t\t},\n\t\t});\n\t}\n\n\trender() {\n\t\tconst { width, height } = this.props;\n\n\t\tconst style = {\n\t\t\tdisplay: 'flex',\n\t\t\tjustifyContent: 'center',\n\t\t\tbackgroundColor: this.backgroundColor,\n\t\t\twidth: width || this.width,\n\t\t\tposition: 'relative',\n\t\t};\n\n\t\tconst inputStyle = {\n\t\t\twidth: 0.1,\n\t\t\theight: 0.1,\n\t\t\topacity: 0,\n\t\t\toverflow: 'hidden',\n\t\t\tposition: 'absolute',\n\t\t\tzIndex: -1,\n\t\t};\n\n\t\tconst label = this.props.label;\n\n\t\tconst labelStyle = { ...this.props.labelStyle, ...{ lineHeight: (height || 200) + 'px' } };\n\n\t\tconst borderStyle = {\n\t\t\t...this.props.borderStyle,\n\t\t\t...{\n\t\t\t\twidth: width || 200,\n\t\t\t\theight: height || 200,\n\t\t\t},\n\t\t};\n\n\t\tconst closeBtnStyle = {\n\t\t\tposition: 'absolute',\n\t\t\tzIndex: 999,\n\t\t\tcursor: 'pointer',\n\t\t\tleft: '0px',\n\t\t\ttop: '0px',\n\t\t\tpadding: '5px',\n\t\t};\n\n\t\tconst confirmBtnStyle = {\n\t\t\tposition: 'absolute',\n\t\t\tzIndex: 999,\n\t\t\tcursor: 'pointer',\n\t\t\tright: '0px',\n\t\t\ttop: '0px',\n\t\t\tpadding: '5px',\n\t\t};\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{this.state.showLoader ? (\n\t\t\t\t\t<div style={borderStyle}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tonChange={e => this.onFileLoad(e)}\n\t\t\t\t\t\t\tname={this.loaderId}\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tid={this.loaderId}\n\t\t\t\t\t\t\tstyle={inputStyle}\n\t\t\t\t\t\t\taccept={this.mimeTypes}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={this.loaderId} style={labelStyle}>\n\t\t\t\t\t\t\t{label}\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div style={style}>\n\t\t\t\t\t\t<IconButton onClick={this.onCloseClick} style={closeBtnStyle}>\n\t\t\t\t\t\t\t<Cancel color=\"error\"></Cancel>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton onClick={() => this.onConfirmClick(this.state.preview)} style={confirmBtnStyle}>\n\t\t\t\t\t\t\t<CheckCircle color=\"primary\"></CheckCircle>\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t\t{this.props.loading ? (\n\t\t\t\t\t\t\t<LoadingIndicator wrapperStyle={{ position: 'absolute', zIndex: '10' }}></LoadingIndicator>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<div id={this.containerId} />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default Avatar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/components/ProfileStatusPanel/index.js\";\nimport React from 'react';\nimport LeaveComment from '../../../../components/UserProfile/LeaveComment';\nimport CommentSection from 'app/views/components/UserProfile/CommentSection';\nimport { useQuery, useMutation } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport UserMutations from 'graphql/mutations/User';\n\nfunction ProfileStatusPanel(props) {\n  const {\n    isOwner,\n    userId\n  } = props;\n  const wallPostsRes = useQuery(UserQueries.GET_WALL_POSTS, {\n    variables: {\n      userId: userId\n    }\n  });\n  const [postComment, postCommentRes] = useMutation(UserMutations.POST_COMMENT, {\n    onCompleted: () => {\n      wallPostsRes.refetch();\n    }\n  });\n  let posts = [];\n\n  if (wallPostsRes.data) {\n    posts = wallPostsRes.data.getWallPosts.posts;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(LeaveComment, {\n    userId: userId,\n    loading: postCommentRes.loading,\n    postComment: postComment,\n    isOwner: isOwner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(CommentSection, {\n    posts: posts,\n    loading: wallPostsRes.loading,\n    userId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default ProfileStatusPanel;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/components/ProfileStatusPanel/index.js"],"names":["React","LeaveComment","CommentSection","useQuery","useMutation","UserQueries","UserMutations","ProfileStatusPanel","props","isOwner","userId","wallPostsRes","GET_WALL_POSTS","variables","postComment","postCommentRes","POST_COMMENT","onCompleted","refetch","posts","data","getWallPosts","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iDAAzB;AACA,OAAOC,cAAP,MAA2B,iDAA3B;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,gBAAtC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAClC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAsBF,KAA5B;AACA,QAAMG,YAAY,GAAGR,QAAQ,CAACE,WAAW,CAACO,cAAb,EAA6B;AAAEC,IAAAA,SAAS,EAAE;AAAEH,MAAAA,MAAM,EAAEA;AAAV;AAAb,GAA7B,CAA7B;AACA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCX,WAAW,CAACE,aAAa,CAACU,YAAf,EAA6B;AAC7EC,IAAAA,WAAW,EAAE,MAAM;AAClBN,MAAAA,YAAY,CAACO,OAAb;AACA;AAH4E,GAA7B,CAAjD;AAMA,MAAIC,KAAK,GAAG,EAAZ;;AACA,MAAIR,YAAY,CAACS,IAAjB,EAAuB;AACtBD,IAAAA,KAAK,GAAGR,YAAY,CAACS,IAAb,CAAkBC,YAAlB,CAA+BF,KAAvC;AACA;;AAED,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,YAAD;AACC,IAAA,MAAM,EAAET,MADT;AAEC,IAAA,OAAO,EAAEK,cAAc,CAACO,OAFzB;AAGC,IAAA,WAAW,EAAER,WAHd;AAIC,IAAA,OAAO,EAAEL,OAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAOC,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEU,KAAvB;AAA8B,IAAA,OAAO,EAAER,YAAY,CAACW,OAApD;AAA6D,IAAA,MAAM,EAAEZ,MAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,CADD;AAWA;;AAED,eAAeH,kBAAf","sourcesContent":["import React from 'react';\nimport LeaveComment from '../../../../components/UserProfile/LeaveComment';\nimport CommentSection from 'app/views/components/UserProfile/CommentSection';\nimport { useQuery, useMutation } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport UserMutations from 'graphql/mutations/User';\n\nfunction ProfileStatusPanel(props) {\n\tconst { isOwner, userId } = props;\n\tconst wallPostsRes = useQuery(UserQueries.GET_WALL_POSTS, { variables: { userId: userId } });\n\tconst [postComment, postCommentRes] = useMutation(UserMutations.POST_COMMENT, {\n\t\tonCompleted: () => {\n\t\t\twallPostsRes.refetch();\n\t\t},\n\t});\n\n\tlet posts = [];\n\tif (wallPostsRes.data) {\n\t\tposts = wallPostsRes.data.getWallPosts.posts;\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<LeaveComment\n\t\t\t\tuserId={userId}\n\t\t\t\tloading={postCommentRes.loading}\n\t\t\t\tpostComment={postComment}\n\t\t\t\tisOwner={isOwner}\n\t\t\t></LeaveComment>\n\t\t\t<CommentSection posts={posts} loading={wallPostsRes.loading} userId={userId}></CommentSection>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default ProfileStatusPanel;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import objectPath from 'object-path';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport LayoutConfig from 'app/themes/_metronic/layout/LayoutConfig';\nimport MenuConfig from 'app/themes/_metronic/layout/MenuConfig'; // import types from './types';\n\nexport const actionTypes = {\n  SetMenuConfig: 'builder/SET_MENU_CONFIG',\n  SetLayoutConfigs: 'builder/SET_LAYOUT_CONFIGS',\n  SetLayoutConfigsWithPageRefresh: 'builder/SET_LAYOUT_CONFIGS_WITH_PAGE_REFRESH',\n  SetHtmlClassService: 'builder/SET_HTML_CLASS_SERVICE'\n};\nexport const selectors = {\n  getClasses: (store, params) => {\n    const {\n      htmlClassServiceObjects\n    } = store.builder;\n    return htmlClassServiceObjects ? htmlClassServiceObjects.getClasses(params.path, params.toString) : '';\n  },\n  getConfig: (state, path) => {\n    const {\n      layoutConfig\n    } = state.builder;\n\n    if (path) {\n      // if path is specified, get the value within object\n      return objectPath.get(layoutConfig, path);\n    }\n\n    return '';\n  },\n  getLogo: ({\n    builder: {\n      layoutConfig\n    }\n  }) => {\n    const menuAsideLeftSkin = objectPath.get(layoutConfig, 'brand.self.skin'); // set brand logo\n\n    const logoObject = objectPath.get(layoutConfig, 'self.logo');\n    let logo;\n\n    if (typeof logoObject === 'string') {\n      logo = logoObject;\n    }\n\n    if (typeof logoObject === 'object') {\n      logo = objectPath.get(logoObject, menuAsideLeftSkin + '');\n    }\n\n    if (typeof logo === 'undefined') {\n      try {\n        const logos = objectPath.get(this.layoutConfig, 'self.logo');\n        logo = logos[Object.keys(logos)[0]];\n      } catch (e) {}\n    }\n\n    return logo;\n  },\n  getStickyLogo: store => {\n    const {\n      layoutConfig\n    } = store.builder;\n    let logo = objectPath.get(layoutConfig, 'self.logo.sticky');\n\n    if (typeof logo === 'undefined') {\n      logo = selectors.getLogo(store);\n    }\n\n    return logo + '';\n  }\n};\nconst initialState = {\n  menuConfig: MenuConfig,\n  layoutConfig: LayoutConfig,\n  htmlClassServiceObjects: undefined\n};\nexport const reducer = persistReducer({\n  storage,\n  key: 'nxt-builder',\n  blacklist: ['htmlClassServiceObjects']\n}, (state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case actionTypes.SetMenuConfig:\n      return { ...state,\n        menuConfig: payload\n      };\n\n    case actionTypes.SetLayoutConfigs:\n      return { ...state,\n        layoutConfig: payload\n      };\n\n    case actionTypes.SetLayoutConfigsWithPageRefresh:\n      {\n        return { ...state,\n          layoutConfig: payload\n        };\n      }\n\n    case actionTypes.SetHtmlClassService:\n      return { ...state,\n        htmlClassServiceObjects: payload\n      };\n\n    default:\n      return state;\n  }\n});\nexport const actions = {\n  setMenuConfig: payload => ({\n    payload,\n    type: actionTypes.SetMenuConfig\n  }),\n  setLayoutConfigs: payload => ({\n    payload,\n    type: actionTypes.SetLayoutConfigs\n  }),\n  setLayoutConfigsWithPageRefresh: payload => ({\n    payload,\n    type: actionTypes.SetLayoutConfigsWithPageRefresh\n  }),\n  setHtmlClassService: payload => ({\n    payload,\n    type: actionTypes.SetHtmlClassService\n  })\n};\nexport default reducer;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/state/ducks/layout/builder.js"],"names":["objectPath","persistReducer","storage","LayoutConfig","MenuConfig","actionTypes","SetMenuConfig","SetLayoutConfigs","SetLayoutConfigsWithPageRefresh","SetHtmlClassService","selectors","getClasses","store","params","htmlClassServiceObjects","builder","path","toString","getConfig","state","layoutConfig","get","getLogo","menuAsideLeftSkin","logoObject","logo","logos","Object","keys","e","getStickyLogo","initialState","menuConfig","undefined","reducer","key","blacklist","type","payload","actions","setMenuConfig","setLayoutConfigs","setLayoutConfigsWithPageRefresh","setHtmlClassService"],"mappings":"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","sourcesContent":["import objectPath from 'object-path';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport LayoutConfig from 'app/themes/_metronic/layout/LayoutConfig';\nimport MenuConfig from 'app/themes/_metronic/layout/MenuConfig';\n// import types from './types';\n\nexport const actionTypes = {\n\tSetMenuConfig: 'builder/SET_MENU_CONFIG',\n\tSetLayoutConfigs: 'builder/SET_LAYOUT_CONFIGS',\n\tSetLayoutConfigsWithPageRefresh: 'builder/SET_LAYOUT_CONFIGS_WITH_PAGE_REFRESH',\n\tSetHtmlClassService: 'builder/SET_HTML_CLASS_SERVICE',\n};\n\nexport const selectors = {\n\tgetClasses: (store, params) => {\n\t\tconst { htmlClassServiceObjects } = store.builder;\n\n\t\treturn htmlClassServiceObjects ? htmlClassServiceObjects.getClasses(params.path, params.toString) : '';\n\t},\n\n\tgetConfig: (state, path) => {\n\t\tconst { layoutConfig } = state.builder;\n\n\t\tif (path) {\n\t\t\t// if path is specified, get the value within object\n\t\t\treturn objectPath.get(layoutConfig, path);\n\t\t}\n\n\t\treturn '';\n\t},\n\n\tgetLogo: ({ builder: { layoutConfig } }) => {\n\t\tconst menuAsideLeftSkin = objectPath.get(layoutConfig, 'brand.self.skin');\n\t\t// set brand logo\n\t\tconst logoObject = objectPath.get(layoutConfig, 'self.logo');\n\t\tlet logo;\n\t\tif (typeof logoObject === 'string') {\n\t\t\tlogo = logoObject;\n\t\t}\n\n\t\tif (typeof logoObject === 'object') {\n\t\t\tlogo = objectPath.get(logoObject, menuAsideLeftSkin + '');\n\t\t}\n\n\t\tif (typeof logo === 'undefined') {\n\t\t\ttry {\n\t\t\t\tconst logos = objectPath.get(this.layoutConfig, 'self.logo');\n\t\t\t\tlogo = logos[Object.keys(logos)[0]];\n\t\t\t} catch (e) {}\n\t\t}\n\t\treturn logo;\n\t},\n\n\tgetStickyLogo: store => {\n\t\tconst { layoutConfig } = store.builder;\n\t\tlet logo = objectPath.get(layoutConfig, 'self.logo.sticky');\n\t\tif (typeof logo === 'undefined') {\n\t\t\tlogo = selectors.getLogo(store);\n\t\t}\n\t\treturn logo + '';\n\t},\n};\n\nconst initialState = {\n\tmenuConfig: MenuConfig,\n\tlayoutConfig: LayoutConfig,\n\thtmlClassServiceObjects: undefined,\n};\n\nexport const reducer = persistReducer(\n\t{\n\t\tstorage,\n\t\tkey: 'nxt-builder',\n\t\tblacklist: ['htmlClassServiceObjects'],\n\t},\n\t(state = initialState, { type, payload }) => {\n\t\tswitch (type) {\n\t\t\tcase actionTypes.SetMenuConfig:\n\t\t\t\treturn { ...state, menuConfig: payload };\n\n\t\t\tcase actionTypes.SetLayoutConfigs:\n\t\t\t\treturn { ...state, layoutConfig: payload };\n\n\t\t\tcase actionTypes.SetLayoutConfigsWithPageRefresh: {\n\t\t\t\treturn { ...state, layoutConfig: payload };\n\t\t\t}\n\t\t\tcase actionTypes.SetHtmlClassService:\n\t\t\t\treturn { ...state, htmlClassServiceObjects: payload };\n\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n\t},\n);\n\nexport const actions = {\n\tsetMenuConfig: payload => ({ payload, type: actionTypes.SetMenuConfig }),\n\n\tsetLayoutConfigs: payload => ({\n\t\tpayload,\n\t\ttype: actionTypes.SetLayoutConfigs,\n\t}),\n\n\tsetLayoutConfigsWithPageRefresh: payload => ({\n\t\tpayload,\n\t\ttype: actionTypes.SetLayoutConfigsWithPageRefresh,\n\t}),\n\n\tsetHtmlClassService: payload => ({\n\t\tpayload,\n\t\ttype: actionTypes.SetHtmlClassService,\n\t}),\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}
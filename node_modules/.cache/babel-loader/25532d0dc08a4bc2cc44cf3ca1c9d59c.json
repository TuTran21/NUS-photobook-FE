{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/QuestionTypeDropdown.js\";\nimport React from 'react';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\nconst questionTypes = [{\n  label: 'Match Heading',\n  tooltip: 'The question type that examinee has to select options, usually paragraphs, that best fit the description',\n  value: 'matchHeading'\n}, {\n  label: 'Fill in Gap',\n  tooltip: 'The question type that examinee has to fill in empty gaps, which completes sentences meaning based on content from the passage.',\n  value: 'fillInGap'\n}, {\n  label: 'List Selection',\n  tooltip: 'The question has multiple options listed, requires examinee to choose correct options according to the passage.',\n  value: 'listSelection'\n}, {\n  label: 'True - False - Not given',\n  tooltip: 'The question requires examinee to read the passage and determine whether the information in the questions are either true, false or not given.',\n  value: 'TFN'\n}, {\n  label: 'Multiple Choice',\n  tooltip: 'The question has usually three choices from which the examinee has to choose one that best suits the content from the passage.',\n  value: 'multipleChoice'\n}];\n\nfunction QuestionTypeDropdown(props) {\n  const {\n    questionType = 'matchHeading',\n    handleChangeQuestionType\n  } = props;\n\n  const handleChange = event => {\n    const value = event.target.value;\n    handleChangeQuestionType(value);\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    variant: \"outlined\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-age-native-simple\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }\n  }, \"Question Type\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: questionType,\n    onChange: handleChange,\n    label: \"Question Type\",\n    inputProps: {\n      name: 'question type',\n      id: 'outlined-age-native-simple'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, questionTypes.map((type, idx) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: type.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, type.label);\n  })));\n}\n\nexport default QuestionTypeDropdown;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/QuestionTypeDropdown.js"],"names":["React","FormControl","InputLabel","Select","questionTypes","label","tooltip","value","QuestionTypeDropdown","props","questionType","handleChangeQuestionType","handleChange","event","target","name","id","map","type","idx"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,mBAAhD;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,KAAK,EAAE,eADR;AAECC,EAAAA,OAAO,EACN,0GAHF;AAICC,EAAAA,KAAK,EAAE;AAJR,CADqB,EAOrB;AACCF,EAAAA,KAAK,EAAE,aADR;AAECC,EAAAA,OAAO,EACN,iIAHF;AAICC,EAAAA,KAAK,EAAE;AAJR,CAPqB,EAarB;AACCF,EAAAA,KAAK,EAAE,gBADR;AAECC,EAAAA,OAAO,EACN,iHAHF;AAICC,EAAAA,KAAK,EAAE;AAJR,CAbqB,EAmBrB;AACCF,EAAAA,KAAK,EAAE,0BADR;AAECC,EAAAA,OAAO,EACN,gJAHF;AAICC,EAAAA,KAAK,EAAE;AAJR,CAnBqB,EAyBrB;AACCF,EAAAA,KAAK,EAAE,iBADR;AAECC,EAAAA,OAAO,EACN,gIAHF;AAICC,EAAAA,KAAK,EAAE;AAJR,CAzBqB,CAAtB;;AAiCA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AACpC,QAAM;AAAEC,IAAAA,YAAY,GAAG,cAAjB;AAAiCC,IAAAA;AAAjC,MAA8DF,KAApE;;AACA,QAAMG,YAAY,GAAGC,KAAK,IAAI;AAC7B,UAAMN,KAAK,GAAGM,KAAK,CAACC,MAAN,CAAaP,KAA3B;AACAI,IAAAA,wBAAwB,CAACJ,KAAD,CAAxB;AACA;AACA,GAJD;;AAKA,sBACC,oBAAC,WAAD;AAAa,IAAA,OAAO,EAAC,UAArB;AAAgC,IAAA,SAAS,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,4BAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC,oBAAC,MAAD;AACC,IAAA,MAAM,MADP;AAEC,IAAA,KAAK,EAAEG,YAFR;AAGC,IAAA,QAAQ,EAAEE,YAHX;AAIC,IAAA,KAAK,EAAC,eAJP;AAKC,IAAA,UAAU,EAAE;AACXG,MAAAA,IAAI,EAAE,eADK;AAEXC,MAAAA,EAAE,EAAE;AAFO,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUEZ,aAAa,CAACa,GAAd,CAAkB,CAACC,IAAD,EAAOC,GAAP,KAAe;AACjC,wBACC;AAAQ,MAAA,GAAG,EAAEA,GAAb;AAAkB,MAAA,KAAK,EAAED,IAAI,CAACX,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEW,IAAI,CAACb,KADP,CADD;AAKA,GANA,CAVF,CAFD,CADD;AAuBA;;AAED,eAAeG,oBAAf","sourcesContent":["import React from 'react';\nimport { FormControl, InputLabel, Select } from '@material-ui/core';\n\nconst questionTypes = [\n\t{\n\t\tlabel: 'Match Heading',\n\t\ttooltip:\n\t\t\t'The question type that examinee has to select options, usually paragraphs, that best fit the description',\n\t\tvalue: 'matchHeading',\n\t},\n\t{\n\t\tlabel: 'Fill in Gap',\n\t\ttooltip:\n\t\t\t'The question type that examinee has to fill in empty gaps, which completes sentences meaning based on content from the passage.',\n\t\tvalue: 'fillInGap',\n\t},\n\t{\n\t\tlabel: 'List Selection',\n\t\ttooltip:\n\t\t\t'The question has multiple options listed, requires examinee to choose correct options according to the passage.',\n\t\tvalue: 'listSelection',\n\t},\n\t{\n\t\tlabel: 'True - False - Not given',\n\t\ttooltip:\n\t\t\t'The question requires examinee to read the passage and determine whether the information in the questions are either true, false or not given.',\n\t\tvalue: 'TFN',\n\t},\n\t{\n\t\tlabel: 'Multiple Choice',\n\t\ttooltip:\n\t\t\t'The question has usually three choices from which the examinee has to choose one that best suits the content from the passage.',\n\t\tvalue: 'multipleChoice',\n\t},\n];\n\nfunction QuestionTypeDropdown(props) {\n\tconst { questionType = 'matchHeading', handleChangeQuestionType } = props;\n\tconst handleChange = event => {\n\t\tconst value = event.target.value;\n\t\thandleChangeQuestionType(value);\n\t\treturn;\n\t};\n\treturn (\n\t\t<FormControl variant=\"outlined\" fullWidth>\n\t\t\t<InputLabel htmlFor=\"outlined-age-native-simple\">Question Type</InputLabel>\n\t\t\t<Select\n\t\t\t\tnative\n\t\t\t\tvalue={questionType}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tlabel=\"Question Type\"\n\t\t\t\tinputProps={{\n\t\t\t\t\tname: 'question type',\n\t\t\t\t\tid: 'outlined-age-native-simple',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{questionTypes.map((type, idx) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<option key={idx} value={type.value}>\n\t\t\t\t\t\t\t{type.label}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</Select>\n\t\t</FormControl>\n\t);\n}\n\nexport default QuestionTypeDropdown;\n"]},"metadata":{},"sourceType":"module"}
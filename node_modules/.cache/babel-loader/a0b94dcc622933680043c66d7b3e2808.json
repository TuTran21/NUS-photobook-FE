{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UsersManagementPage/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport CreateUserModal from 'app/views/components/modals/CreateUserModal';\nimport { DataGrid } from '@material-ui/data-grid';\nimport UserQueries from 'graphql/queries/User';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\nimport { Typography, IconButton, Button } from '@material-ui/core';\nimport { Close, Delete, Done, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport EditUserModal from 'app/views/components/modals/EditUserModal';\nimport ConfirmDeleteUserDialog from 'app/views/components/modals/ConfirmDeleteUser';\nimport UserMutations from 'graphql/mutations/User';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\n\nconst RenderColumns = props => {\n  const {\n    handleOpenEditModal,\n    handleOpenDeleteModal\n  } = props;\n  return [{\n    field: 'id',\n    headerName: 'ID',\n    width: 200\n  }, {\n    field: 'username',\n    headerName: 'Username',\n    width: 250\n  }, {\n    field: 'email',\n    headerName: 'Email',\n    width: 250\n  }, {\n    field: 'firstName',\n    headerName: 'First name',\n    width: 130\n  }, {\n    field: 'lastName',\n    headerName: 'Last name',\n    width: 130\n  }, {\n    field: 'isVerified',\n    headerName: 'Verified',\n    description: \"Whether or not the user's email has been verified\",\n    width: 90,\n    renderCell: params => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }\n    }, params.value ? /*#__PURE__*/React.createElement(Done, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 26\n      }\n    }) : /*#__PURE__*/React.createElement(Close, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 58\n      }\n    }))\n  }, {\n    field: 'userType',\n    headerName: 'User role',\n    width: 90\n  }, {\n    field: 'lastLogin',\n    headerName: 'Last login',\n    width: 150,\n    valueFormatter: params => moment(params.value).format('DD-MM-YYYY')\n  }, {\n    field: 'createdAt',\n    headerName: 'Created at',\n    width: 150,\n    valueFormatter: params => moment(params.value).format('DD-MM-YYYY')\n  }, {\n    field: 'updatedAt',\n    headerName: 'Updated at',\n    width: 150,\n    valueFormatter: params => moment(params.value).format('DD-MM-YYYY')\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    description: \"Edit user's information\",\n    width: 130,\n    disableClickEventBubbling: true,\n    renderCell: params => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleOpenEditModal(params.data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleOpenDeleteModal(params.data.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    })))\n  }];\n};\n\nconst UsersManagementPage = props => {\n  const {\n    intl\n  } = props;\n  const [userSelectedForDelete, setUserSelectedForDelete] = useState([]);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [editUserData, setEditUserData] = useState({});\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [data, setData] = useState([]);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [selectedUsers, setSelectedUsers] = useState([]); // GET USERS\n\n  const [getUsers, usersData] = useLazyQuery(UserQueries.GET_USERS, {\n    fetchPolicy: 'network-only',\n    onCompleted: () => handleGetUsersSuccess(),\n    onError: err => handleGetUserError(err)\n  });\n  useEffect(() => {\n    getUsers();\n  }, []);\n\n  const handleGetUsersSuccess = () => {\n    setData(usersData.data.users);\n  };\n\n  const handleGetUserError = err => {\n    let message = getMessage(err.message);\n    setData([]);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // CREATE\n\n\n  const [createUser, createUserRes] = useMutation(UserMutations.ADMIN_CREATE_USER, {\n    onCompleted: () => handleCreateSuccess(),\n    onError: err => handleCreateFailure(err)\n  });\n\n  const handleCreateSuccess = () => {\n    setIsCreateModalOpen(false);\n    const messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n    props.enqueueSnackbar(intl.formatMessage({\n      id: messageId\n    }), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleCreateFailure = err => {\n    if (!err) {\n      return;\n    }\n\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // UPDATE\n\n\n  const [updateUser, updateUserRes] = useMutation(UserMutations.ADMIN_UPDATE_USER, {\n    onCompleted: () => handleUpdateSuccess(),\n    onError: err => handleUpdateFailure(err)\n  });\n\n  const handleUpdateSuccess = () => {\n    getUsers();\n    setIsEditModalOpen(false);\n    const messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n    props.enqueueSnackbar(intl.formatMessage({\n      id: messageId\n    }), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleUpdateFailure = err => {\n    if (!err) {\n      return;\n    }\n\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // DELETE\n\n\n  const [deleteUsers, deleteUsersRes] = useMutation(UserMutations.DELETE_MANY, {\n    onCompleted: () => handleDeleteSuccess(),\n    onError: err => handleDeleteFailure(err)\n  });\n\n  const handleOpenDeleteModal = id => {\n    if (id) {\n      setUserSelectedForDelete([id]);\n    } else {\n      setUserSelectedForDelete([]);\n    }\n\n    setDeleteModalOpen(true);\n  };\n\n  const handleCloseDeleteModal = () => {\n    setUserSelectedForDelete([]);\n    setDeleteModalOpen(false);\n  };\n\n  const handleDeleteSuccess = () => {\n    handleCloseDeleteModal();\n    getUsers();\n    props.enqueueSnackbar('Deleted successfully', {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleDeleteFailure = err => {\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleDeleteUsers = () => {\n    let idArray = [];\n\n    if (userSelectedForDelete.length > 0) {\n      return deleteUsers({\n        variables: {\n          users: userSelectedForDelete\n        }\n      });\n    }\n\n    selectedUsers.forEach(user => idArray.push(user.id));\n    deleteUsers({\n      variables: {\n        users: idArray\n      }\n    });\n  };\n\n  const handleOpenCreateModal = () => {\n    setIsCreateModalOpen(true);\n  };\n\n  const handleCloseCreateModal = () => {\n    setIsCreateModalOpen(false);\n  };\n\n  const handleOpenEditModal = value => {\n    setIsEditModalOpen(true);\n    setEditUserData(value);\n  };\n\n  const handleCloseEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n\n  const {\n    handleCreateUserPromise\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet kt-portlet--height-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: \"kt-portlet__head-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 6\n    }\n  }, \"User List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleOpenCreateModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 6\n    }\n  }, \"Add new\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: \"ml-2\",\n    onClick: () => getUsers(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 6\n    }\n  }, \"Refresh\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    variant: \"contained\",\n    disabled: selectedUsers.length < 1,\n    color: \"default\",\n    onClick: () => handleOpenDeleteModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 6\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 600,\n      width: '100%',\n      margin: '50px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    onSelectionChange: newSelection => {\n      setSelectedUsers(newSelection.rows);\n    },\n    loading: usersData.loading,\n    rows: data,\n    columns: RenderColumns({\n      handleOpenEditModal,\n      handleOpenDeleteModal\n    }),\n    pageSize: 10,\n    checkboxSelection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmDeleteUserDialog, {\n    open: deleteModalOpen,\n    handleClose: handleCloseDeleteModal,\n    handleConfirm: handleDeleteUsers,\n    loading: deleteUsersRes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(EditUserModal, {\n    open: isEditModalOpen,\n    onClose: handleCloseEditModal,\n    userData: editUserData,\n    updateUser: updateUser,\n    updateUserRes: updateUserRes,\n    handleCreateUserPromise: handleCreateUserPromise,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CreateUserModal, {\n    createUserRes: createUserRes,\n    createUser: createUser,\n    open: isCreateModalOpen,\n    onClose: handleCloseCreateModal,\n    handleCreateUserPromise: handleCreateUserPromise,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default injectIntl(withSnackbar(UsersManagementPage));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UsersManagementPage/index.js"],"names":["React","useEffect","useState","CreateUserModal","DataGrid","UserQueries","useLazyQuery","useMutation","withSnackbar","Typography","IconButton","Button","Close","Delete","Done","Edit","moment","EditUserModal","ConfirmDeleteUserDialog","UserMutations","FormattedMessage","injectIntl","getMessage","RenderColumns","props","handleOpenEditModal","handleOpenDeleteModal","field","headerName","width","description","renderCell","params","value","valueFormatter","format","disableClickEventBubbling","data","id","UsersManagementPage","intl","userSelectedForDelete","setUserSelectedForDelete","isCreateModalOpen","setIsCreateModalOpen","editUserData","setEditUserData","isEditModalOpen","setIsEditModalOpen","setData","deleteModalOpen","setDeleteModalOpen","selectedUsers","setSelectedUsers","getUsers","usersData","GET_USERS","fetchPolicy","onCompleted","handleGetUsersSuccess","onError","err","handleGetUserError","users","message","enqueueSnackbar","formatMessage","variant","anchorOrigin","vertical","horizontal","createUser","createUserRes","ADMIN_CREATE_USER","handleCreateSuccess","handleCreateFailure","messageId","updateUser","updateUserRes","ADMIN_UPDATE_USER","handleUpdateSuccess","handleUpdateFailure","deleteUsers","deleteUsersRes","DELETE_MANY","handleDeleteSuccess","handleDeleteFailure","handleCloseDeleteModal","handleDeleteUsers","idArray","length","variables","forEach","user","push","handleOpenCreateModal","handleCloseCreateModal","handleCloseEditModal","handleCreateUserPromise","height","margin","newSelection","rows","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CreateUserModal from 'app/views/components/modals/CreateUserModal';\nimport { DataGrid } from '@material-ui/data-grid';\nimport UserQueries from 'graphql/queries/User';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\nimport { Typography, IconButton, Button } from '@material-ui/core';\nimport { Close, Delete, Done, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport EditUserModal from 'app/views/components/modals/EditUserModal';\nimport ConfirmDeleteUserDialog from 'app/views/components/modals/ConfirmDeleteUser';\nimport UserMutations from 'graphql/mutations/User';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\n\nconst RenderColumns = props => {\n\tconst { handleOpenEditModal, handleOpenDeleteModal } = props;\n\treturn [\n\t\t{ field: 'id', headerName: 'ID', width: 200 },\n\t\t{ field: 'username', headerName: 'Username', width: 250 },\n\t\t{ field: 'email', headerName: 'Email', width: 250 },\n\t\t{ field: 'firstName', headerName: 'First name', width: 130 },\n\t\t{ field: 'lastName', headerName: 'Last name', width: 130 },\n\t\t{\n\t\t\tfield: 'isVerified',\n\t\t\theaderName: 'Verified',\n\t\t\tdescription: \"Whether or not the user's email has been verified\",\n\t\t\twidth: 90,\n\t\t\trenderCell: params => (\n\t\t\t\t<div>{params.value ? <Done color=\"primary\"></Done> : <Close color=\"error\"></Close>}</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tfield: 'userType',\n\t\t\theaderName: 'User role',\n\t\t\twidth: 90,\n\t\t},\n\t\t{\n\t\t\tfield: 'lastLogin',\n\t\t\theaderName: 'Last login',\n\t\t\twidth: 150,\n\t\t\tvalueFormatter: params => moment(params.value).format('DD-MM-YYYY'),\n\t\t},\n\t\t{\n\t\t\tfield: 'createdAt',\n\t\t\theaderName: 'Created at',\n\t\t\twidth: 150,\n\t\t\tvalueFormatter: params => moment(params.value).format('DD-MM-YYYY'),\n\t\t},\n\t\t{\n\t\t\tfield: 'updatedAt',\n\t\t\theaderName: 'Updated at',\n\t\t\twidth: 150,\n\t\t\tvalueFormatter: params => moment(params.value).format('DD-MM-YYYY'),\n\t\t},\n\t\t{\n\t\t\tfield: 'actions',\n\t\t\theaderName: 'Actions',\n\t\t\tdescription: \"Edit user's information\",\n\t\t\twidth: 130,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: params => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<IconButton onClick={() => handleOpenEditModal(params.data)}>\n\t\t\t\t\t\t<Edit></Edit>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<IconButton onClick={() => handleOpenDeleteModal(params.data.id)}>\n\t\t\t\t\t\t<Delete></Delete>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</React.Fragment>\n\t\t\t),\n\t\t},\n\t];\n};\n\nconst UsersManagementPage = props => {\n\tconst { intl } = props;\n\tconst [userSelectedForDelete, setUserSelectedForDelete] = useState([]);\n\tconst [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n\tconst [editUserData, setEditUserData] = useState({});\n\tconst [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\tconst [data, setData] = useState([]);\n\tconst [deleteModalOpen, setDeleteModalOpen] = useState(false);\n\tconst [selectedUsers, setSelectedUsers] = useState([]);\n\t// GET USERS\n\tconst [getUsers, usersData] = useLazyQuery(UserQueries.GET_USERS, {\n\t\tfetchPolicy: 'network-only',\n\t\tonCompleted: () => handleGetUsersSuccess(),\n\t\tonError: err => handleGetUserError(err),\n\t});\n\tuseEffect(() => {\n\t\tgetUsers();\n\t}, []);\n\n\tconst handleGetUsersSuccess = () => {\n\t\tsetData(usersData.data.users);\n\t};\n\n\tconst handleGetUserError = err => {\n\t\tlet message = getMessage(err.message);\n\n\t\tsetData([]);\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\t// CREATE\n\tconst [createUser, createUserRes] = useMutation(UserMutations.ADMIN_CREATE_USER, {\n\t\tonCompleted: () => handleCreateSuccess(),\n\t\tonError: err => handleCreateFailure(err),\n\t});\n\n\tconst handleCreateSuccess = () => {\n\t\tsetIsCreateModalOpen(false);\n\t\tconst messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: messageId,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handleCreateFailure = err => {\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\t\tlet message = getMessage(err.message);\n\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\t// UPDATE\n\tconst [updateUser, updateUserRes] = useMutation(UserMutations.ADMIN_UPDATE_USER, {\n\t\tonCompleted: () => handleUpdateSuccess(),\n\t\tonError: err => handleUpdateFailure(err),\n\t});\n\n\tconst handleUpdateSuccess = () => {\n\t\tgetUsers();\n\t\tsetIsEditModalOpen(false);\n\t\tconst messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: messageId,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handleUpdateFailure = err => {\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\t\tlet message = getMessage(err.message);\n\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\t// DELETE\n\tconst [deleteUsers, deleteUsersRes] = useMutation(UserMutations.DELETE_MANY, {\n\t\tonCompleted: () => handleDeleteSuccess(),\n\t\tonError: err => handleDeleteFailure(err),\n\t});\n\n\tconst handleOpenDeleteModal = id => {\n\t\tif (id) {\n\t\t\tsetUserSelectedForDelete([id]);\n\t\t} else {\n\t\t\tsetUserSelectedForDelete([]);\n\t\t}\n\t\tsetDeleteModalOpen(true);\n\t};\n\n\tconst handleCloseDeleteModal = () => {\n\t\tsetUserSelectedForDelete([]);\n\t\tsetDeleteModalOpen(false);\n\t};\n\n\tconst handleDeleteSuccess = () => {\n\t\thandleCloseDeleteModal();\n\t\tgetUsers();\n\t\tprops.enqueueSnackbar('Deleted successfully', {\n\t\t\tvariant: 'success',\n\t\t\tanchorOrigin: {\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleDeleteFailure = err => {\n\t\tlet message = getMessage(err.message);\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handleDeleteUsers = () => {\n\t\tlet idArray = [];\n\t\tif (userSelectedForDelete.length > 0) {\n\t\t\treturn deleteUsers({ variables: { users: userSelectedForDelete } });\n\t\t}\n\n\t\tselectedUsers.forEach(user => idArray.push(user.id));\n\t\tdeleteUsers({ variables: { users: idArray } });\n\t};\n\n\tconst handleOpenCreateModal = () => {\n\t\tsetIsCreateModalOpen(true);\n\t};\n\n\tconst handleCloseCreateModal = () => {\n\t\tsetIsCreateModalOpen(false);\n\t};\n\n\tconst handleOpenEditModal = value => {\n\t\tsetIsEditModalOpen(true);\n\t\tsetEditUserData(value);\n\t};\n\n\tconst handleCloseEditModal = () => {\n\t\tsetIsEditModalOpen(false);\n\t};\n\n\tconst { handleCreateUserPromise } = props;\n\treturn (\n\t\t<div className=\"kt-portlet kt-portlet--height-fluid\">\n\t\t\t<div className=\"kt-portlet__head\">\n\t\t\t\t<div className=\"kt-portlet__head-label\">\n\t\t\t\t\t<Typography variant=\"h5\" className=\"kt-portlet__head-title\">\n\t\t\t\t\t\tUser List\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"kt-portlet__head-toolbar\">\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => handleOpenCreateModal()}>\n\t\t\t\t\t\tAdd new\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" className=\"ml-2\" onClick={() => getUsers()}>\n\t\t\t\t\t\tRefresh\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisabled={selectedUsers.length < 1}\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\tonClick={() => handleOpenDeleteModal()}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"kt-portlet__body\">\n\t\t\t\t<div style={{ height: 600, width: '100%', margin: '50px 0px' }}>\n\t\t\t\t\t<DataGrid\n\t\t\t\t\t\tonSelectionChange={newSelection => {\n\t\t\t\t\t\t\tsetSelectedUsers(newSelection.rows);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tloading={usersData.loading}\n\t\t\t\t\t\trows={data}\n\t\t\t\t\t\tcolumns={RenderColumns({ handleOpenEditModal, handleOpenDeleteModal })}\n\t\t\t\t\t\tpageSize={10}\n\t\t\t\t\t\tcheckboxSelection\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ConfirmDeleteUserDialog\n\t\t\t\t\topen={deleteModalOpen}\n\t\t\t\t\thandleClose={handleCloseDeleteModal}\n\t\t\t\t\thandleConfirm={handleDeleteUsers}\n\t\t\t\t\tloading={deleteUsersRes.loading}\n\t\t\t\t></ConfirmDeleteUserDialog>\n\t\t\t\t<EditUserModal\n\t\t\t\t\topen={isEditModalOpen}\n\t\t\t\t\tonClose={handleCloseEditModal}\n\t\t\t\t\tuserData={editUserData}\n\t\t\t\t\tupdateUser={updateUser}\n\t\t\t\t\tupdateUserRes={updateUserRes}\n\t\t\t\t\thandleCreateUserPromise={handleCreateUserPromise}\n\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t></EditUserModal>\n\t\t\t\t<CreateUserModal\n\t\t\t\t\tcreateUserRes={createUserRes}\n\t\t\t\t\tcreateUser={createUser}\n\t\t\t\t\topen={isCreateModalOpen}\n\t\t\t\t\tonClose={handleCloseCreateModal}\n\t\t\t\t\thandleCreateUserPromise={handleCreateUserPromise}\n\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t></CreateUserModal>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default injectIntl(withSnackbar(UsersManagementPage));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/layout/components/UserProfile.js\";\n\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { connect } from 'react-redux';\nimport { useLazyQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport { CircularProgress, Button, Dialog, Avatar } from '@material-ui/core';\nimport history from 'utils/history';\nimport authActions from 'state/ducks/auth/actions';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction UserProfile(props) {\n  const {\n    showHi,\n    showAvatar,\n    showBadge,\n    activeUser,\n    logout\n  } = props;\n  const [loginModalState, setOpenLoginModal] = React.useState({\n    isOpen: false,\n    formType: 'login'\n  });\n  const [getProfileId, profileIdRes] = useLazyQuery(UserQueries.GET_MY_PROFILE, {\n    onCompleted: () => history.push(`/user/${profileIdRes.data.getMyProfile.userId}`),\n    fetchPolicy: 'network-only'\n  });\n\n  const handleOpenLoginModal = (isOpen, formType) => {\n    return setOpenLoginModal({\n      isOpen: isOpen,\n      formType: formType\n    });\n  };\n\n  const [profileMenuOpen, setProfileMenuOpen] = React.useState(null);\n\n  const handleOpenProfileMenu = event => {\n    setProfileMenuOpen(event.currentTarget);\n  };\n\n  const handleCloseProfileMenu = () => {\n    setProfileMenuOpen(null);\n  };\n\n  const user = activeUser;\n\n  if (user.username) {\n    const welcomeName = user.firstName && user.lastName ? user.firstName + ' ' + user.lastName : user.username ? user.username : 'Undefined';\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"kt-header__topbar-item kt-header__topbar-item--user\",\n      drop: \"down\",\n      alignRight: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"text-white\",\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleOpenProfileMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 5\n      }\n    }, showAvatar && !user.avatar ? /*#__PURE__*/React.createElement(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, welcomeName.charAt(0)) : /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"\",\n      src: user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }), showHi && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Hi,\"), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginLeft: '15px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }\n    }, welcomeName)), /*#__PURE__*/React.createElement(Menu, {\n      id: \"simple-menu\",\n      anchorEl: profileMenuOpen,\n      keepMounted: true,\n      open: Boolean(profileMenuOpen),\n      onClose: handleCloseProfileMenu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => getProfileId(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, \"My Profile\"), profileIdRes.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 32\n      }\n    })), /*#__PURE__*/React.createElement(MenuItem, {\n      onClick: () => logout(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }\n    }, \"Logout\")));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => handleOpenLoginModal(false),\n    \"aria-labelledby\": \"login-modal-in-authorize-popup\",\n    open: loginModalState.isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      hasSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    isModal: true,\n    formTypeDefault: loginModalState.formType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    className: \"text-white\",\n    color: \"default\",\n    size: \"large\",\n    onClick: () => handleOpenLoginModal(true, 'login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"text-white\",\n    color: \"default\",\n    size: \"large\",\n    onClick: () => handleOpenLoginModal(true, 'register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 4\n    }\n  }, \"Sign up\"));\n}\n\nconst mapStateToProps = ({\n  auth: {\n    activeUser\n  }\n}) => ({\n  activeUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  const logout = () => dispatch(authActions.logout());\n\n  return {\n    logout\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/layout/components/UserProfile.js"],"names":["React","Dropdown","connect","useLazyQuery","UserQueries","CircularProgress","Button","Dialog","Avatar","history","authActions","LoadingIndicator","Menu","MenuItem","AuthPage","lazy","UserProfile","props","showHi","showAvatar","showBadge","activeUser","logout","loginModalState","setOpenLoginModal","useState","isOpen","formType","getProfileId","profileIdRes","GET_MY_PROFILE","onCompleted","push","data","getMyProfile","userId","fetchPolicy","handleOpenLoginModal","profileMenuOpen","setProfileMenuOpen","handleOpenProfileMenu","event","currentTarget","handleCloseProfileMenu","user","username","welcomeName","firstName","lastName","avatar","charAt","marginLeft","Boolean","loading","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { connect } from 'react-redux';\nimport { useLazyQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport { CircularProgress, Button, Dialog, Avatar } from '@material-ui/core';\nimport history from 'utils/history';\nimport authActions from 'state/ducks/auth/actions';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction UserProfile(props) {\n\tconst { showHi, showAvatar, showBadge, activeUser, logout } = props;\n\tconst [loginModalState, setOpenLoginModal] = React.useState({ isOpen: false, formType: 'login' });\n\tconst [getProfileId, profileIdRes] = useLazyQuery(UserQueries.GET_MY_PROFILE, {\n\t\tonCompleted: () => history.push(`/user/${profileIdRes.data.getMyProfile.userId}`),\n\t\tfetchPolicy: 'network-only',\n\t});\n\n\tconst handleOpenLoginModal = (isOpen, formType) => {\n\t\treturn setOpenLoginModal({ isOpen: isOpen, formType: formType });\n\t};\n\n\tconst [profileMenuOpen, setProfileMenuOpen] = React.useState(null);\n\n\tconst handleOpenProfileMenu = event => {\n\t\tsetProfileMenuOpen(event.currentTarget);\n\t};\n\n\tconst handleCloseProfileMenu = () => {\n\t\tsetProfileMenuOpen(null);\n\t};\n\tconst user = activeUser;\n\n\tif (user.username) {\n\t\tconst welcomeName =\n\t\t\tuser.firstName && user.lastName\n\t\t\t\t? user.firstName + ' ' + user.lastName\n\t\t\t\t: user.username\n\t\t\t\t? user.username\n\t\t\t\t: 'Undefined';\n\t\treturn (\n\t\t\t<Dropdown className=\"kt-header__topbar-item kt-header__topbar-item--user\" drop=\"down\" alignRight>\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"text-white\"\n\t\t\t\t\taria-controls=\"simple-menu\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tonClick={handleOpenProfileMenu}\n\t\t\t\t>\n\t\t\t\t\t{showAvatar && !user.avatar ? (\n\t\t\t\t\t\t<Avatar>{welcomeName.charAt(0)}</Avatar>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Avatar alt=\"\" src={user.avatar}></Avatar>\n\t\t\t\t\t)}\n\t\t\t\t\t{showHi && <span>Hi,</span>}\n\n\t\t\t\t\t<span style={{ marginLeft: '15px' }}>{welcomeName}</span>\n\t\t\t\t</Button>\n\t\t\t\t<Menu\n\t\t\t\t\tid=\"simple-menu\"\n\t\t\t\t\tanchorEl={profileMenuOpen}\n\t\t\t\t\tkeepMounted\n\t\t\t\t\topen={Boolean(profileMenuOpen)}\n\t\t\t\t\tonClose={handleCloseProfileMenu}\n\t\t\t\t>\n\t\t\t\t\t<MenuItem onClick={() => getProfileId()}>\n\t\t\t\t\t\t<div>My Profile</div>\n\n\t\t\t\t\t\t{profileIdRes.loading && <CircularProgress color=\"primary\" size=\"40px\"></CircularProgress>}\n\t\t\t\t\t</MenuItem>\n\t\t\t\t\t<MenuItem onClick={() => logout()}>Logout</MenuItem>\n\t\t\t\t</Menu>\n\t\t\t</Dropdown>\n\t\t);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<React.Fragment>\n\t\t\t\t<Dialog\n\t\t\t\t\tonClose={() => handleOpenLoginModal(false)}\n\t\t\t\t\taria-labelledby=\"login-modal-in-authorize-popup\"\n\t\t\t\t\topen={loginModalState.isOpen}\n\t\t\t\t>\n\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator hasSpacing />}>\n\t\t\t\t\t\t<AuthPage isModal={true} formTypeDefault={loginModalState.formType}></AuthPage>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</Dialog>\n\t\t\t</React.Fragment>\n\t\t\t<Button\n\t\t\t\tclassName=\"text-white\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tonClick={() => handleOpenLoginModal(true, 'login')}\n\t\t\t>\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<Button\n\t\t\t\tclassName=\"text-white\"\n\t\t\t\tcolor=\"default\"\n\t\t\t\tsize=\"large\"\n\t\t\t\tonClick={() => handleOpenLoginModal(true, 'register')}\n\t\t\t>\n\t\t\t\tSign up\n\t\t\t</Button>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = ({ auth: { activeUser } }) => ({\n\tactiveUser,\n});\n\nconst mapDispatchToProps = dispatch => {\n\tconst logout = () => dispatch(authActions.logout());\n\n\treturn {\n\t\tlogout,\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/ReadingDetailsCardItem/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Typography, Button, withStyles } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Theme from 'app/assets/theme';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: Theme.ncpPrimary\n  }\n}))(LinearProgress);\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tmin-height: 400px;\n`;\nconst Title = styled(Typography)`\n\ttext-align: center;\n`;\nconst ProgressWrapper = styled.div`\n\twidth: 80%;\n\tmargin-bottom: 5px;\n`;\nconst ProgressLabelHolder = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\twidth: 100%;\n\tmargin-top: 5px;\n`;\n\nfunction ReadingDetailsCardItem(props) {\n  const {\n    readingTest,\n    handleChangeLocation,\n    title\n  } = props;\n  let passageAmount = 0;\n\n  if (readingTest.testDetails) {\n    passageAmount = readingTest.testDetails.passages.length;\n  } // Count question amount\n  // In the future we will give them counting on amount of question types\n\n\n  let questionAmount = 0;\n\n  if (readingTest.testDetails) {\n    readingTest.testDetails.passages.map(passage => {\n      passage.questionSections.map(section => {\n        questionAmount = questionAmount + section.questions.length;\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    className: \"card card-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    variant: \"h5\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, title), /*#__PURE__*/React.createElement(ProgressWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ProgressLabelHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 6\n    }\n  }, \"Passages:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }\n  }, passageAmount, \"/3\")), /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: passageAmount * 100 / 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(ProgressWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ProgressLabelHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 6\n    }\n  }, \"Questions:\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle1\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, questionAmount, \"/40\")), /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: questionAmount * 100 / 40,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: '20px'\n    },\n    variant: \"contained\",\n    onClick: () => handleChangeLocation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }\n  }, readingTest.testDetails ? `Edit Test` : 'Create Test'));\n}\n\nexport default ReadingDetailsCardItem;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/ReadingDetailsCardItem/index.js"],"names":["React","styled","Typography","Button","withStyles","LinearProgress","Theme","BorderLinearProgress","theme","root","height","borderRadius","colorPrimary","backgroundColor","palette","grey","type","bar","ncpPrimary","Wrapper","div","Title","ProgressWrapper","ProgressLabelHolder","ReadingDetailsCardItem","props","readingTest","handleChangeLocation","title","passageAmount","testDetails","passages","length","questionAmount","map","passage","questionSections","section","questions","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Typography, Button, withStyles } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Theme from 'app/assets/theme';\n\nconst BorderLinearProgress = withStyles(theme => ({\n\troot: {\n\t\theight: 10,\n\t\tborderRadius: 5,\n\t},\n\tcolorPrimary: {\n\t\tbackgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n\t},\n\tbar: {\n\t\tborderRadius: 5,\n\t\tbackgroundColor: Theme.ncpPrimary,\n\t},\n}))(LinearProgress);\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: center;\n\tmin-height: 400px;\n`;\n\nconst Title = styled(Typography)`\n\ttext-align: center;\n`;\n\nconst ProgressWrapper = styled.div`\n\twidth: 80%;\n\tmargin-bottom: 5px;\n`;\n\nconst ProgressLabelHolder = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\twidth: 100%;\n\tmargin-top: 5px;\n`;\n\nfunction ReadingDetailsCardItem(props) {\n\tconst { readingTest, handleChangeLocation, title } = props;\n\n\tlet passageAmount = 0;\n\tif (readingTest.testDetails) {\n\t\tpassageAmount = readingTest.testDetails.passages.length;\n\t}\n\n\t// Count question amount\n\t// In the future we will give them counting on amount of question types\n\tlet questionAmount = 0;\n\n\tif (readingTest.testDetails) {\n\t\treadingTest.testDetails.passages.map(passage => {\n\t\t\tpassage.questionSections.map(section => {\n\t\t\t\tquestionAmount = questionAmount + section.questions.length;\n\t\t\t});\n\t\t});\n\t}\n\n\treturn (\n\t\t<Wrapper className=\"card card-custom\">\n\t\t\t<Title variant=\"h5\" component=\"p\">\n\t\t\t\t{title}\n\t\t\t</Title>\n\t\t\t<ProgressWrapper>\n\t\t\t\t<ProgressLabelHolder>\n\t\t\t\t\t<Typography variant=\"subtitle1\" component=\"p\">\n\t\t\t\t\t\tPassages:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"subtitle1\" component=\"p\">\n\t\t\t\t\t\t{passageAmount}/3\n\t\t\t\t\t</Typography>\n\t\t\t\t</ProgressLabelHolder>\n\t\t\t\t<BorderLinearProgress variant=\"determinate\" value={(passageAmount * 100) / 3} />\n\t\t\t</ProgressWrapper>\n\t\t\t<ProgressWrapper>\n\t\t\t\t<ProgressLabelHolder>\n\t\t\t\t\t<Typography variant=\"subtitle1\" component=\"p\">\n\t\t\t\t\t\tQuestions:\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant=\"subtitle1\" component=\"p\">\n\t\t\t\t\t\t{questionAmount}/40\n\t\t\t\t\t</Typography>\n\t\t\t\t</ProgressLabelHolder>\n\t\t\t\t<BorderLinearProgress variant=\"determinate\" value={(questionAmount * 100) / 40} />\n\t\t\t</ProgressWrapper>\n\n\t\t\t<Button style={{ marginTop: '20px' }} variant=\"contained\" onClick={() => handleChangeLocation()}>\n\t\t\t\t{readingTest.testDetails ? `Edit Test` : 'Create Test'}\n\t\t\t</Button>\n\t\t</Wrapper>\n\t);\n}\n\nexport default ReadingDetailsCardItem;\n"]},"metadata":{},"sourceType":"module"}
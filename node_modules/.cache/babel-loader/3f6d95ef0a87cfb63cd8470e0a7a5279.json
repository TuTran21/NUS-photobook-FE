{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/TestListItem.js\";\nimport React, { memo } from 'react';\nimport { Button, Paper } from '@material-ui/core';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Theme from 'app/themes';\nimport { MenuBookOutlined, HeadsetOutlined, CreateOutlined, MicOutlined } from '@material-ui/icons';\nimport { Rating } from '@material-ui/lab';\nimport { useMutation } from '@apollo/client';\nimport TestMutations from 'graphql/mutations/Test/';\nimport { roundNumberToTwoDecimals } from 'utils/utils';\nimport { withSnackbar } from 'notistack';\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t${props => props.nomargin === 'false' && `margin-top: 35px;\n\t`}\n\tpadding: 40px 0px;\n\n\t@media only screen and (max-width: 670px) {\n\t\tmargin-top: 30px;\n\t}\n`;\nconst TestTitle = styled.h2`\n\tcolor: #646c9a;\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tline-height: 1.2;\n\tmargin-bottom: 0px;\n\n\t&:hover {\n\t\tcolor: #848aae;\n\t\tcursor: pointer;\n\t}\n\n\t@media only screen and (max-width: 670px) {\n\t\ttext-align: center;\n\t}\n`;\nconst TestBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\nconst TestInfoBlock = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tmargin: 0px 0px 20px;\n\theight: auto;\n\n\t@media only screen and (max-width: 670px) {\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;\nconst TextDescriptionBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 62%;\n\t@media only screen and (max-width: 670px) {\n\t\twidth: 100%;\n\t\talign-items: center;\n\t\tmargin-top: 15px;\n\t}\n`;\nconst InfoBlock = styled.div`\n\tmargin: 0px 0px 0px 0px;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t@media only screen and (max-width: 670px) {\n\t\ttext-align: center;\n\t}\n`;\nconst BookImgWrapper = styled.div`\n\tmax-height: 200px;\n\tmax-width: 200px;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t@media only screen and (max-width: 670px) {\n\t\tmargin: 20px 0 10px;\n\t}\n`;\nconst BookImg = styled.img`\n\twidth: 200px;\n\theight: 200px;\n`;\nconst InfoText = styled.p`\n\tpadding: 0px;\n\tcolor: #646c9a;\n\tfont-size: 14px;\n\tmargin: 0px;\n\tfont-weight: 500;\n`;\nconst VoteAmount = styled.em`\n\tposition: relative;\n\tcolor: #536b83;\n\tfont-size: 12px;\n\n\tpadding-left: 5px;\n\ttop: -4px;\n\tline-height: 1.5;\n`;\nconst TestTypeBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 11px;\n\tfont-weight: bold;\n\tletter-spacing: 2.75px;\n\tline-height: 24px;\n\tmargin-bottom: 20px;\n\n\tcolor: ${props => props.islistening === 'true' ? Theme.ncpSecondaryDark : props.isreading === 'true' ? Theme.ncpPrimaryDark : props.iswriting === 'true' ? Theme.ncpThirdaryDark : Theme.ncpFourtharyDark};\n`;\nconst TakeTestHolder = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n`;\nconst RatingText = styled.span`\n\tfont-size: 16px;\n\tfont-weight: 600;\n\tposition: relative;\n\tcolor: #f9a95a;\n\tmargin: 0px 4px 0px 0px;\n\ttop: -4px;\n`;\nconst TakeTestButton = styled(Button)`\n\theight: 32px;\n\tpadding: 0 20px;\n\tcolor: ${Theme.ncpWhite};\n\n\tbackground-color: ${props => props.islistening === 'true' ? Theme.ncpSecondaryDark : props.isreading === 'true' ? Theme.ncpPrimaryDark : props.iswriting === 'true' ? Theme.ncpThirdaryDark : Theme.ncpFourtharyDark};\n\n\t:hover {\n\t\tbackground-color: ${props => props.islistening === 'true' ? Theme.ncpSecondaryHover : props.isreading === 'true' ? Theme.ncpPrimaryHover : props.iswriting === 'true' ? Theme.ncpThirdaryHover : Theme.ncpFourtharyHover};\n\t}\n`;\nconst ResponsiveTakeTestText = styled.span`\n\tmargin-left: 5px;\n\t@media only screen and (max-width: 480px) {\n\t\tdisplay: none;\n\t}\n`;\nconst TakeText = 'Take';\nconst TestText = 'Test';\n\nfunction RenderTakeTestButtons(props) {\n  const {\n    test,\n    selectTest,\n    hasTakeTestButtons\n  } = props;\n\n  if (!test || !hasTakeTestButtons) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(TakeTestHolder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TestBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestTypeBlock, {\n    isreading: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MenuBookOutlined, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 6\n    }\n  }), \"READING\"), test.testDetails.readingTest ? /*#__PURE__*/React.createElement(TakeTestButton, {\n    size: \"small\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => selectTest(test),\n    isreading: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, \" \", TestText)) : /*#__PURE__*/React.createElement(TakeTestButton, {\n    isreading: \"true\",\n    size: \"sma\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  }, \" \", TestText))), /*#__PURE__*/React.createElement(TestBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestTypeBlock, {\n    islistening: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(HeadsetOutlined, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 6\n    }\n  }), \"LISTENING\"), test.testDetails.listeningTest ? /*#__PURE__*/React.createElement(TakeTestButton, {\n    size: \"small\",\n    color: \"secondary\",\n    variant: \"contained\",\n    onClick: () => selectTest(test),\n    islistening: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }, \" \", TestText)) : /*#__PURE__*/React.createElement(TakeTestButton, {\n    islistening: \"true\",\n    size: \"small\",\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }\n  }, \" \", TestText))), /*#__PURE__*/React.createElement(TestBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestTypeBlock, {\n    iswriting: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CreateOutlined, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 6\n    }\n  }), \"WRITING\"), test.testDetails.writingTest ? /*#__PURE__*/React.createElement(TakeTestButton, {\n    size: \"small\",\n    color: \"primary\",\n    variant: \"contained\",\n    size: \"small\",\n    onClick: () => selectTest(test),\n    iswriting: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }\n  }, \" \", TestText)) : /*#__PURE__*/React.createElement(TakeTestButton, {\n    iswriting: \"true\",\n    disabled: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, TestText))), /*#__PURE__*/React.createElement(TestBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestTypeBlock, {\n    isspeaking: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MicOutlined, {\n    fontSize: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 6\n    }\n  }), \"SPEAKING\"), test.testDetails.speakingTest ? /*#__PURE__*/React.createElement(TakeTestButton, {\n    size: \"small\",\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => selectTest(test),\n    isspeaking: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, \" \", TestText)) : /*#__PURE__*/React.createElement(TakeTestButton, {\n    isspeaking: \"true\",\n    disabled: true,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 6\n    }\n  }, TakeText, /*#__PURE__*/React.createElement(ResponsiveTakeTestText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }\n  }, \" \", TestText))));\n}\n\nfunction TestListItem(props) {\n  const {\n    test,\n    addTest,\n    history,\n    hasTakeTestButtons,\n    viewOnly = false,\n    noMargin = false\n  } = props; // Select test on button click\n\n  const selectTest = async test => {\n    if (viewOnly) {\n      return;\n    } // If disabled, test will be loaded and fetch from server after the user\n    // redirected to test screen (after select test) - Increase loading time\n    // for test details fetching but reduce fetch time for test collection fetching\n    // await addTest(test);\n\n\n    return history.push(`/test/${test.id}/reading`);\n  };\n\n  const handleClickTestDetails = () => {\n    if (viewOnly) {\n      return;\n    }\n\n    return history.push(`/test/${test.id}`);\n  }; // Hooks\n\n\n  const [submitRating, ratingRes] = useMutation(TestMutations.RATE_TEST, {\n    onCompleted: () => props.enqueueSnackbar('Thank you for your rating', {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    }),\n    onError: () => props.enqueueSnackbar('Something went wrong, please make sure you are connected to the internet', {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    })\n  });\n\n  const handleSubmitRating = star => {\n    if (viewOnly) {\n      return;\n    }\n\n    submitRating({\n      variables: {\n        id: test.id,\n        star\n      }\n    });\n  }; // Constanst for render\n\n\n  const {\n    title,\n    createdAt,\n    publishDate,\n    views,\n    rating,\n    testsTaken,\n    image = 'https://reader.zlibcdn.com/books/d3fb5022dc64a37e78d449cd0347072c/1.jpg'\n  } = test;\n  const formatPublishDate = moment(publishDate).format('DD-MMM-YYYY');\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    nomargin: noMargin.toString(),\n    className: \"gutter-b kt-portlet kt-portlet--height-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TestInfoBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BookImgWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BookImg, {\n    onClick: () => handleClickTestDetails(),\n    src: image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(TextDescriptionBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TestTitle, {\n    onClick: () => handleClickTestDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 6\n    }\n  }, title), /*#__PURE__*/React.createElement(InfoBlock, {\n    onClick: () => handleClickTestDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(RatingText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, roundNumberToTwoDecimals(rating.starAmount)), /*#__PURE__*/React.createElement(Rating, {\n    name: \"simple-controlled\",\n    precision: 0.5,\n    value: roundNumberToTwoDecimals(rating.starAmount),\n    onChange: (event, newValue) => {\n      handleSubmitRating(newValue);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(VoteAmount, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }\n  }, \"(\", rating.voteAmount, \" votes)\")), /*#__PURE__*/React.createElement(InfoBlock, {\n    onClick: () => handleClickTestDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InfoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, \"Published on: \", formatPublishDate), /*#__PURE__*/React.createElement(InfoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, \"Views: \", views), /*#__PURE__*/React.createElement(InfoText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }, \"Tests taken: \", testsTaken)))), /*#__PURE__*/React.createElement(RenderTakeTestButtons, {\n    hasTakeTestButtons: hasTakeTestButtons,\n    test: test,\n    selectTest: selectTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default memo(withSnackbar(TestListItem));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/TestListItem.js"],"names":["React","memo","Button","Paper","styled","moment","Theme","MenuBookOutlined","HeadsetOutlined","CreateOutlined","MicOutlined","Rating","useMutation","TestMutations","roundNumberToTwoDecimals","withSnackbar","Wrapper","div","props","nomargin","TestTitle","h2","TestBlock","TestInfoBlock","TextDescriptionBlock","InfoBlock","BookImgWrapper","BookImg","img","InfoText","p","VoteAmount","em","TestTypeBlock","islistening","ncpSecondaryDark","isreading","ncpPrimaryDark","iswriting","ncpThirdaryDark","ncpFourtharyDark","TakeTestHolder","RatingText","span","TakeTestButton","ncpWhite","ncpSecondaryHover","ncpPrimaryHover","ncpThirdaryHover","ncpFourtharyHover","ResponsiveTakeTestText","TakeText","TestText","RenderTakeTestButtons","test","selectTest","hasTakeTestButtons","testDetails","readingTest","listeningTest","writingTest","speakingTest","TestListItem","addTest","history","viewOnly","noMargin","push","id","handleClickTestDetails","submitRating","ratingRes","RATE_TEST","onCompleted","enqueueSnackbar","variant","anchorOrigin","vertical","horizontal","onError","handleSubmitRating","star","variables","title","createdAt","publishDate","views","rating","testsTaken","image","formatPublishDate","format","toString","starAmount","event","newValue","voteAmount"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport { Button, Paper } from '@material-ui/core';\nimport styled from 'styled-components';\nimport moment from 'moment';\nimport Theme from 'app/themes';\nimport { MenuBookOutlined, HeadsetOutlined, CreateOutlined, MicOutlined } from '@material-ui/icons';\nimport { Rating } from '@material-ui/lab';\nimport { useMutation } from '@apollo/client';\nimport TestMutations from 'graphql/mutations/Test/';\nimport { roundNumberToTwoDecimals } from 'utils/utils';\nimport { withSnackbar } from 'notistack';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\t${props =>\n\t\tprops.nomargin === 'false' &&\n\t\t`margin-top: 35px;\n\t`}\n\tpadding: 40px 0px;\n\n\t@media only screen and (max-width: 670px) {\n\t\tmargin-top: 30px;\n\t}\n`;\n\nconst TestTitle = styled.h2`\n\tcolor: #646c9a;\n\tfont-size: 24px;\n\tfont-weight: 600;\n\tline-height: 1.2;\n\tmargin-bottom: 0px;\n\n\t&:hover {\n\t\tcolor: #848aae;\n\t\tcursor: pointer;\n\t}\n\n\t@media only screen and (max-width: 670px) {\n\t\ttext-align: center;\n\t}\n`;\n\nconst TestBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst TestInfoBlock = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tmargin: 0px 0px 20px;\n\theight: auto;\n\n\t@media only screen and (max-width: 670px) {\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t}\n`;\n\nconst TextDescriptionBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 62%;\n\t@media only screen and (max-width: 670px) {\n\t\twidth: 100%;\n\t\talign-items: center;\n\t\tmargin-top: 15px;\n\t}\n`;\n\nconst InfoBlock = styled.div`\n\tmargin: 0px 0px 0px 0px;\n\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t@media only screen and (max-width: 670px) {\n\t\ttext-align: center;\n\t}\n`;\n\nconst BookImgWrapper = styled.div`\n\tmax-height: 200px;\n\tmax-width: 200px;\n\t&:hover {\n\t\tcursor: pointer;\n\t}\n\t@media only screen and (max-width: 670px) {\n\t\tmargin: 20px 0 10px;\n\t}\n`;\n\nconst BookImg = styled.img`\n\twidth: 200px;\n\theight: 200px;\n`;\n\nconst InfoText = styled.p`\n\tpadding: 0px;\n\tcolor: #646c9a;\n\tfont-size: 14px;\n\tmargin: 0px;\n\tfont-weight: 500;\n`;\n\nconst VoteAmount = styled.em`\n\tposition: relative;\n\tcolor: #536b83;\n\tfont-size: 12px;\n\n\tpadding-left: 5px;\n\ttop: -4px;\n\tline-height: 1.5;\n`;\n\nconst TestTypeBlock = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\tfont-size: 11px;\n\tfont-weight: bold;\n\tletter-spacing: 2.75px;\n\tline-height: 24px;\n\tmargin-bottom: 20px;\n\n\tcolor: ${props =>\n\t\tprops.islistening === 'true'\n\t\t\t? Theme.ncpSecondaryDark\n\t\t\t: props.isreading === 'true'\n\t\t\t? Theme.ncpPrimaryDark\n\t\t\t: props.iswriting === 'true'\n\t\t\t? Theme.ncpThirdaryDark\n\t\t\t: Theme.ncpFourtharyDark};\n`;\n\nconst TakeTestHolder = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n`;\n\nconst RatingText = styled.span`\n\tfont-size: 16px;\n\tfont-weight: 600;\n\tposition: relative;\n\tcolor: #f9a95a;\n\tmargin: 0px 4px 0px 0px;\n\ttop: -4px;\n`;\n\nconst TakeTestButton = styled(Button)`\n\theight: 32px;\n\tpadding: 0 20px;\n\tcolor: ${Theme.ncpWhite};\n\n\tbackground-color: ${props =>\n\t\tprops.islistening === 'true'\n\t\t\t? Theme.ncpSecondaryDark\n\t\t\t: props.isreading === 'true'\n\t\t\t? Theme.ncpPrimaryDark\n\t\t\t: props.iswriting === 'true'\n\t\t\t? Theme.ncpThirdaryDark\n\t\t\t: Theme.ncpFourtharyDark};\n\n\t:hover {\n\t\tbackground-color: ${props =>\n\t\t\tprops.islistening === 'true'\n\t\t\t\t? Theme.ncpSecondaryHover\n\t\t\t\t: props.isreading === 'true'\n\t\t\t\t? Theme.ncpPrimaryHover\n\t\t\t\t: props.iswriting === 'true'\n\t\t\t\t? Theme.ncpThirdaryHover\n\t\t\t\t: Theme.ncpFourtharyHover};\n\t}\n`;\n\nconst ResponsiveTakeTestText = styled.span`\n\tmargin-left: 5px;\n\t@media only screen and (max-width: 480px) {\n\t\tdisplay: none;\n\t}\n`;\n\nconst TakeText = 'Take';\nconst TestText = 'Test';\n\nfunction RenderTakeTestButtons(props) {\n\tconst { test, selectTest, hasTakeTestButtons } = props;\n\n\tif (!test || !hasTakeTestButtons) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<TakeTestHolder>\n\t\t\t<TestBlock>\n\t\t\t\t<TestTypeBlock isreading=\"true\">\n\t\t\t\t\t<MenuBookOutlined fontSize=\"large\"></MenuBookOutlined>\n\t\t\t\t\tREADING\n\t\t\t\t</TestTypeBlock>\n\t\t\t\t{test.testDetails.readingTest ? (\n\t\t\t\t\t<TakeTestButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => selectTest(test)}\n\t\t\t\t\t\tisreading=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t) : (\n\t\t\t\t\t<TakeTestButton isreading=\"true\" size=\"sma\" disabled={true}>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t)}\n\t\t\t</TestBlock>\n\t\t\t<TestBlock>\n\t\t\t\t<TestTypeBlock islistening=\"true\">\n\t\t\t\t\t<HeadsetOutlined fontSize=\"large\"></HeadsetOutlined>\n\t\t\t\t\tLISTENING\n\t\t\t\t</TestTypeBlock>\n\t\t\t\t{test.testDetails.listeningTest ? (\n\t\t\t\t\t<TakeTestButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => selectTest(test)}\n\t\t\t\t\t\tislistening=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t) : (\n\t\t\t\t\t<TakeTestButton islistening=\"true\" size=\"small\" disabled={true}>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t)}\n\t\t\t</TestBlock>\n\t\t\t<TestBlock>\n\t\t\t\t<TestTypeBlock iswriting=\"true\">\n\t\t\t\t\t<CreateOutlined fontSize=\"large\"></CreateOutlined>\n\t\t\t\t\tWRITING\n\t\t\t\t</TestTypeBlock>\n\t\t\t\t{test.testDetails.writingTest ? (\n\t\t\t\t\t<TakeTestButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tonClick={() => selectTest(test)}\n\t\t\t\t\t\tiswriting=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t) : (\n\t\t\t\t\t<TakeTestButton iswriting=\"true\" disabled={true} size=\"small\">\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText>{TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t)}\n\t\t\t</TestBlock>\n\t\t\t<TestBlock>\n\t\t\t\t<TestTypeBlock isspeaking=\"true\">\n\t\t\t\t\t<MicOutlined fontSize=\"large\"></MicOutlined>\n\t\t\t\t\tSPEAKING\n\t\t\t\t</TestTypeBlock>\n\t\t\t\t{test.testDetails.speakingTest ? (\n\t\t\t\t\t<TakeTestButton\n\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tonClick={() => selectTest(test)}\n\t\t\t\t\t\tisspeaking=\"true\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t) : (\n\t\t\t\t\t<TakeTestButton isspeaking=\"true\" disabled={true} size=\"small\">\n\t\t\t\t\t\t{TakeText}\n\t\t\t\t\t\t<ResponsiveTakeTestText> {TestText}</ResponsiveTakeTestText>\n\t\t\t\t\t</TakeTestButton>\n\t\t\t\t)}\n\t\t\t</TestBlock>\n\t\t</TakeTestHolder>\n\t);\n}\n\nfunction TestListItem(props) {\n\tconst { test, addTest, history, hasTakeTestButtons, viewOnly = false, noMargin = false } = props;\n\t// Select test on button click\n\tconst selectTest = async test => {\n\t\tif (viewOnly) {\n\t\t\treturn;\n\t\t}\n\t\t// If disabled, test will be loaded and fetch from server after the user\n\t\t// redirected to test screen (after select test) - Increase loading time\n\t\t// for test details fetching but reduce fetch time for test collection fetching\n\t\t// await addTest(test);\n\t\treturn history.push(`/test/${test.id}/reading`);\n\t};\n\n\tconst handleClickTestDetails = () => {\n\t\tif (viewOnly) {\n\t\t\treturn;\n\t\t}\n\t\treturn history.push(`/test/${test.id}`);\n\t};\n\n\t// Hooks\n\tconst [submitRating, ratingRes] = useMutation(TestMutations.RATE_TEST, {\n\t\tonCompleted: () =>\n\t\t\tprops.enqueueSnackbar('Thank you for your rating', {\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t}),\n\t\tonError: () =>\n\t\t\tprops.enqueueSnackbar('Something went wrong, please make sure you are connected to the internet', {\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t}),\n\t});\n\n\tconst handleSubmitRating = star => {\n\t\tif (viewOnly) {\n\t\t\treturn;\n\t\t}\n\t\tsubmitRating({ variables: { id: test.id, star } });\n\t};\n\n\t// Constanst for render\n\tconst {\n\t\ttitle,\n\t\tcreatedAt,\n\t\tpublishDate,\n\t\tviews,\n\t\trating,\n\t\ttestsTaken,\n\t\timage = 'https://reader.zlibcdn.com/books/d3fb5022dc64a37e78d449cd0347072c/1.jpg',\n\t} = test;\n\tconst formatPublishDate = moment(publishDate).format('DD-MMM-YYYY');\n\treturn (\n\t\t<Wrapper nomargin={noMargin.toString()} className=\"gutter-b kt-portlet kt-portlet--height-fluid\">\n\t\t\t<TestInfoBlock>\n\t\t\t\t<BookImgWrapper>\n\t\t\t\t\t<BookImg onClick={() => handleClickTestDetails()} src={image}></BookImg>\n\t\t\t\t</BookImgWrapper>\n\t\t\t\t<TextDescriptionBlock>\n\t\t\t\t\t<TestTitle onClick={() => handleClickTestDetails()}>{title}</TestTitle>\n\t\t\t\t\t<InfoBlock onClick={() => handleClickTestDetails()}>\n\t\t\t\t\t\t<RatingText>{roundNumberToTwoDecimals(rating.starAmount)}</RatingText>\n\t\t\t\t\t\t<Rating\n\t\t\t\t\t\t\tname=\"simple-controlled\"\n\t\t\t\t\t\t\tprecision={0.5}\n\t\t\t\t\t\t\tvalue={roundNumberToTwoDecimals(rating.starAmount)}\n\t\t\t\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\t\t\t\thandleSubmitRating(newValue);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<VoteAmount>({rating.voteAmount} votes)</VoteAmount>\n\t\t\t\t\t</InfoBlock>\n\t\t\t\t\t<InfoBlock onClick={() => handleClickTestDetails()}>\n\t\t\t\t\t\t<InfoText>Published on: {formatPublishDate}</InfoText>\n\t\t\t\t\t\t<InfoText>Views: {views}</InfoText>\n\t\t\t\t\t\t<InfoText>Tests taken: {testsTaken}</InfoText>\n\t\t\t\t\t</InfoBlock>\n\t\t\t\t</TextDescriptionBlock>\n\t\t\t</TestInfoBlock>\n\n\t\t\t<RenderTakeTestButtons\n\t\t\t\thasTakeTestButtons={hasTakeTestButtons}\n\t\t\t\ttest={test}\n\t\t\t\tselectTest={selectTest}\n\t\t\t></RenderTakeTestButtons>\n\t\t</Wrapper>\n\t);\n}\n\nexport default memo(withSnackbar(TestListItem));\n"]},"metadata":{},"sourceType":"module"}
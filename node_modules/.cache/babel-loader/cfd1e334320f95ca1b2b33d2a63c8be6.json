{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/middleware/RequireAuth.js\";\nimport React, { Component, PropTypes, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { getToken } from 'utils/utils';\nimport authActions from 'state/ducks/auth/actions';\nimport { useLazyQuery } from '@apollo/client';\nimport AuthQueries from 'graphql/queries/Auth';\nimport { Backdrop, Card, CardContent, Dialog, Button } from '@material-ui/core';\nimport styled from 'styled-components'; // import Authorize from 'containers/Auth/Loadable';\n\nimport Theme from 'app/themes/styles';\nimport { useHistory } from 'react-router-dom';\nimport LoadingIndicator from '../common/LoadingIndicator'; // import AuthPage from 'app/views/pages/AuthPage/Injectable';\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\nconst StyledBackdrop = styled(Backdrop)`\n\tz-index: 1000 !important;\n\tbackground-color: ${Theme.ncpGrayLowOpacity};\n`;\nconst StyledCard = styled(Card)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tpadding: 100px;\n\tbackground-color: ${Theme.ncpDefaultBackgroundLowOpacity};\n`;\nconst StyledCardContent = styled(CardContent)`\n\tfont-size: 18px;\n\tline-spacing: 5px;\n\tfont-weight: 600;\n`;\n\nconst LoginOverlay = props => {\n  const {\n    isOpen,\n    onLogin\n  } = props;\n  const history = useHistory();\n\n  const handleGoHome = () => {\n    history.push('/');\n  };\n\n  return /*#__PURE__*/React.createElement(StyledBackdrop, {\n    open: isOpen // onClick={}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledCard, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"This feature requires you to\", ' ', /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: () => onLogin(true),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Button, {\n    size: \"large\",\n    onClick: () => handleGoHome(),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, \"Nah, take me back home\")));\n};\n\nexport default function (ComposedComponent) {\n  function Authentication(props) {\n    const [isLoginModalOpen, setOpenLoginModal] = React.useState(false);\n    const {\n      auth\n    } = props;\n    const {\n      authenticated\n    } = auth;\n\n    const handleOpenLoginModal = value => {\n      return setOpenLoginModal(value);\n    };\n\n    if (authenticated && isLoginModalOpen) {\n      setOpenLoginModal(false);\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 4\n      }\n    }, !authenticated && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Dialog, {\n      onClose: () => handleOpenLoginModal(false),\n      \"aria-labelledby\": \"login-modal-in-authorize-popup\",\n      open: isLoginModalOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Suspense, {\n      fallback: LoadingIndicator,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(AuthPage, {\n      isModal: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }))), /*#__PURE__*/React.createElement(LoginOverlay, {\n      isOpen: !authenticated,\n      onLogin: handleOpenLoginModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(ComposedComponent, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }\n    })));\n  } // Authentication.propTypes = { authenticated: PropTypes.bool };\n\n\n  function mapStateToProps(state) {\n    return {\n      auth: state.auth\n    };\n  }\n\n  function mapDispatchToProps(dispatch) {\n    return {\n      dispatch\n    };\n  }\n\n  return connect(mapStateToProps, mapDispatchToProps)(Authentication);\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/middleware/RequireAuth.js"],"names":["React","Component","PropTypes","useEffect","connect","Redirect","getToken","authActions","useLazyQuery","AuthQueries","Backdrop","Card","CardContent","Dialog","Button","styled","Theme","useHistory","LoadingIndicator","AuthPage","lazy","StyledBackdrop","ncpGrayLowOpacity","StyledCard","ncpDefaultBackgroundLowOpacity","StyledCardContent","LoginOverlay","props","isOpen","onLogin","history","handleGoHome","push","ComposedComponent","Authentication","isLoginModalOpen","setOpenLoginModal","useState","auth","authenticated","handleOpenLoginModal","value","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { getToken } from 'utils/utils';\nimport authActions from 'state/ducks/auth/actions';\nimport { useLazyQuery } from '@apollo/client';\nimport AuthQueries from 'graphql/queries/Auth';\nimport { Backdrop, Card, CardContent, Dialog, Button } from '@material-ui/core';\nimport styled from 'styled-components';\n// import Authorize from 'containers/Auth/Loadable';\nimport Theme from 'app/themes/styles';\nimport { useHistory } from 'react-router-dom';\n\nimport LoadingIndicator from '../common/LoadingIndicator';\n// import AuthPage from 'app/views/pages/AuthPage/Injectable';\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nconst StyledBackdrop = styled(Backdrop)`\n\tz-index: 1000 !important;\n\tbackground-color: ${Theme.ncpGrayLowOpacity};\n`;\n\nconst StyledCard = styled(Card)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tflex-direction: column;\n\tpadding: 100px;\n\tbackground-color: ${Theme.ncpDefaultBackgroundLowOpacity};\n`;\n\nconst StyledCardContent = styled(CardContent)`\n\tfont-size: 18px;\n\tline-spacing: 5px;\n\tfont-weight: 600;\n`;\n\nconst LoginOverlay = props => {\n\tconst { isOpen, onLogin } = props;\n\tconst history = useHistory();\n\n\tconst handleGoHome = () => {\n\t\thistory.push('/');\n\t};\n\treturn (\n\t\t<StyledBackdrop\n\t\t\topen={isOpen}\n\t\t\t// onClick={}\n\t\t>\n\t\t\t<StyledCard>\n\t\t\t\t<StyledCardContent>\n\t\t\t\t\tThis feature requires you to{' '}\n\t\t\t\t\t<Button size=\"large\" onClick={() => onLogin(true)} color=\"primary\">\n\t\t\t\t\t\tLogin\n\t\t\t\t\t</Button>\n\t\t\t\t</StyledCardContent>\n\t\t\t\t<Button size=\"large\" onClick={() => handleGoHome()} color=\"primary\">\n\t\t\t\t\tNah, take me back home\n\t\t\t\t</Button>\n\t\t\t</StyledCard>\n\t\t</StyledBackdrop>\n\t);\n};\n\nexport default function(ComposedComponent) {\n\tfunction Authentication(props) {\n\t\tconst [isLoginModalOpen, setOpenLoginModal] = React.useState(false);\n\t\tconst { auth } = props;\n\t\tconst { authenticated } = auth;\n\n\t\tconst handleOpenLoginModal = value => {\n\t\t\treturn setOpenLoginModal(value);\n\t\t};\n\n\t\tif (authenticated && isLoginModalOpen) {\n\t\t\tsetOpenLoginModal(false);\n\t\t}\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{!authenticated && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<Dialog\n\t\t\t\t\t\t\tonClose={() => handleOpenLoginModal(false)}\n\t\t\t\t\t\t\taria-labelledby=\"login-modal-in-authorize-popup\"\n\t\t\t\t\t\t\topen={isLoginModalOpen}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<React.Suspense fallback={LoadingIndicator}>\n\t\t\t\t\t\t\t\t<AuthPage isModal={true}></AuthPage>\n\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t</Dialog>\n\n\t\t\t\t\t\t<LoginOverlay isOpen={!authenticated} onLogin={handleOpenLoginModal}></LoginOverlay>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t<ComposedComponent {...props} />\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\t// Authentication.propTypes = { authenticated: PropTypes.bool };\n\n\tfunction mapStateToProps(state) {\n\t\treturn {\n\t\t\tauth: state.auth,\n\t\t};\n\t}\n\n\tfunction mapDispatchToProps(dispatch) {\n\t\treturn {\n\t\t\tdispatch,\n\t\t};\n\t}\n\n\treturn connect(mapStateToProps, mapDispatchToProps)(Authentication);\n}\n"]},"metadata":{},"sourceType":"module"}
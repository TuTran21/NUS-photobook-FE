{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/QuestionTypes/ListSelection.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { questionIndexing, splitStringByBlank, incrementAlphabet } from 'utils/utils';\nimport CustomInput from '../../Form/EngageInput/index';\nimport QuestionNumber from '../QuestionNumber';\nimport CustomCheckbox from '../../Form/EngageCheckbox';\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\nconst WordLimit = styled.strong`\n\tcolor: #ff0000;\n\tfont-style: italic;\n`;\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\nconst Question = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 15px;\n\tmargin-left: 15px;\n`;\n\nfunction ListSelection(props) {\n  const {\n    questionSection,\n    questionRange,\n    handleOnChange,\n    sectionAnswer\n  } = props;\n  const {\n    instruction,\n    questions\n  } = questionSection;\n  let valueFormat = [];\n\n  if (sectionAnswer) {\n    sectionAnswer.answers.map(answer => {\n      valueFormat.push({\n        id: answer.id,\n        value: answer.value\n      });\n    });\n  }\n\n  let questionIndex = questionIndexing(questionRange);\n  return /*#__PURE__*/React.createElement(QuestionContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInstruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }, instruction), questions.map((question, idx) => {\n    questionIndex = questionIndex + 1;\n    const answer = valueFormat.find(answer => answer.id === idx);\n    const value = answer ? answer.value === 'true' ? true : false : false;\n    const alphabetIndex = incrementAlphabet(idx);\n    return /*#__PURE__*/React.createElement(Question, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(QuestionNumber, {\n      hasAlphabet: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, alphabetIndex), /*#__PURE__*/React.createElement(QuestionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomCheckbox, {\n      isChecked: value,\n      title: question.content,\n      onChange: e => handleOnChange(idx, e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }\n    })));\n  }));\n}\n\nexport default ListSelection;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/QuestionTypes/ListSelection.js"],"names":["React","styled","questionIndexing","splitStringByBlank","incrementAlphabet","CustomInput","QuestionNumber","CustomCheckbox","QuestionContent","div","QuestionInstruction","p","WordLimit","strong","QuestionSelect","span","Question","ListSelection","props","questionSection","questionRange","handleOnChange","sectionAnswer","instruction","questions","valueFormat","answers","map","answer","push","id","value","questionIndex","question","idx","find","alphabetIndex","content","e"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,iBAA/C,QAAwE,aAAxE;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,MAAMC,eAAe,GAAGP,MAAM,CAACQ,GAAI;AACnC;AACA,CAFA;AAIA,MAAMC,mBAAmB,GAAGT,MAAM,CAACU,CAAE;AACrC;AACA,CAFA;AAIA,MAAMC,SAAS,GAAGX,MAAM,CAACY,MAAO;AAChC;AACA;AACA,CAHA;AAKA,MAAMC,cAAc,GAAGb,MAAM,CAACc,IAAK;AACnC;AACA,CAFA;AAIA,MAAMC,QAAQ,GAAGf,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASQ,aAAT,CAAuBC,KAAvB,EAA8B;AAC7B,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,aAAnB;AAAkCC,IAAAA,cAAlC;AAAkDC,IAAAA;AAAlD,MAAoEJ,KAA1E;AACA,QAAM;AAAEK,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAA6BL,eAAnC;AAEA,MAAIM,WAAW,GAAG,EAAlB;;AAEA,MAAIH,aAAJ,EAAmB;AAClBA,IAAAA,aAAa,CAACI,OAAd,CAAsBC,GAAtB,CAA0BC,MAAM,IAAI;AACnCH,MAAAA,WAAW,CAACI,IAAZ,CAAiB;AAAEC,QAAAA,EAAE,EAAEF,MAAM,CAACE,EAAb;AAAiBC,QAAAA,KAAK,EAAEH,MAAM,CAACG;AAA/B,OAAjB;AACA,KAFD;AAGA;;AAED,MAAIC,aAAa,GAAG9B,gBAAgB,CAACkB,aAAD,CAApC;AACA,sBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBG,WAAtB,CADD,EAGEC,SAAS,CAACG,GAAV,CAAc,CAACM,QAAD,EAAWC,GAAX,KAAmB;AACjCF,IAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA,UAAMJ,MAAM,GAAGH,WAAW,CAACU,IAAZ,CAAiBP,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcI,GAAzC,CAAf;AACA,UAAMH,KAAK,GAAGH,MAAM,GAAIA,MAAM,CAACG,KAAP,KAAiB,MAAjB,GAA0B,IAA1B,GAAiC,KAArC,GAA8C,KAAlE;AACA,UAAMK,aAAa,GAAGhC,iBAAiB,CAAC8B,GAAD,CAAvC;AACA,wBACC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AAAgB,MAAA,WAAW,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6BE,aAA7B,CADD,eAEC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AACC,MAAA,SAAS,EAAEL,KADZ;AAEC,MAAA,KAAK,EAAEE,QAAQ,CAACI,OAFjB;AAGC,MAAA,QAAQ,EAAEC,CAAC,IAAIjB,cAAc,CAACa,GAAD,EAAMI,CAAN,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFD,CADD;AAYA,GAjBA,CAHF,CADD;AAwBA;;AAED,eAAerB,aAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { questionIndexing, splitStringByBlank, incrementAlphabet } from 'utils/utils';\nimport CustomInput from '../../Form/EngageInput/index';\nimport QuestionNumber from '../QuestionNumber';\nimport CustomCheckbox from '../../Form/EngageCheckbox';\n\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\n\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\n\nconst WordLimit = styled.strong`\n\tcolor: #ff0000;\n\tfont-style: italic;\n`;\n\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\n\nconst Question = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 15px;\n\tmargin-left: 15px;\n`;\n\nfunction ListSelection(props) {\n\tconst { questionSection, questionRange, handleOnChange, sectionAnswer } = props;\n\tconst { instruction, questions } = questionSection;\n\n\tlet valueFormat = [];\n\n\tif (sectionAnswer) {\n\t\tsectionAnswer.answers.map(answer => {\n\t\t\tvalueFormat.push({ id: answer.id, value: answer.value });\n\t\t});\n\t}\n\n\tlet questionIndex = questionIndexing(questionRange);\n\treturn (\n\t\t<QuestionContent>\n\t\t\t<QuestionInstruction>{instruction}</QuestionInstruction>\n\n\t\t\t{questions.map((question, idx) => {\n\t\t\t\tquestionIndex = questionIndex + 1;\n\t\t\t\tconst answer = valueFormat.find(answer => answer.id === idx);\n\t\t\t\tconst value = answer ? (answer.value === 'true' ? true : false) : false;\n\t\t\t\tconst alphabetIndex = incrementAlphabet(idx);\n\t\t\t\treturn (\n\t\t\t\t\t<Question key={idx}>\n\t\t\t\t\t\t<QuestionNumber hasAlphabet>{alphabetIndex}</QuestionNumber>\n\t\t\t\t\t\t<QuestionSelect>\n\t\t\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\t\t\tisChecked={value}\n\t\t\t\t\t\t\t\ttitle={question.content}\n\t\t\t\t\t\t\t\tonChange={e => handleOnChange(idx, e)}\n\t\t\t\t\t\t\t></CustomCheckbox>\n\t\t\t\t\t\t</QuestionSelect>\n\t\t\t\t\t</Question>\n\t\t\t\t);\n\t\t\t})}\n\t\t</QuestionContent>\n\t);\n}\n\nexport default ListSelection;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/EditableQuestions/EditableMultipleChoice.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport CustomRadioButton from '../../Form/EngageRadioButtons/index';\nimport QuestionNumber from 'app/views/components/Test/QuestionNumber';\nimport { incrementAlphabet, questionIndexing } from 'utils/utils';\nimport { Button } from '@material-ui/core';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport OptionsInput from '../questionCreateForms/OptionsInput';\nconst CreateTestParagraph = React.lazy(() => import('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph'));\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\nconst Question = styled.div`\n\t${props => props.isquestionedit === 'true' && `margin-bottom: 80px;\n\t`}\n\n\t${props => props.iseditable === 'false' && 'margin-bottom: 15px;'}\n`;\nconst QuestionWrapper = styled.div`\n\t${props => props.iseditable === 'true' ? `\n\t\t\tmargin-top: 35px;\n\t&:before {\n\t\tpadding:0;\n\t\tmargin:0;\n\t\tdisplay:block;\n\t\tcontent: \"\";\n\t\twidth:50%;\n\t\theight:0.7px;\n\t\tbackground-color:#bcbcbc;\n\t\tposition: absolute;\n\t\tleft: 25%;\n\t\t` : ``}\n`;\nconst ActionsWrapper = styled.div`\n\tposition: absolute;\n\ttop: -45px;\n\tright: 20px;\n\t@media (max-width: 400px) {\n\t\tleft: 20px;\n\t\ttop: -18px;\n\t}\n`;\n\nfunction EditableMultipleChoice(props) {\n  const {\n    questionSection,\n    paragraphAmount,\n    questionRange,\n    handleOnChange,\n    sectionAnswer,\n    handleRemoveQuestion,\n    handleAddQuestion,\n    isEditable\n  } = props;\n  const {\n    instruction,\n    questionType,\n    questions\n  } = questionSection;\n\n  const handleAddOptions = (idx, key, content, multipleChoices, option) => {\n    multipleChoices.push(option);\n    handleOnChange(idx, key, content, multipleChoices);\n  };\n\n  const handleEditOption = (idx, key, content, multipleChoices, option, optionIdx) => {\n    if (key.indexOf(option)) {\n      key = option;\n    }\n\n    multipleChoices[optionIdx] = option;\n    handleOnChange(idx, key, content, multipleChoices);\n  };\n\n  const handleRemoveOption = (idx, key, content, multipleChoices, optionIdx) => {\n    multipleChoices.splice(optionIdx, 1);\n    handleOnChange(idx, key, content, multipleChoices);\n  };\n\n  let questionIndex = 0;\n\n  if (questionRange) {\n    questionIndex = questionIndexing(questionRange);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(QuestionContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ActionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, handleAddQuestion && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => handleAddQuestion('multipleChoice'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, \"Add question\")), /*#__PURE__*/React.createElement(QuestionInstruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, instruction), questions.map((question, idx) => {\n    questionIndex = questionIndex + 1;\n    const {\n      multipleChoices\n    } = question;\n\n    if (!multipleChoices) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }\n      }, \"Something went wrong, please try again later\");\n    }\n\n    let optionFormat = [];\n    multipleChoices.map((option, idx) => optionFormat.push({\n      key: idx,\n      label: option\n    }));\n    return /*#__PURE__*/React.createElement(QuestionWrapper, {\n      iseditable: isEditable.toString(),\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, isEditable && /*#__PURE__*/React.createElement(OptionsInput, {\n      wrapperStyle: {\n        marginBottom: '35px'\n      },\n      handleRemoveOption: optionIdx => handleRemoveOption(idx, question.key, question.content, question.multipleChoices, optionIdx),\n      handleAddOptions: option => handleAddOptions(idx, question.key, question.content, question.multipleChoices, option),\n      handleEditOption: (option, optionIdx) => handleEditOption(idx, question.key, question.content, question.multipleChoices, option, optionIdx),\n      options: question.multipleChoices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Question, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(QuestionNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, questionIndex), /*#__PURE__*/React.createElement(QuestionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }\n    }, isEditable && /*#__PURE__*/React.createElement(React.Suspense, {\n      fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CreateTestParagraph, {\n      handleConfirm: content => handleOnChange(idx, question.key.toUpperCase(), content, question.multipleChoices),\n      handleRemove: () => handleRemoveQuestion(idx),\n      isQuestionEdit: true,\n      hasParagraphAlphabet: false,\n      content: question.content,\n      wrapperStyle: {\n        flexGrow: 1,\n        display: 'inline-block',\n        width: '90%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    })), !isEditable && question.content, /*#__PURE__*/React.createElement(CustomRadioButton, {\n      disabled: !isEditable,\n      value: {\n        key: idx,\n        value: question.key\n      } // defaultValue={question.key}\n      ,\n      hasAlphabetLabel: true,\n      flexvertical: true,\n      onChange: e => handleOnChange(idx, e ? e.label : '', question.content, question.multipleChoices),\n      holderStyle: {\n        marginTop: '15px',\n        marginLeft: '15px'\n      },\n      options: optionFormat,\n      isEditable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 10\n      }\n    }))));\n  })));\n}\n\nexport default EditableMultipleChoice;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/EditableQuestions/EditableMultipleChoice.js"],"names":["React","styled","CustomRadioButton","QuestionNumber","incrementAlphabet","questionIndexing","Button","LoadingIndicator","OptionsInput","CreateTestParagraph","lazy","QuestionContent","div","QuestionInstruction","p","QuestionSelect","span","Question","props","isquestionedit","iseditable","QuestionWrapper","ActionsWrapper","EditableMultipleChoice","questionSection","paragraphAmount","questionRange","handleOnChange","sectionAnswer","handleRemoveQuestion","handleAddQuestion","isEditable","instruction","questionType","questions","handleAddOptions","idx","key","content","multipleChoices","option","push","handleEditOption","optionIdx","indexOf","handleRemoveOption","splice","questionIndex","map","question","optionFormat","label","toString","marginBottom","toUpperCase","flexGrow","display","width","value","e","marginTop","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,aAApD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AAEA,MAAMC,mBAAmB,GAAGT,KAAK,CAACU,IAAN,CAAW,MACtC,OAAO,wFAAP,CAD2B,CAA5B;AAGA,MAAMC,eAAe,GAAGV,MAAM,CAACW,GAAI;AACnC;AACA,CAFA;AAIA,MAAMC,mBAAmB,GAAGZ,MAAM,CAACa,CAAE;AACrC;AACA,CAFA;AAIA,MAAMC,cAAc,GAAGd,MAAM,CAACe,IAAK;AACnC;AACA,CAFA;AAIA,MAAMC,QAAQ,GAAGhB,MAAM,CAACW,GAAI;AAC5B,GAAGM,KAAK,IACNA,KAAK,CAACC,cAAN,KAAyB,MAAzB,IACC;AACH,EAAG;AACH;AACA,GAAGD,KAAK,IAAIA,KAAK,CAACE,UAAN,KAAqB,OAArB,IAAgC,sBAAuB;AACnE,CAPA;AASA,MAAMC,eAAe,GAAGpB,MAAM,CAACW,GAAI;AACnC,GAAGM,KAAK,IACNA,KAAK,CAACE,UAAN,KAAqB,MAArB,GACI;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbE,GAcI,EAAE;AACR,CAjBA;AAmBA,MAAME,cAAc,GAAGrB,MAAM,CAACW,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;;AAUA,SAASW,sBAAT,CAAgCL,KAAhC,EAAuC;AACtC,QAAM;AACLM,IAAAA,eADK;AAELC,IAAAA,eAFK;AAGLC,IAAAA,aAHK;AAILC,IAAAA,cAJK;AAKLC,IAAAA,aALK;AAMLC,IAAAA,oBANK;AAOLC,IAAAA,iBAPK;AAQLC,IAAAA;AARK,MASFb,KATJ;AAUA,QAAM;AAAEc,IAAAA,WAAF;AAAeC,IAAAA,YAAf;AAA6BC,IAAAA;AAA7B,MAA2CV,eAAjD;;AAEA,QAAMW,gBAAgB,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,EAAqCC,MAArC,KAAgD;AACxED,IAAAA,eAAe,CAACE,IAAhB,CAAqBD,MAArB;AACAb,IAAAA,cAAc,CAACS,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,CAAd;AACA,GAHD;;AAKA,QAAMG,gBAAgB,GAAG,CAACN,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,EAAqCC,MAArC,EAA6CG,SAA7C,KAA2D;AACnF,QAAIN,GAAG,CAACO,OAAJ,CAAYJ,MAAZ,CAAJ,EAAyB;AACxBH,MAAAA,GAAG,GAAGG,MAAN;AACA;;AAEDD,IAAAA,eAAe,CAACI,SAAD,CAAf,GAA6BH,MAA7B;AACAb,IAAAA,cAAc,CAACS,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,CAAd;AACA,GAPD;;AASA,QAAMM,kBAAkB,GAAG,CAACT,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,EAAqCI,SAArC,KAAmD;AAC7EJ,IAAAA,eAAe,CAACO,MAAhB,CAAuBH,SAAvB,EAAkC,CAAlC;AACAhB,IAAAA,cAAc,CAACS,GAAD,EAAMC,GAAN,EAAWC,OAAX,EAAoBC,eAApB,CAAd;AACA,GAHD;;AAKA,MAAIQ,aAAa,GAAG,CAApB;;AACA,MAAIrB,aAAJ,EAAmB;AAClBqB,IAAAA,aAAa,GAAG1C,gBAAgB,CAACqB,aAAD,CAAhC;AACA;;AACD,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEI,iBAAiB,iBACjB,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAE,MAAMA,iBAAiB,CAAC,gBAAD,CAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,CADD,eAQC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBE,WAAtB,CARD,EAUEE,SAAS,CAACc,GAAV,CAAc,CAACC,QAAD,EAAWb,GAAX,KAAmB;AACjCW,IAAAA,aAAa,GAAGA,aAAa,GAAG,CAAhC;AACA,UAAM;AAAER,MAAAA;AAAF,QAAsBU,QAA5B;;AAEA,QAAI,CAACV,eAAL,EAAsB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAAP;AACA;;AACD,QAAIW,YAAY,GAAG,EAAnB;AACAX,IAAAA,eAAe,CAACS,GAAhB,CAAoB,CAACR,MAAD,EAASJ,GAAT,KAAiBc,YAAY,CAACT,IAAb,CAAkB;AAAEJ,MAAAA,GAAG,EAAED,GAAP;AAAYe,MAAAA,KAAK,EAAEX;AAAnB,KAAlB,CAArC;AAEA,wBACC,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAET,UAAU,CAACqB,QAAX,EAA7B;AAAoD,MAAA,GAAG,EAAEhB,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEL,UAAU,iBACV,oBAAC,YAAD;AACC,MAAA,YAAY,EAAE;AAAEsB,QAAAA,YAAY,EAAE;AAAhB,OADf;AAEC,MAAA,kBAAkB,EAAEV,SAAS,IAC5BE,kBAAkB,CACjBT,GADiB,EAEjBa,QAAQ,CAACZ,GAFQ,EAGjBY,QAAQ,CAACX,OAHQ,EAIjBW,QAAQ,CAACV,eAJQ,EAKjBI,SALiB,CAHpB;AAWC,MAAA,gBAAgB,EAAEH,MAAM,IACvBL,gBAAgB,CACfC,GADe,EAEfa,QAAQ,CAACZ,GAFM,EAGfY,QAAQ,CAACX,OAHM,EAIfW,QAAQ,CAACV,eAJM,EAKfC,MALe,CAZlB;AAoBC,MAAA,gBAAgB,EAAE,CAACA,MAAD,EAASG,SAAT,KACjBD,gBAAgB,CACfN,GADe,EAEfa,QAAQ,CAACZ,GAFM,EAGfY,QAAQ,CAACX,OAHM,EAIfW,QAAQ,CAACV,eAJM,EAKfC,MALe,EAMfG,SANe,CArBlB;AA8BC,MAAA,OAAO,EAAEM,QAAQ,CAACV,eA9BnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAoCC,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEH,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBW,aAAjB,CADD,eAEC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACEhB,UAAU,iBACV,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,QAAQ,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,mBAAD;AACC,MAAA,aAAa,EAAEO,OAAO,IACrBX,cAAc,CACbS,GADa,EAEba,QAAQ,CAACZ,GAAT,CAAaiB,WAAb,EAFa,EAGbhB,OAHa,EAIbW,QAAQ,CAACV,eAJI,CAFhB;AASC,MAAA,YAAY,EAAE,MAAMV,oBAAoB,CAACO,GAAD,CATzC;AAUC,MAAA,cAAc,EAAE,IAVjB;AAWC,MAAA,oBAAoB,EAAE,KAXvB;AAYC,MAAA,OAAO,EAAEa,QAAQ,CAACX,OAZnB;AAaC,MAAA,YAAY,EAAE;AAAEiB,QAAAA,QAAQ,EAAE,CAAZ;AAAeC,QAAAA,OAAO,EAAE,cAAxB;AAAwCC,QAAAA,KAAK,EAAE;AAA/C,OAbf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFF,EAqBE,CAAC1B,UAAD,IAAekB,QAAQ,CAACX,OArB1B,eAuBC,oBAAC,iBAAD;AACC,MAAA,QAAQ,EAAE,CAACP,UADZ;AAEC,MAAA,KAAK,EAAE;AAAEM,QAAAA,GAAG,EAAED,GAAP;AAAYsB,QAAAA,KAAK,EAAET,QAAQ,CAACZ;AAA5B,OAFR,CAGC;AAHD;AAIC,MAAA,gBAAgB,MAJjB;AAKC,MAAA,YAAY,MALb;AAMC,MAAA,QAAQ,EAAEsB,CAAC,IACVhC,cAAc,CACbS,GADa,EAEbuB,CAAC,GAAGA,CAAC,CAACR,KAAL,GAAa,EAFD,EAGbF,QAAQ,CAACX,OAHI,EAIbW,QAAQ,CAACV,eAJI,CAPhB;AAcC,MAAA,WAAW,EAAE;AACZqB,QAAAA,SAAS,EAAE,MADC;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAdd;AAkBC,MAAA,OAAO,EAAEX,YAlBV;AAmBC,MAAA,UAAU,EAAE,IAnBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBD,CAFD,CApCD,CADD;AAuFA,GAjGA,CAVF,CADD,CADD;AAiHA;;AAED,eAAe3B,sBAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport CustomRadioButton from '../../Form/EngageRadioButtons/index';\nimport QuestionNumber from 'app/views/components/Test/QuestionNumber';\nimport { incrementAlphabet, questionIndexing } from 'utils/utils';\nimport { Button } from '@material-ui/core';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nimport OptionsInput from '../questionCreateForms/OptionsInput';\n\nconst CreateTestParagraph = React.lazy(() =>\n\timport('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph'),\n);\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\n\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\n\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\n\nconst Question = styled.div`\n\t${props =>\n\t\tprops.isquestionedit === 'true' &&\n\t\t`margin-bottom: 80px;\n\t`}\n\n\t${props => props.iseditable === 'false' && 'margin-bottom: 15px;'}\n`;\n\nconst QuestionWrapper = styled.div`\n\t${props =>\n\t\tprops.iseditable === 'true'\n\t\t\t? `\n\t\t\tmargin-top: 35px;\n\t&:before {\n\t\tpadding:0;\n\t\tmargin:0;\n\t\tdisplay:block;\n\t\tcontent: \"\";\n\t\twidth:50%;\n\t\theight:0.7px;\n\t\tbackground-color:#bcbcbc;\n\t\tposition: absolute;\n\t\tleft: 25%;\n\t\t`\n\t\t\t: ``}\n`;\n\nconst ActionsWrapper = styled.div`\n\tposition: absolute;\n\ttop: -45px;\n\tright: 20px;\n\t@media (max-width: 400px) {\n\t\tleft: 20px;\n\t\ttop: -18px;\n\t}\n`;\n\nfunction EditableMultipleChoice(props) {\n\tconst {\n\t\tquestionSection,\n\t\tparagraphAmount,\n\t\tquestionRange,\n\t\thandleOnChange,\n\t\tsectionAnswer,\n\t\thandleRemoveQuestion,\n\t\thandleAddQuestion,\n\t\tisEditable,\n\t} = props;\n\tconst { instruction, questionType, questions } = questionSection;\n\n\tconst handleAddOptions = (idx, key, content, multipleChoices, option) => {\n\t\tmultipleChoices.push(option);\n\t\thandleOnChange(idx, key, content, multipleChoices);\n\t};\n\n\tconst handleEditOption = (idx, key, content, multipleChoices, option, optionIdx) => {\n\t\tif (key.indexOf(option)) {\n\t\t\tkey = option;\n\t\t}\n\n\t\tmultipleChoices[optionIdx] = option;\n\t\thandleOnChange(idx, key, content, multipleChoices);\n\t};\n\n\tconst handleRemoveOption = (idx, key, content, multipleChoices, optionIdx) => {\n\t\tmultipleChoices.splice(optionIdx, 1);\n\t\thandleOnChange(idx, key, content, multipleChoices);\n\t};\n\n\tlet questionIndex = 0;\n\tif (questionRange) {\n\t\tquestionIndex = questionIndexing(questionRange);\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<QuestionContent>\n\t\t\t\t<ActionsWrapper>\n\t\t\t\t\t{handleAddQuestion && (\n\t\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={() => handleAddQuestion('multipleChoice')}>\n\t\t\t\t\t\t\tAdd question\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t)}\n\t\t\t\t</ActionsWrapper>\n\t\t\t\t<QuestionInstruction>{instruction}</QuestionInstruction>\n\n\t\t\t\t{questions.map((question, idx) => {\n\t\t\t\t\tquestionIndex = questionIndex + 1;\n\t\t\t\t\tconst { multipleChoices } = question;\n\n\t\t\t\t\tif (!multipleChoices) {\n\t\t\t\t\t\treturn <div>Something went wrong, please try again later</div>;\n\t\t\t\t\t}\n\t\t\t\t\tlet optionFormat = [];\n\t\t\t\t\tmultipleChoices.map((option, idx) => optionFormat.push({ key: idx, label: option }));\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<QuestionWrapper iseditable={isEditable.toString()} key={idx}>\n\t\t\t\t\t\t\t{isEditable && (\n\t\t\t\t\t\t\t\t<OptionsInput\n\t\t\t\t\t\t\t\t\twrapperStyle={{ marginBottom: '35px' }}\n\t\t\t\t\t\t\t\t\thandleRemoveOption={optionIdx =>\n\t\t\t\t\t\t\t\t\t\thandleRemoveOption(\n\t\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\t\tquestion.key,\n\t\t\t\t\t\t\t\t\t\t\tquestion.content,\n\t\t\t\t\t\t\t\t\t\t\tquestion.multipleChoices,\n\t\t\t\t\t\t\t\t\t\t\toptionIdx,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleAddOptions={option =>\n\t\t\t\t\t\t\t\t\t\thandleAddOptions(\n\t\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\t\tquestion.key,\n\t\t\t\t\t\t\t\t\t\t\tquestion.content,\n\t\t\t\t\t\t\t\t\t\t\tquestion.multipleChoices,\n\t\t\t\t\t\t\t\t\t\t\toption,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleEditOption={(option, optionIdx) =>\n\t\t\t\t\t\t\t\t\t\thandleEditOption(\n\t\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\t\tquestion.key,\n\t\t\t\t\t\t\t\t\t\t\tquestion.content,\n\t\t\t\t\t\t\t\t\t\t\tquestion.multipleChoices,\n\t\t\t\t\t\t\t\t\t\t\toption,\n\t\t\t\t\t\t\t\t\t\t\toptionIdx,\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\toptions={question.multipleChoices}\n\t\t\t\t\t\t\t\t></OptionsInput>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<Question key={idx}>\n\t\t\t\t\t\t\t\t<QuestionNumber>{questionIndex}</QuestionNumber>\n\t\t\t\t\t\t\t\t<QuestionSelect>\n\t\t\t\t\t\t\t\t\t{isEditable && (\n\t\t\t\t\t\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator></LoadingIndicator>}>\n\t\t\t\t\t\t\t\t\t\t\t<CreateTestParagraph\n\t\t\t\t\t\t\t\t\t\t\t\thandleConfirm={content =>\n\t\t\t\t\t\t\t\t\t\t\t\t\thandleOnChange(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.key.toUpperCase(),\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontent,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tquestion.multipleChoices,\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\thandleRemove={() => handleRemoveQuestion(idx)}\n\t\t\t\t\t\t\t\t\t\t\t\tisQuestionEdit={true}\n\t\t\t\t\t\t\t\t\t\t\t\thasParagraphAlphabet={false}\n\t\t\t\t\t\t\t\t\t\t\t\tcontent={question.content}\n\t\t\t\t\t\t\t\t\t\t\t\twrapperStyle={{ flexGrow: 1, display: 'inline-block', width: '90%' }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{!isEditable && question.content}\n\n\t\t\t\t\t\t\t\t\t<CustomRadioButton\n\t\t\t\t\t\t\t\t\t\tdisabled={!isEditable}\n\t\t\t\t\t\t\t\t\t\tvalue={{ key: idx, value: question.key }}\n\t\t\t\t\t\t\t\t\t\t// defaultValue={question.key}\n\t\t\t\t\t\t\t\t\t\thasAlphabetLabel\n\t\t\t\t\t\t\t\t\t\tflexvertical\n\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\thandleOnChange(\n\t\t\t\t\t\t\t\t\t\t\t\tidx,\n\t\t\t\t\t\t\t\t\t\t\t\te ? e.label : '',\n\t\t\t\t\t\t\t\t\t\t\t\tquestion.content,\n\t\t\t\t\t\t\t\t\t\t\t\tquestion.multipleChoices,\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tholderStyle={{\n\t\t\t\t\t\t\t\t\t\t\tmarginTop: '15px',\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px',\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\toptions={optionFormat}\n\t\t\t\t\t\t\t\t\t\tisEditable={true}\n\t\t\t\t\t\t\t\t\t></CustomRadioButton>\n\t\t\t\t\t\t\t\t</QuestionSelect>\n\t\t\t\t\t\t\t</Question>\n\t\t\t\t\t\t</QuestionWrapper>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</QuestionContent>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default EditableMultipleChoice;\n"]},"metadata":{},"sourceType":"module"}
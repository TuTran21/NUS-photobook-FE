{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/ConfirmEmail/index.js\";\nimport React, { useEffect } from 'react';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { useMutation } from '@apollo/client';\nimport UserMutations from 'graphql/mutations/User';\nimport { withSnackbar } from 'notistack';\nimport history from 'utils/history';\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction ConfirmEmail(props) {\n  const emailToken = props.match.params.emailToken;\n  const [verifyEmail, verifyEmailRes] = useMutation(UserMutations.CONFIRM_EMAIL, {\n    variables: {\n      emailToken\n    },\n    onCompleted: () => {\n      history.push('/auth');\n      props.enqueueSnackbar('Your email has been verified, you can now log in, thank you.', {\n        variant: 'success',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        }\n      });\n    },\n    onError: () => {\n      history.push('/auth');\n      props.enqueueSnackbar('Something went wrong, please try again later or contact administrator to resolve.', {\n        variant: 'error',\n        anchorOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    verifyEmail();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      hasSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default withSnackbar(ConfirmEmail);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/ConfirmEmail/index.js"],"names":["React","useEffect","LoadingIndicator","useMutation","UserMutations","withSnackbar","history","AuthPage","lazy","ConfirmEmail","props","emailToken","match","params","verifyEmail","verifyEmailRes","CONFIRM_EMAIL","variables","onCompleted","push","enqueueSnackbar","variant","anchorOrigin","vertical","horizontal","onError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,IAAN,CAAW,MAAM,OAAO,qCAAP,CAAjB,CAAjB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,QAAMC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,UAAtC;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCZ,WAAW,CAACC,aAAa,CAACY,aAAf,EAA8B;AAC9EC,IAAAA,SAAS,EAAE;AAAEN,MAAAA;AAAF,KADmE;AAE9EO,IAAAA,WAAW,EAAE,MAAM;AAClBZ,MAAAA,OAAO,CAACa,IAAR,CAAa,OAAb;AACAT,MAAAA,KAAK,CAACU,eAAN,CAAsB,8DAAtB,EAAsF;AACrFC,QAAAA,OAAO,EAAE,SAD4E;AAErFC,QAAAA,YAAY,EAAE;AACbC,UAAAA,QAAQ,EAAE,KADG;AAEbC,UAAAA,UAAU,EAAE;AAFC;AAFuE,OAAtF;AAOA,KAX6E;AAY9EC,IAAAA,OAAO,EAAE,MAAM;AACdnB,MAAAA,OAAO,CAACa,IAAR,CAAa,OAAb;AACAT,MAAAA,KAAK,CAACU,eAAN,CAAsB,mFAAtB,EAA2G;AAC1GC,QAAAA,OAAO,EAAE,OADiG;AAE1GC,QAAAA,YAAY,EAAE;AACbC,UAAAA,QAAQ,EAAE,KADG;AAEbC,UAAAA,UAAU,EAAE;AAFC;AAF4F,OAA3G;AAOA;AArB6E,GAA9B,CAAjD;AAwBAvB,EAAAA,SAAS,CAAC,MAAM;AACfa,IAAAA,WAAW;AACX,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE,oBAAC,gBAAD;AAAkB,MAAA,UAAU,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAKA;;AAED,eAAeT,YAAY,CAACI,YAAD,CAA3B","sourcesContent":["import React, { useEffect } from 'react';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { useMutation } from '@apollo/client';\nimport UserMutations from 'graphql/mutations/User';\nimport { withSnackbar } from 'notistack';\nimport history from 'utils/history';\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction ConfirmEmail(props) {\n\tconst emailToken = props.match.params.emailToken;\n\tconst [verifyEmail, verifyEmailRes] = useMutation(UserMutations.CONFIRM_EMAIL, {\n\t\tvariables: { emailToken },\n\t\tonCompleted: () => {\n\t\t\thistory.push('/auth');\n\t\t\tprops.enqueueSnackbar('Your email has been verified, you can now log in, thank you.', {\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\tonError: () => {\n\t\t\thistory.push('/auth');\n\t\t\tprops.enqueueSnackbar('Something went wrong, please try again later or contact administrator to resolve.', {\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n\n\tuseEffect(() => {\n\t\tverifyEmail();\n\t}, []);\n\n\treturn (\n\t\t<React.Suspense fallback={<LoadingIndicator hasSpacing></LoadingIndicator>}>\n\t\t\t<AuthPage></AuthPage>\n\t\t</React.Suspense>\n\t);\n}\n\nexport default withSnackbar(ConfirmEmail);\n"]},"metadata":{},"sourceType":"module"}
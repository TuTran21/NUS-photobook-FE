{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/PassageImageEdit/index.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport ImageCrop from 'utils/react-avatar-edit/src/avatar';\nimport { convertToBase64 } from 'utils/utils';\nconst ImageWrapper = styled.div`\n\tposition: relative;\n\tmargin-bottom: 40px;\n`;\nconst Image = styled.img`\n\twidth: 100%;\n\theight: auto;\n`;\nconst ImageHolder = styled.div`\n\twidth: 100%;\n\theight: auto;\n\tmin-height: 200px;\n\tborder: 1px dashed grey;\n\tposition: relative;\n`;\nconst EditImageBtn = styled(Button)`\n\tposition: absolute !important;\n\tbottom: 0;\n\twidth: 100%;\n\tdisplay: flex !important;\n`;\n\nfunction PassageImageEditor(props) {\n  const {\n    src,\n    handleAddImage\n  } = props;\n  const [isHover, setIsHover] = useState(false);\n  const [isEditImage, setIsEditImage] = useState(false);\n\n  const toggleHoverState = value => {\n    setIsHover(value);\n  };\n\n  const toggleEditImageState = value => {\n    setIsEditImage(value);\n  };\n\n  const onInputImage = async file => {\n    const reader = await convertToBase64(file);\n\n    reader.onloadend = () => {\n      handleAddImage(reader.result);\n    };\n  };\n\n  const onConfirm = preview => {\n    toggleEditImageState(false);\n    return;\n  };\n\n  return /*#__PURE__*/React.createElement(ImageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ImageHolder, {\n    onMouseEnter: () => toggleHoverState(true),\n    onMouseLeave: () => toggleHoverState(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    src: src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), isHover && /*#__PURE__*/React.createElement(EditImageBtn // disabled={uploadAvatarRes.loading}\n  , {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"large\",\n    onClick: () => toggleEditImageState(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-upload\",\n    style: {\n      marginBottom: '0px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, \"Edit image\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-upload\",\n    style: {\n      display: 'none',\n      width: '100%'\n    },\n    type: \"file\",\n    onChange: event => onInputImage(event.target.files[0]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default PassageImageEditor;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/PassageImageEdit/index.js"],"names":["React","useState","styled","Button","LoadingIndicator","ImageCrop","convertToBase64","ImageWrapper","div","Image","img","ImageHolder","EditImageBtn","PassageImageEditor","props","src","handleAddImage","isHover","setIsHover","isEditImage","setIsEditImage","toggleHoverState","value","toggleEditImageState","onInputImage","file","reader","onloadend","result","onConfirm","preview","marginBottom","width","display","event","target","files"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport ImageCrop from 'utils/react-avatar-edit/src/avatar';\nimport { convertToBase64 } from 'utils/utils';\n\nconst ImageWrapper = styled.div`\n\tposition: relative;\n\tmargin-bottom: 40px;\n`;\n\nconst Image = styled.img`\n\twidth: 100%;\n\theight: auto;\n`;\n\nconst ImageHolder = styled.div`\n\twidth: 100%;\n\theight: auto;\n\tmin-height: 200px;\n\tborder: 1px dashed grey;\n\tposition: relative;\n`;\n\nconst EditImageBtn = styled(Button)`\n\tposition: absolute !important;\n\tbottom: 0;\n\twidth: 100%;\n\tdisplay: flex !important;\n`;\nfunction PassageImageEditor(props) {\n\tconst { src, handleAddImage } = props;\n\tconst [isHover, setIsHover] = useState(false);\n\tconst [isEditImage, setIsEditImage] = useState(false);\n\n\tconst toggleHoverState = value => {\n\t\tsetIsHover(value);\n\t};\n\n\tconst toggleEditImageState = value => {\n\t\tsetIsEditImage(value);\n\t};\n\n\tconst onInputImage = async file => {\n\t\tconst reader = await convertToBase64(file);\n\t\treader.onloadend = () => {\n\t\t\thandleAddImage(reader.result);\n\t\t};\n\t};\n\n\tconst onConfirm = preview => {\n\t\ttoggleEditImageState(false);\n\t\treturn;\n\t};\n\n\treturn (\n\t\t<ImageWrapper>\n\t\t\t<ImageHolder onMouseEnter={() => toggleHoverState(true)} onMouseLeave={() => toggleHoverState(false)}>\n\t\t\t\t<Image src={src}></Image>\n\t\t\t\t{isHover && (\n\t\t\t\t\t<EditImageBtn\n\t\t\t\t\t\t// disabled={uploadAvatarRes.loading}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\tonClick={() => toggleEditImageState(true)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<label htmlFor=\"file-upload\" style={{ marginBottom: '0px', width: '100%' }}>\n\t\t\t\t\t\t\tEdit image\n\t\t\t\t\t\t</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"file-upload\"\n\t\t\t\t\t\t\tstyle={{ display: 'none', width: '100%' }}\n\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\tonChange={event => onInputImage(event.target.files[0])}\n\t\t\t\t\t\t></input>\n\t\t\t\t\t</EditImageBtn>\n\t\t\t\t)}\n\t\t\t</ImageHolder>\n\t\t</ImageWrapper>\n\t);\n}\n\nexport default PassageImageEditor;\n"]},"metadata":{},"sourceType":"module"}
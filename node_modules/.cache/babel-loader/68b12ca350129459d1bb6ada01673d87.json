{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/CreateTestToolbar/index.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { Button, Dialog, DialogTitle, DialogActions, DialogContent, DialogContentText, CircularProgress, Snackbar } from '@material-ui/core';\nimport theme from 'app/assets/theme';\nimport SendIcon from '@material-ui/icons/Send';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst ConfirmButton = styled(Button)`\n\tfont-size: 14px !important;\n`;\nconst CancelButton = styled(Button)`\n\tfont-size: 14px !important;\n`;\nconst LoadingProgress = styled(CircularProgress)`\n\tmargin-left: 10px;\n\t${props => props.isloading === 'true' ? '' : 'display: none !important;'}\n`;\nconst ToolbarWrapper = styled.div`\n\theight: 50px;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0px;\n\tleft: 0px;\n\tright: 0px;\n\tpadding: 0px;\n\tbackground-color: ${theme.ncpPrimaryDark};\n\tcolor: white;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 0px 30px;\n`;\nconst TestTitleWrapper = styled.div`\n\tfont-size: 18px;\n\tmargin-right: auto;\n\n\t@media only screen and (max-width: 480px) {\n\t\tdisplay: none;\n\t}\n`;\nconst ActionWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n\twidth: 300px;\n\tmargin-left: auto;\n`;\nconst ActionButton = styled(Button)`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 0.375rem 1.6rem;\n\tcolor: ${theme.ncpWhite};\n\tfont-weight: 700;\n\tfont-size: 14px !important;\n`;\nconst StyledSubmitIcon = styled(SendIcon)`\n\tmargin-left: 10px;\n`;\n\nfunction CreateTestToolbar(props) {\n  const {\n    title = '',\n    isLoading,\n    handleSave,\n    error,\n    handleChangeLocation\n  } = props;\n  const mountedRef = useRef(true);\n  const [isSubmitModalOpen, openSubmitModal] = useState(false);\n  const [snackbar, setSnackbar] = useState({\n    isOpen: false,\n    variant: 'success',\n    message: ''\n  });\n\n  const handleCloseSubmitModal = () => {\n    openSubmitModal(false);\n  };\n\n  const handleOpenSubmitModal = () => {\n    openSubmitModal(true);\n  };\n\n  const handleSubmitButtonPressed = () => {\n    handleSave();\n\n    if (!isLoading && mountedRef.current) {\n      handleCloseSubmitModal();\n    }\n  };\n\n  const handleCloseSnackbar = () => {\n    setSnackbar({ ...snackbar,\n      isOpen: false\n    });\n  };\n\n  const handleOpenSnackbar = (message = '', variant = '') => {\n    if (!snackbar.isOpen) {\n      return setSnackbar({\n        isOpen: true,\n        variant,\n        message\n      });\n    }\n  };\n\n  if (error) {\n    handleOpenSnackbar(error.message, 'error');\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'top',\n      horizontal: 'right'\n    },\n    open: snackbar.isOpen,\n    autoHideDuration: 4000,\n    onClose: () => handleCloseSnackbar(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(MuiAlert, {\n    elevation: 3,\n    variant: \"filled\",\n    onClose: () => handleCloseSnackbar(),\n    severity: snackbar.variant,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, snackbar.message)), /*#__PURE__*/React.createElement(Dialog, {\n    open: isSubmitModalOpen,\n    onClose: handleCloseSubmitModal,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"alert-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, 'Are you sure ?'), /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DialogContentText, {\n    id: \"alert-dialog-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 6\n    }\n  }, \"This action will save the test, modifying everything according to your content.\")), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmButton, {\n    isloading: isLoading.toString(),\n    color: \"primary\",\n    onClick: () => handleSubmitButtonPressed(),\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, \"Confirm \", /*#__PURE__*/React.createElement(LoadingProgress, {\n    size: \"20px\",\n    isloading: isLoading.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(CancelButton, {\n    onClick: handleCloseSubmitModal,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, \"Cancel\"))), /*#__PURE__*/React.createElement(ToolbarWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestTitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(ActionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, handleChangeLocation && /*#__PURE__*/React.createElement(ActionButton, {\n    variant: \"contained\",\n    color: \"secondary\",\n    style: {\n      marginRight: '15px'\n    },\n    onClick: () => handleChangeLocation(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, \"Back\"), /*#__PURE__*/React.createElement(ActionButton, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleOpenSubmitModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 6\n    }\n  }, \"Save \", /*#__PURE__*/React.createElement(StyledSubmitIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 12\n    }\n  })))));\n}\n\nexport default CreateTestToolbar;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/CreateTestToolbar/index.js"],"names":["React","useState","useEffect","useRef","styled","Button","Dialog","DialogTitle","DialogActions","DialogContent","DialogContentText","CircularProgress","Snackbar","theme","SendIcon","MuiAlert","ConfirmButton","CancelButton","LoadingProgress","props","isloading","ToolbarWrapper","div","ncpPrimaryDark","TestTitleWrapper","ActionWrapper","ActionButton","ncpWhite","StyledSubmitIcon","CreateTestToolbar","title","isLoading","handleSave","error","handleChangeLocation","mountedRef","isSubmitModalOpen","openSubmitModal","snackbar","setSnackbar","isOpen","variant","message","handleCloseSubmitModal","handleOpenSubmitModal","handleSubmitButtonPressed","current","handleCloseSnackbar","handleOpenSnackbar","vertical","horizontal","toString","marginRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport {\n\tButton,\n\tDialog,\n\tDialogTitle,\n\tDialogActions,\n\tDialogContent,\n\tDialogContentText,\n\tCircularProgress,\n\tSnackbar,\n} from '@material-ui/core';\nimport theme from 'app/assets/theme';\nimport SendIcon from '@material-ui/icons/Send';\nimport MuiAlert from '@material-ui/lab/Alert';\nconst ConfirmButton = styled(Button)`\n\tfont-size: 14px !important;\n`;\n\nconst CancelButton = styled(Button)`\n\tfont-size: 14px !important;\n`;\n\nconst LoadingProgress = styled(CircularProgress)`\n\tmargin-left: 10px;\n\t${props => (props.isloading === 'true' ? '' : 'display: none !important;')}\n`;\n\nconst ToolbarWrapper = styled.div`\n\theight: 50px;\n\twidth: 100%;\n\tposition: fixed;\n\tbottom: 0px;\n\tleft: 0px;\n\tright: 0px;\n\tpadding: 0px;\n\tbackground-color: ${theme.ncpPrimaryDark};\n\tcolor: white;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 0px 30px;\n`;\n\nconst TestTitleWrapper = styled.div`\n\tfont-size: 18px;\n\tmargin-right: auto;\n\n\t@media only screen and (max-width: 480px) {\n\t\tdisplay: none;\n\t}\n`;\n\nconst ActionWrapper = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\talign-items: center;\n\twidth: 300px;\n\tmargin-left: auto;\n`;\n\nconst ActionButton = styled(Button)`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 0.375rem 1.6rem;\n\tcolor: ${theme.ncpWhite};\n\tfont-weight: 700;\n\tfont-size: 14px !important;\n`;\n\nconst StyledSubmitIcon = styled(SendIcon)`\n\tmargin-left: 10px;\n`;\n\nfunction CreateTestToolbar(props) {\n\tconst { title = '', isLoading, handleSave, error, handleChangeLocation } = props;\n\tconst mountedRef = useRef(true);\n\tconst [isSubmitModalOpen, openSubmitModal] = useState(false);\n\tconst [snackbar, setSnackbar] = useState({\n\t\tisOpen: false,\n\t\tvariant: 'success',\n\t\tmessage: '',\n\t});\n\n\tconst handleCloseSubmitModal = () => {\n\t\topenSubmitModal(false);\n\t};\n\n\tconst handleOpenSubmitModal = () => {\n\t\topenSubmitModal(true);\n\t};\n\n\tconst handleSubmitButtonPressed = () => {\n\t\thandleSave();\n\t\tif (!isLoading && mountedRef.current) {\n\t\t\thandleCloseSubmitModal();\n\t\t}\n\t};\n\n\tconst handleCloseSnackbar = () => {\n\t\tsetSnackbar({ ...snackbar, isOpen: false });\n\t};\n\n\tconst handleOpenSnackbar = (message = '', variant = '') => {\n\t\tif (!snackbar.isOpen) {\n\t\t\treturn setSnackbar({ isOpen: true, variant, message });\n\t\t}\n\t};\n\n\tif (error) {\n\t\thandleOpenSnackbar(error.message, 'error');\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n\t\t\t\topen={snackbar.isOpen}\n\t\t\t\tautoHideDuration={4000}\n\t\t\t\tonClose={() => handleCloseSnackbar()}\n\t\t\t>\n\t\t\t\t<MuiAlert\n\t\t\t\t\televation={3}\n\t\t\t\t\tvariant=\"filled\"\n\t\t\t\t\tonClose={() => handleCloseSnackbar()}\n\t\t\t\t\tseverity={snackbar.variant}\n\t\t\t\t>\n\t\t\t\t\t{snackbar.message}\n\t\t\t\t</MuiAlert>\n\t\t\t</Snackbar>\n\t\t\t<Dialog\n\t\t\t\topen={isSubmitModalOpen}\n\t\t\t\tonClose={handleCloseSubmitModal}\n\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{'Are you sure ?'}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\tThis action will save the test, modifying everything according to your content.\n\t\t\t\t\t</DialogContentText>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<ConfirmButton\n\t\t\t\t\t\tisloading={isLoading.toString()}\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tonClick={() => handleSubmitButtonPressed()}\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tConfirm <LoadingProgress size=\"20px\" isloading={isLoading.toString()}></LoadingProgress>\n\t\t\t\t\t</ConfirmButton>\n\t\t\t\t\t<CancelButton onClick={handleCloseSubmitModal} color=\"secondary\">\n\t\t\t\t\t\tCancel\n\t\t\t\t\t</CancelButton>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t\t<ToolbarWrapper>\n\t\t\t\t<TestTitleWrapper>{title}</TestTitleWrapper>\n\n\t\t\t\t<ActionWrapper>\n\t\t\t\t\t{handleChangeLocation && (\n\t\t\t\t\t\t<ActionButton\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\tstyle={{ marginRight: '15px' }}\n\t\t\t\t\t\t\tonClick={() => handleChangeLocation()}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t</ActionButton>\n\t\t\t\t\t)}\n\t\t\t\t\t<ActionButton variant=\"contained\" color=\"primary\" onClick={() => handleOpenSubmitModal()}>\n\t\t\t\t\t\tSave <StyledSubmitIcon></StyledSubmitIcon>\n\t\t\t\t\t</ActionButton>\n\t\t\t\t</ActionWrapper>\n\t\t\t</ToolbarWrapper>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default CreateTestToolbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/BlogManagementPage/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport CreateUserModal from 'app/views/components/modals/CreateUserModal';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BlogQueries from 'graphql/queries/Blog';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\nimport { Typography, IconButton, Button, Tooltip } from '@material-ui/core';\nimport { Close, Delete, Done, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport EditUserModal from 'app/views/components/modals/EditUserModal';\nimport ConfirmDeletePostDialog from 'app/views/components/modals/ConfirmDeletePosts';\nimport UserMutations from 'graphql/mutations/User';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\nimport { useHistory } from 'react-router-dom';\nimport BlogsMutation from 'graphql/mutations/Blog';\n\nconst RenderColumns = props => {\n  const {\n    handleEdit,\n    handleOpenDeleteModal\n  } = props;\n  return [{\n    field: 'id',\n    headerName: 'ID',\n    width: 200\n  }, {\n    field: 'title',\n    headerName: 'Title',\n    width: 250\n  }, {\n    field: 'isPublished',\n    headerName: 'Is published',\n    description: 'Whether or not the blog is published and displayed publicly',\n    width: 120,\n    renderCell: params => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }\n    }, params.value ? /*#__PURE__*/React.createElement(Done, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }\n    }) : /*#__PURE__*/React.createElement(Close, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 58\n      }\n    }))\n  }, {\n    field: 'author',\n    headerName: 'Author',\n    width: 100,\n    description: 'Username of the person who created this blog',\n    width: 250,\n    renderCell: params => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }, params.value ? /*#__PURE__*/React.createElement(\"p\", {\n      className: \"m-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, params.value.username) : /*#__PURE__*/React.createElement(Tooltip, {\n      title: \"This user has been removed and is no longer available\",\n      \"aria-label\": \"removed user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }\n    }, \"Removed user\")))\n  }, {\n    field: 'createdAt',\n    headerName: 'Created at',\n    width: 120,\n    valueFormatter: params => moment(params.value).format('DD-MM-YYYY')\n  }, {\n    field: 'updatedAt',\n    headerName: 'Updated at',\n    width: 120,\n    valueFormatter: params => moment(params.value).format('DD-MM-YYYY')\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    description: \"Edit user's information\",\n    width: 130,\n    disableClickEventBubbling: true,\n    renderCell: params => /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleEdit(params.data.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleOpenDeleteModal(params.data.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    })))\n  }];\n};\n\nconst BlogManagementPage = props => {\n  const {\n    intl\n  } = props;\n  const [postSelectedForDelete, setPostSelectedForDelete] = useState([]);\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [data, setData] = useState([]);\n  const [deleteModalOpen, setDeleteModalOpen] = useState(false);\n  const [selectedBlogs, setSelectedBlogs] = useState([]);\n  const history = useHistory(); // GET BLOGS\n\n  const [getBlogs, blogsData] = useLazyQuery(BlogQueries.GET_BLOGS, {\n    fetchPolicy: 'network-only',\n    onCompleted: () => handleGetBlogsSuccess(),\n    onError: err => handleGetBlogsError(err)\n  });\n  useEffect(() => {\n    getBlogs();\n  }, []);\n\n  const handleGetBlogsSuccess = () => {\n    setData(blogsData.data.posts);\n  };\n\n  const handleGetBlogsError = err => {\n    let message = getMessage(err.message);\n    setData([]);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // CREATE\n\n\n  const [createUser, createUserRes] = useMutation(UserMutations.ADMIN_CREATE_USER, {\n    onCompleted: () => handleCreateSuccess(),\n    onError: err => handleCreateFailure(err)\n  });\n\n  const handleCreateSuccess = () => {\n    setIsCreateModalOpen(false);\n    const messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n    history.push('/admin/blogs');\n    props.enqueueSnackbar(intl.formatMessage({\n      id: messageId\n    }), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleCreateFailure = err => {\n    if (!err) {\n      return;\n    }\n\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // UPDATE\n\n\n  const [updateBlog, updateBlogRes] = useMutation(UserMutations.ADMIN_UPDATE_USER, {\n    onCompleted: () => handleUpdateSuccess(),\n    onError: err => handleUpdateFailure(err)\n  });\n\n  const handleUpdateSuccess = () => {\n    getBlogs();\n    setIsEditModalOpen(false);\n    const messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n    props.enqueueSnackbar(intl.formatMessage({\n      id: messageId\n    }), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleUpdateFailure = err => {\n    if (!err) {\n      return;\n    }\n\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  }; // DELETE\n\n\n  const [deletePosts, deletePostsRes] = useMutation(BlogsMutation.DELETE_MANY, {\n    onCompleted: () => handleDeleteSuccess(),\n    onError: err => handleDeleteFailure(err)\n  });\n\n  const handleOpenDeleteModal = id => {\n    if (id) {\n      setPostSelectedForDelete([id]);\n    } else {\n      setPostSelectedForDelete([]);\n    }\n\n    setDeleteModalOpen(true);\n  };\n\n  const handleCloseDeleteModal = () => {\n    setPostSelectedForDelete([]);\n    setDeleteModalOpen(false);\n  };\n\n  const handleDeleteSuccess = () => {\n    handleCloseDeleteModal();\n    getBlogs();\n    props.enqueueSnackbar('Deleted successfully', {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handleDeleteFailure = err => {\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n  };\n\n  const handledeletePosts = () => {\n    let idArray = [];\n\n    if (postSelectedForDelete.length > 0) {\n      return deletePosts({\n        variables: {\n          posts: postSelectedForDelete\n        }\n      });\n    }\n\n    selectedBlogs.forEach(user => idArray.push(user.id));\n    deletePosts({\n      variables: {\n        posts: idArray\n      }\n    });\n  };\n\n  const handleCreateBlog = () => {\n    history.push('/admin/blog/create');\n  };\n\n  const handleCloseCreateModal = () => {\n    setIsCreateModalOpen(false);\n  };\n\n  const handleEdit = id => {\n    history.push(`/admin/blog/edit/${id}`);\n  };\n\n  const handleCloseEditModal = () => {\n    setIsEditModalOpen(false);\n  };\n\n  const {\n    handleCreateUserPromise\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet kt-portlet--height-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: \"kt-portlet__head-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 6\n    }\n  }, \"Blog List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__head-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => handleCreateBlog(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 6\n    }\n  }, \"Add new\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    className: \"ml-2\",\n    onClick: () => getBlogs(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 6\n    }\n  }, \"Refresh\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    variant: \"contained\",\n    disabled: selectedBlogs.length < 1,\n    color: \"default\",\n    onClick: () => handleOpenDeleteModal(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 6\n    }\n  }, \"Delete\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: 600,\n      width: '100%',\n      margin: '50px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(DataGrid, {\n    onSelectionChange: newSelection => {\n      setSelectedBlogs(newSelection.rows);\n    },\n    loading: blogsData.loading,\n    rows: data,\n    columns: RenderColumns({\n      handleEdit,\n      handleOpenDeleteModal\n    }),\n    pageSize: 10,\n    checkboxSelection: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(ConfirmDeletePostDialog, {\n    open: deleteModalOpen,\n    handleClose: handleCloseDeleteModal,\n    handleConfirm: handledeletePosts,\n    loading: deletePostsRes.loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CreateUserModal, {\n    createUserRes: createUserRes,\n    createUser: createUser,\n    open: isCreateModalOpen,\n    onClose: handleCloseCreateModal,\n    handleCreateUserPromise: handleCreateUserPromise,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default injectIntl(withSnackbar(BlogManagementPage));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/BlogManagementPage/index.js"],"names":["React","useEffect","useState","CreateUserModal","DataGrid","BlogQueries","useLazyQuery","useMutation","withSnackbar","Typography","IconButton","Button","Tooltip","Close","Delete","Done","Edit","moment","EditUserModal","ConfirmDeletePostDialog","UserMutations","FormattedMessage","injectIntl","getMessage","useHistory","BlogsMutation","RenderColumns","props","handleEdit","handleOpenDeleteModal","field","headerName","width","description","renderCell","params","value","username","valueFormatter","format","disableClickEventBubbling","data","id","BlogManagementPage","intl","postSelectedForDelete","setPostSelectedForDelete","isCreateModalOpen","setIsCreateModalOpen","isEditModalOpen","setIsEditModalOpen","setData","deleteModalOpen","setDeleteModalOpen","selectedBlogs","setSelectedBlogs","history","getBlogs","blogsData","GET_BLOGS","fetchPolicy","onCompleted","handleGetBlogsSuccess","onError","err","handleGetBlogsError","posts","message","enqueueSnackbar","formatMessage","variant","anchorOrigin","vertical","horizontal","createUser","createUserRes","ADMIN_CREATE_USER","handleCreateSuccess","handleCreateFailure","messageId","push","updateBlog","updateBlogRes","ADMIN_UPDATE_USER","handleUpdateSuccess","handleUpdateFailure","deletePosts","deletePostsRes","DELETE_MANY","handleDeleteSuccess","handleDeleteFailure","handleCloseDeleteModal","handledeletePosts","idArray","length","variables","forEach","user","handleCreateBlog","handleCloseCreateModal","handleCloseEditModal","handleCreateUserPromise","height","margin","newSelection","rows","loading"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport CreateUserModal from 'app/views/components/modals/CreateUserModal';\nimport { DataGrid } from '@material-ui/data-grid';\nimport BlogQueries from 'graphql/queries/Blog';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\nimport { Typography, IconButton, Button, Tooltip } from '@material-ui/core';\nimport { Close, Delete, Done, Edit } from '@material-ui/icons';\nimport moment from 'moment';\nimport EditUserModal from 'app/views/components/modals/EditUserModal';\nimport ConfirmDeletePostDialog from 'app/views/components/modals/ConfirmDeletePosts';\nimport UserMutations from 'graphql/mutations/User';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\nimport { useHistory } from 'react-router-dom';\nimport BlogsMutation from 'graphql/mutations/Blog';\n\nconst RenderColumns = props => {\n\tconst { handleEdit, handleOpenDeleteModal } = props;\n\treturn [\n\t\t{ field: 'id', headerName: 'ID', width: 200 },\n\t\t{ field: 'title', headerName: 'Title', width: 250 },\n\t\t{\n\t\t\tfield: 'isPublished',\n\t\t\theaderName: 'Is published',\n\t\t\tdescription: 'Whether or not the blog is published and displayed publicly',\n\t\t\twidth: 120,\n\t\t\trenderCell: params => (\n\t\t\t\t<div>{params.value ? <Done color=\"primary\"></Done> : <Close color=\"error\"></Close>}</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tfield: 'author',\n\t\t\theaderName: 'Author',\n\t\t\twidth: 100,\n\t\t\tdescription: 'Username of the person who created this blog',\n\t\t\twidth: 250,\n\t\t\trenderCell: params => (\n\t\t\t\t<div>\n\t\t\t\t\t{params.value ? (\n\t\t\t\t\t\t<p className=\"m-0\">{params.value.username}</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Tooltip\n\t\t\t\t\t\t\ttitle=\"This user has been removed and is no longer available\"\n\t\t\t\t\t\t\taria-label=\"removed user\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Typography variant=\"body2\">Removed user</Typography>\n\t\t\t\t\t\t</Tooltip>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t),\n\t\t},\n\t\t{\n\t\t\tfield: 'createdAt',\n\t\t\theaderName: 'Created at',\n\t\t\twidth: 120,\n\t\t\tvalueFormatter: params => moment(params.value).format('DD-MM-YYYY'),\n\t\t},\n\t\t{\n\t\t\tfield: 'updatedAt',\n\t\t\theaderName: 'Updated at',\n\t\t\twidth: 120,\n\t\t\tvalueFormatter: params => moment(params.value).format('DD-MM-YYYY'),\n\t\t},\n\t\t{\n\t\t\tfield: 'actions',\n\t\t\theaderName: 'Actions',\n\t\t\tdescription: \"Edit user's information\",\n\t\t\twidth: 130,\n\t\t\tdisableClickEventBubbling: true,\n\t\t\trenderCell: params => (\n\t\t\t\t<React.Fragment>\n\t\t\t\t\t<IconButton onClick={() => handleEdit(params.data.id)}>\n\t\t\t\t\t\t<Edit></Edit>\n\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t<IconButton onClick={() => handleOpenDeleteModal(params.data.id)}>\n\t\t\t\t\t\t<Delete></Delete>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</React.Fragment>\n\t\t\t),\n\t\t},\n\t];\n};\n\nconst BlogManagementPage = props => {\n\tconst { intl } = props;\n\tconst [postSelectedForDelete, setPostSelectedForDelete] = useState([]);\n\tconst [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n\tconst [isEditModalOpen, setIsEditModalOpen] = useState(false);\n\tconst [data, setData] = useState([]);\n\tconst [deleteModalOpen, setDeleteModalOpen] = useState(false);\n\tconst [selectedBlogs, setSelectedBlogs] = useState([]);\n\tconst history = useHistory();\n\t// GET BLOGS\n\tconst [getBlogs, blogsData] = useLazyQuery(BlogQueries.GET_BLOGS, {\n\t\tfetchPolicy: 'network-only',\n\t\tonCompleted: () => handleGetBlogsSuccess(),\n\t\tonError: err => handleGetBlogsError(err),\n\t});\n\tuseEffect(() => {\n\t\tgetBlogs();\n\t}, []);\n\n\tconst handleGetBlogsSuccess = () => {\n\t\tsetData(blogsData.data.posts);\n\t};\n\n\tconst handleGetBlogsError = err => {\n\t\tlet message = getMessage(err.message);\n\n\t\tsetData([]);\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\t// CREATE\n\tconst [createUser, createUserRes] = useMutation(UserMutations.ADMIN_CREATE_USER, {\n\t\tonCompleted: () => handleCreateSuccess(),\n\t\tonError: err => handleCreateFailure(err),\n\t});\n\n\tconst handleCreateSuccess = () => {\n\t\tsetIsCreateModalOpen(false);\n\t\tconst messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n\t\thistory.push('/admin/blogs');\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: messageId,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handleCreateFailure = err => {\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\t\tlet message = getMessage(err.message);\n\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\t// UPDATE\n\tconst [updateBlog, updateBlogRes] = useMutation(UserMutations.ADMIN_UPDATE_USER, {\n\t\tonCompleted: () => handleUpdateSuccess(),\n\t\tonError: err => handleUpdateFailure(err),\n\t});\n\n\tconst handleUpdateSuccess = () => {\n\t\tgetBlogs();\n\t\tsetIsEditModalOpen(false);\n\t\tconst messageId = 'MANAGE.USERS.EDIT.SUCCESS';\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: messageId,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handleUpdateFailure = err => {\n\t\tif (!err) {\n\t\t\treturn;\n\t\t}\n\t\tlet message = getMessage(err.message);\n\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\t// DELETE\n\tconst [deletePosts, deletePostsRes] = useMutation(BlogsMutation.DELETE_MANY, {\n\t\tonCompleted: () => handleDeleteSuccess(),\n\t\tonError: err => handleDeleteFailure(err),\n\t});\n\n\tconst handleOpenDeleteModal = id => {\n\t\tif (id) {\n\t\t\tsetPostSelectedForDelete([id]);\n\t\t} else {\n\t\t\tsetPostSelectedForDelete([]);\n\t\t}\n\t\tsetDeleteModalOpen(true);\n\t};\n\n\tconst handleCloseDeleteModal = () => {\n\t\tsetPostSelectedForDelete([]);\n\t\tsetDeleteModalOpen(false);\n\t};\n\n\tconst handleDeleteSuccess = () => {\n\t\thandleCloseDeleteModal();\n\t\tgetBlogs();\n\t\tprops.enqueueSnackbar('Deleted successfully', {\n\t\t\tvariant: 'success',\n\t\t\tanchorOrigin: {\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right',\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleDeleteFailure = err => {\n\t\tlet message = getMessage(err.message);\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t};\n\n\tconst handledeletePosts = () => {\n\t\tlet idArray = [];\n\t\tif (postSelectedForDelete.length > 0) {\n\t\t\treturn deletePosts({ variables: { posts: postSelectedForDelete } });\n\t\t}\n\n\t\tselectedBlogs.forEach(user => idArray.push(user.id));\n\t\tdeletePosts({ variables: { posts: idArray } });\n\t};\n\n\tconst handleCreateBlog = () => {\n\t\thistory.push('/admin/blog/create');\n\t};\n\n\tconst handleCloseCreateModal = () => {\n\t\tsetIsCreateModalOpen(false);\n\t};\n\n\tconst handleEdit = id => {\n\t\thistory.push(`/admin/blog/edit/${id}`);\n\t};\n\n\tconst handleCloseEditModal = () => {\n\t\tsetIsEditModalOpen(false);\n\t};\n\n\tconst { handleCreateUserPromise } = props;\n\treturn (\n\t\t<div className=\"kt-portlet kt-portlet--height-fluid\">\n\t\t\t<div className=\"kt-portlet__head\">\n\t\t\t\t<div className=\"kt-portlet__head-label\">\n\t\t\t\t\t<Typography variant=\"h5\" className=\"kt-portlet__head-title\">\n\t\t\t\t\t\tBlog List\n\t\t\t\t\t</Typography>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"kt-portlet__head-toolbar\">\n\t\t\t\t\t<Button variant=\"contained\" color=\"primary\" onClick={() => handleCreateBlog()}>\n\t\t\t\t\t\tAdd new\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button variant=\"contained\" color=\"secondary\" className=\"ml-2\" onClick={() => getBlogs()}>\n\t\t\t\t\t\tRefresh\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName=\"ml-2\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tdisabled={selectedBlogs.length < 1}\n\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\tonClick={() => handleOpenDeleteModal()}\n\t\t\t\t\t>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"kt-portlet__body\">\n\t\t\t\t<div style={{ height: 600, width: '100%', margin: '50px 0px' }}>\n\t\t\t\t\t<DataGrid\n\t\t\t\t\t\tonSelectionChange={newSelection => {\n\t\t\t\t\t\t\tsetSelectedBlogs(newSelection.rows);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tloading={blogsData.loading}\n\t\t\t\t\t\trows={data}\n\t\t\t\t\t\tcolumns={RenderColumns({ handleEdit, handleOpenDeleteModal })}\n\t\t\t\t\t\tpageSize={10}\n\t\t\t\t\t\tcheckboxSelection\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<ConfirmDeletePostDialog\n\t\t\t\t\topen={deleteModalOpen}\n\t\t\t\t\thandleClose={handleCloseDeleteModal}\n\t\t\t\t\thandleConfirm={handledeletePosts}\n\t\t\t\t\tloading={deletePostsRes.loading}\n\t\t\t\t></ConfirmDeletePostDialog>\n\t\t\t\t<CreateUserModal\n\t\t\t\t\tcreateUserRes={createUserRes}\n\t\t\t\t\tcreateUser={createUser}\n\t\t\t\t\topen={isCreateModalOpen}\n\t\t\t\t\tonClose={handleCloseCreateModal}\n\t\t\t\t\thandleCreateUserPromise={handleCreateUserPromise}\n\t\t\t\t\taria-labelledby=\"simple-modal-title\"\n\t\t\t\t\taria-describedby=\"simple-modal-description\"\n\t\t\t\t></CreateUserModal>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default injectIntl(withSnackbar(BlogManagementPage));\n"]},"metadata":{},"sourceType":"module"}
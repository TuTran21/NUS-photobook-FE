{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/MarkdownEditor/index.js\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite'; // import style manually\n\nimport 'react-markdown-editor-lite/lib/index.css'; // Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n// Initialize a markdown parser\n\nconst mdParser = new MarkdownIt(); // Finish!\n\nconst handleImageUpload = file => {\n  return new Promise(resolve => {\n    const reader = new FileReader();\n\n    reader.onload = data => {\n      // @ts-ignore\n      resolve(data.target.result);\n    };\n\n    reader.readAsDataURL(file);\n  });\n};\n\nconst MarkdownEditor = props => {\n  const {\n    handleChange,\n    value\n  } = props;\n\n  const handleEditorChange = ({\n    html,\n    text\n  }) => {\n    if (handleChange) {\n      handleChange(html, text);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(MdEditor, {\n    value: value,\n    style: {\n      height: '500px'\n    },\n    renderHTML: text => mdParser.render(text),\n    onImageUpload: handleImageUpload,\n    onChange: handleEditorChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  });\n};\n\nexport default MarkdownEditor;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/MarkdownEditor/index.js"],"names":["React","ReactDOM","MarkdownIt","MdEditor","mdParser","handleImageUpload","file","Promise","resolve","reader","FileReader","onload","data","target","result","readAsDataURL","MarkdownEditor","props","handleChange","value","handleEditorChange","html","text","height","render"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CACA;;AACA,OAAO,0CAAP,C,CAEA;AACA;AAEA;;AACA,MAAMC,QAAQ,GAAG,IAAIF,UAAJ,EAAjB,C,CAEA;;AAEA,MAAMG,iBAAiB,GAAGC,IAAI,IAAI;AACjC,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC7B,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgBC,IAAI,IAAI;AACvB;AACAJ,MAAAA,OAAO,CAACI,IAAI,CAACC,MAAL,CAAYC,MAAb,CAAP;AACA,KAHD;;AAIAL,IAAAA,MAAM,CAACM,aAAP,CAAqBT,IAArB;AACA,GAPM,CAAP;AAQA,CATD;;AAWA,MAAMU,cAAc,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA0BF,KAAhC;;AAEA,QAAMG,kBAAkB,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KAAoB;AAC9C,QAAIJ,YAAJ,EAAkB;AACjBA,MAAAA,YAAY,CAACG,IAAD,EAAOC,IAAP,CAAZ;AACA;AACD,GAJD;;AAMA,sBACC,oBAAC,QAAD;AACC,IAAA,KAAK,EAAEH,KADR;AAEC,IAAA,KAAK,EAAE;AAAEI,MAAAA,MAAM,EAAE;AAAV,KAFR;AAGC,IAAA,UAAU,EAAED,IAAI,IAAIlB,QAAQ,CAACoB,MAAT,CAAgBF,IAAhB,CAHrB;AAIC,IAAA,aAAa,EAAEjB,iBAJhB;AAKC,IAAA,QAAQ,EAAEe,kBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD;AASA,CAlBD;;AAoBA,eAAeJ,cAAf","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\n\n// Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n\n// Initialize a markdown parser\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n// Finish!\n\nconst handleImageUpload = file => {\n\treturn new Promise(resolve => {\n\t\tconst reader = new FileReader();\n\t\treader.onload = data => {\n\t\t\t// @ts-ignore\n\t\t\tresolve(data.target.result);\n\t\t};\n\t\treader.readAsDataURL(file);\n\t});\n};\n\nconst MarkdownEditor = props => {\n\tconst { handleChange, value } = props;\n\n\tconst handleEditorChange = ({ html, text }) => {\n\t\tif (handleChange) {\n\t\t\thandleChange(html, text);\n\t\t}\n\t};\n\n\treturn (\n\t\t<MdEditor\n\t\t\tvalue={value}\n\t\t\tstyle={{ height: '500px' }}\n\t\t\trenderHTML={text => mdParser.render(text)}\n\t\t\tonImageUpload={handleImageUpload}\n\t\t\tonChange={handleEditorChange}\n\t\t/>\n\t);\n};\n\nexport default MarkdownEditor;\n"]},"metadata":{},"sourceType":"module"}
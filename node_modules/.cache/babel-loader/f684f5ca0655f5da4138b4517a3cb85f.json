{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/middleware/ApplyDashboardMenu.js\";\nimport React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\nimport injectReducer from 'utils/injectReducer';\nimport { createStructuredSelector } from 'reselect';\nimport { makeSelectAuthReducer } from 'state/ducks/auth/selectors';\nimport { metronic } from 'app/themes/_metronic';\nimport dashboardMenuConfig from 'app/views/pages/Dashboard/DashboardMenuConfig';\nexport default function (ComposedComponent) {\n  class ApplyDashboardMenu extends Component {\n    componentDidMount() {\n      this.props.dispatch(metronic.builder.actions.setMenuConfig(dashboardMenuConfig));\n    }\n\n    render() {\n      return /*#__PURE__*/React.createElement(ComposedComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      });\n    }\n\n  } // Authentication.propTypes = { authenticated: PropTypes.bool };\n\n\n  const mapStateToProps = state => {\n    return {};\n  };\n\n  const mapDispatchToProps = dispatch => {\n    return {\n      dispatch\n    };\n  };\n\n  const withConnect = connect(mapStateToProps, mapDispatchToProps); // const withReducer = injectReducer({ key: 'authReducer', reducer });\n\n  return compose(withConnect)(ApplyDashboardMenu);\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/middleware/ApplyDashboardMenu.js"],"names":["React","Component","PropTypes","connect","Redirect","compose","injectReducer","createStructuredSelector","makeSelectAuthReducer","metronic","dashboardMenuConfig","ComposedComponent","ApplyDashboardMenu","componentDidMount","props","dispatch","builder","actions","setMenuConfig","render","mapStateToProps","state","mapDispatchToProps","withConnect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AAEA,eAAe,UAASC,iBAAT,EAA4B;AAC1C,QAAMC,kBAAN,SAAiCX,SAAjC,CAA2C;AAC1CY,IAAAA,iBAAiB,GAAG;AACnB,WAAKC,KAAL,CAAWC,QAAX,CAAoBN,QAAQ,CAACO,OAAT,CAAiBC,OAAjB,CAAyBC,aAAzB,CAAuCR,mBAAvC,CAApB;AACA;;AACDS,IAAAA,MAAM,GAAG;AACR,0BAAO,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACA;;AANyC,GADD,CAU1C;;;AACA,QAAMC,eAAe,GAAGC,KAAK,IAAI;AAChC,WAAO,EAAP;AACA,GAFD;;AAGA,QAAMC,kBAAkB,GAAGP,QAAQ,IAAI;AACtC,WAAO;AACNA,MAAAA;AADM,KAAP;AAGA,GAJD;;AAMA,QAAMQ,WAAW,GAAGpB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAA3B,CApB0C,CAsB1C;;AAEA,SAAOjB,OAAO,CAACkB,WAAD,CAAP,CAAqBX,kBAArB,CAAP;AACA","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { compose } from 'redux';\n\nimport injectReducer from 'utils/injectReducer';\nimport { createStructuredSelector } from 'reselect';\nimport { makeSelectAuthReducer } from 'state/ducks/auth/selectors';\nimport { metronic } from 'app/themes/_metronic';\nimport dashboardMenuConfig from 'app/views/pages/Dashboard/DashboardMenuConfig';\n\nexport default function(ComposedComponent) {\n\tclass ApplyDashboardMenu extends Component {\n\t\tcomponentDidMount() {\n\t\t\tthis.props.dispatch(metronic.builder.actions.setMenuConfig(dashboardMenuConfig));\n\t\t}\n\t\trender() {\n\t\t\treturn <ComposedComponent />;\n\t\t}\n\t}\n\n\t// Authentication.propTypes = { authenticated: PropTypes.bool };\n\tconst mapStateToProps = state => {\n\t\treturn {};\n\t};\n\tconst mapDispatchToProps = dispatch => {\n\t\treturn {\n\t\t\tdispatch,\n\t\t};\n\t};\n\n\tconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\n\t// const withReducer = injectReducer({ key: 'authReducer', reducer });\n\n\treturn compose(withConnect)(ApplyDashboardMenu);\n}\n"]},"metadata":{},"sourceType":"module"}
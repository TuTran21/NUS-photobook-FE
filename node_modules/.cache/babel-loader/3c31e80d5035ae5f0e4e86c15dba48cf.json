{"ast":null,"code":"const matchHeading = {\n  instruction: 'Which paragraph contains each of the following pieces of information?',\n  questionType: 'matchHeading',\n  options: [],\n  questions: [{\n    content: 'Hover this field to edit this question content',\n    multipleChoices: [],\n    key: ''\n  }]\n};\nconst trueFalseNotgiven = {\n  instruction: 'Do the following statements agree with the information given in Reading Passage',\n  questionType: 'TFN',\n  options: ['TRUE', 'FALSE', 'NOT GIVEN'],\n  questions: [{\n    content: 'Hover this field to edit this question content',\n    multipleChoices: [],\n    key: ''\n  }]\n};\nconst fillInGap = {\n  instruction: 'WORD LIMIT',\n  questionType: 'fillInGap',\n  options: [],\n  questions: [{\n    content: 'Hover to edit [BLANK] Hover to edit',\n    multipleChoices: [],\n    key: ''\n  }]\n};\nconst listSelection = {\n  instruction: 'According to the text, FIVE of the following statements are true. Mark on the corresponding letters in answer boxes in any order',\n  questionType: 'listSelection',\n  options: [],\n  questions: [{\n    content: 'Hover this field to edit',\n    multipleChoices: [],\n    key: ''\n  }]\n};\nconst multipleChoice = {\n  instruction: 'According to the information given in the text, choose the correct answer or answers from the choices given.',\n  questionType: 'multipleChoice',\n  options: [],\n  questions: [{\n    content: 'Hover to edit content.',\n    multipleChoices: ['Option A', 'Option B', 'Option C'],\n    key: ''\n  }]\n};\n\nconst getQuestionTypeInitialData = type => {\n  switch (type) {\n    case 'matchHeading':\n      return matchHeading;\n\n    case 'TFN':\n      return trueFalseNotgiven;\n\n    case 'fillInGap':\n      return fillInGap;\n\n    case 'listSelection':\n      return listSelection;\n\n    case 'multipleChoice':\n      return multipleChoice;\n  }\n};\n\nexport default getQuestionTypeInitialData;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/getQuestionTypeInitialData.js"],"names":["matchHeading","instruction","questionType","options","questions","content","multipleChoices","key","trueFalseNotgiven","fillInGap","listSelection","multipleChoice","getQuestionTypeInitialData","type"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,WAAW,EAAE,uEADO;AAEpBC,EAAAA,YAAY,EAAE,cAFM;AAGpBC,EAAAA,OAAO,EAAE,EAHW;AAIpBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,OAAO,EAAE,gDADV;AAECC,IAAAA,eAAe,EAAE,EAFlB;AAGCC,IAAAA,GAAG,EAAE;AAHN,GADU;AAJS,CAArB;AAaA,MAAMC,iBAAiB,GAAG;AACzBP,EAAAA,WAAW,EAAE,iFADY;AAEzBC,EAAAA,YAAY,EAAE,KAFW;AAGzBC,EAAAA,OAAO,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,WAAlB,CAHgB;AAIzBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,OAAO,EAAE,gDADV;AAECC,IAAAA,eAAe,EAAE,EAFlB;AAGCC,IAAAA,GAAG,EAAE;AAHN,GADU;AAJc,CAA1B;AAaA,MAAME,SAAS,GAAG;AACjBR,EAAAA,WAAW,EAAE,YADI;AAEjBC,EAAAA,YAAY,EAAE,WAFG;AAGjBC,EAAAA,OAAO,EAAE,EAHQ;AAIjBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,OAAO,EAAE,qCADV;AAECC,IAAAA,eAAe,EAAE,EAFlB;AAGCC,IAAAA,GAAG,EAAE;AAHN,GADU;AAJM,CAAlB;AAaA,MAAMG,aAAa,GAAG;AACrBT,EAAAA,WAAW,EACV,kIAFoB;AAGrBC,EAAAA,YAAY,EAAE,eAHO;AAIrBC,EAAAA,OAAO,EAAE,EAJY;AAKrBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,OAAO,EAAE,0BADV;AAECC,IAAAA,eAAe,EAAE,EAFlB;AAGCC,IAAAA,GAAG,EAAE;AAHN,GADU;AALU,CAAtB;AAcA,MAAMI,cAAc,GAAG;AACtBV,EAAAA,WAAW,EACV,8GAFqB;AAGtBC,EAAAA,YAAY,EAAE,gBAHQ;AAItBC,EAAAA,OAAO,EAAE,EAJa;AAKtBC,EAAAA,SAAS,EAAE,CACV;AACCC,IAAAA,OAAO,EAAE,wBADV;AAECC,IAAAA,eAAe,EAAE,CAAC,UAAD,EAAa,UAAb,EAAyB,UAAzB,CAFlB;AAGCC,IAAAA,GAAG,EAAE;AAHN,GADU;AALW,CAAvB;;AAcA,MAAMK,0BAA0B,GAAGC,IAAI,IAAI;AAC1C,UAAQA,IAAR;AACC,SAAK,cAAL;AACC,aAAOb,YAAP;;AACD,SAAK,KAAL;AACC,aAAOQ,iBAAP;;AACD,SAAK,WAAL;AACC,aAAOC,SAAP;;AACD,SAAK,eAAL;AACC,aAAOC,aAAP;;AACD,SAAK,gBAAL;AACC,aAAOC,cAAP;AAVF;AAYA,CAbD;;AAcA,eAAeC,0BAAf","sourcesContent":["const matchHeading = {\n\tinstruction: 'Which paragraph contains each of the following pieces of information?',\n\tquestionType: 'matchHeading',\n\toptions: [],\n\tquestions: [\n\t\t{\n\t\t\tcontent: 'Hover this field to edit this question content',\n\t\t\tmultipleChoices: [],\n\t\t\tkey: '',\n\t\t},\n\t],\n};\n\nconst trueFalseNotgiven = {\n\tinstruction: 'Do the following statements agree with the information given in Reading Passage',\n\tquestionType: 'TFN',\n\toptions: ['TRUE', 'FALSE', 'NOT GIVEN'],\n\tquestions: [\n\t\t{\n\t\t\tcontent: 'Hover this field to edit this question content',\n\t\t\tmultipleChoices: [],\n\t\t\tkey: '',\n\t\t},\n\t],\n};\n\nconst fillInGap = {\n\tinstruction: 'WORD LIMIT',\n\tquestionType: 'fillInGap',\n\toptions: [],\n\tquestions: [\n\t\t{\n\t\t\tcontent: 'Hover to edit [BLANK] Hover to edit',\n\t\t\tmultipleChoices: [],\n\t\t\tkey: '',\n\t\t},\n\t],\n};\n\nconst listSelection = {\n\tinstruction:\n\t\t'According to the text, FIVE of the following statements are true. Mark on the corresponding letters in answer boxes in any order',\n\tquestionType: 'listSelection',\n\toptions: [],\n\tquestions: [\n\t\t{\n\t\t\tcontent: 'Hover this field to edit',\n\t\t\tmultipleChoices: [],\n\t\t\tkey: '',\n\t\t},\n\t],\n};\n\nconst multipleChoice = {\n\tinstruction:\n\t\t'According to the information given in the text, choose the correct answer or answers from the choices given.',\n\tquestionType: 'multipleChoice',\n\toptions: [],\n\tquestions: [\n\t\t{\n\t\t\tcontent: 'Hover to edit content.',\n\t\t\tmultipleChoices: ['Option A', 'Option B', 'Option C'],\n\t\t\tkey: '',\n\t\t},\n\t],\n};\n\nconst getQuestionTypeInitialData = type => {\n\tswitch (type) {\n\t\tcase 'matchHeading':\n\t\t\treturn matchHeading;\n\t\tcase 'TFN':\n\t\t\treturn trueFalseNotgiven;\n\t\tcase 'fillInGap':\n\t\t\treturn fillInGap;\n\t\tcase 'listSelection':\n\t\t\treturn listSelection;\n\t\tcase 'multipleChoice':\n\t\t\treturn multipleChoice;\n\t}\n};\nexport default getQuestionTypeInitialData;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/components/ProfileInfoColumn/index.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport AvatarUploadAndEdit from 'app/views/pages/UserProfile/components/AvatarUploadAndEdit';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nconst UserStatistic = React.lazy(() => import('app/views/components/UserProfile/UserStatistic'));\nconst AvatarBlock = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px 0px;\n`;\n\nfunction InfoColumn(props) {\n  const {\n    user,\n    overallScoreRes,\n    isOwner,\n    refetchProfile\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(AvatarUploadAndEdit, {\n    refetchProfile: refetchProfile,\n    isOwner: isOwner,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(UserStatistic, {\n    loading: overallScoreRes.loading,\n    error: overallScoreRes.error,\n    data: overallScoreRes.data,\n    refetch: overallScoreRes.refetch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default InfoColumn;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/components/ProfileInfoColumn/index.js"],"names":["React","styled","AvatarUploadAndEdit","LoadingIndicator","UserStatistic","lazy","AvatarBlock","div","InfoColumn","props","user","overallScoreRes","isOwner","refetchProfile","loading","error","data","refetch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,4DAAhC;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AAEA,MAAMC,aAAa,GAAGJ,KAAK,CAACK,IAAN,CAAW,MAAM,OAAO,gDAAP,CAAjB,CAAtB;AAEA,MAAMC,WAAW,GAAGL,MAAM,CAACM,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAC1B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,eAAR;AAAyBC,IAAAA,OAAzB;AAAkCC,IAAAA;AAAlC,MAAqDJ,KAA3D;AACA,sBACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,mBAAD;AAAqB,IAAA,cAAc,EAAEI,cAArC;AAAqD,IAAA,OAAO,EAAED,OAA9D;AAAuE,IAAA,IAAI,EAAEF,IAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,aAAD;AACC,IAAA,OAAO,EAAEC,eAAe,CAACG,OAD1B;AAEC,IAAA,KAAK,EAAEH,eAAe,CAACI,KAFxB;AAGC,IAAA,IAAI,EAAEJ,eAAe,CAACK,IAHvB;AAIC,IAAA,OAAO,EAAEL,eAAe,CAACM,OAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,CADD;AAaA;;AAED,eAAeT,UAAf","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport AvatarUploadAndEdit from 'app/views/pages/UserProfile/components/AvatarUploadAndEdit';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nconst UserStatistic = React.lazy(() => import('app/views/components/UserProfile/UserStatistic'));\n\nconst AvatarBlock = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 20px 0px;\n`;\n\nfunction InfoColumn(props) {\n\tconst { user, overallScoreRes, isOwner, refetchProfile } = props;\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<AvatarUploadAndEdit refetchProfile={refetchProfile} isOwner={isOwner} user={user}></AvatarUploadAndEdit>\n\t\t\t<React.Suspense fallback={<LoadingIndicator />}>\n\t\t\t\t<UserStatistic\n\t\t\t\t\tloading={overallScoreRes.loading}\n\t\t\t\t\terror={overallScoreRes.error}\n\t\t\t\t\tdata={overallScoreRes.data}\n\t\t\t\t\trefetch={overallScoreRes.refetch}\n\t\t\t\t></UserStatistic>\n\t\t\t</React.Suspense>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default InfoColumn;\n"]},"metadata":{},"sourceType":"module"}
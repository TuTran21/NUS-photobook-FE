{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/router/index.js\";\n\n/**\n * High level router.\n *\n * Note: It's recommended to compose related routes in internal router\n * components (e.g: `src/pages/auth/AuthPage`, `src/pages/home/HomePage`).\n */\nimport React, { useEffect } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { shallowEqual, useSelector, connect } from 'react-redux';\nimport authActions from 'state/ducks/auth/actions';\nimport AuthQueries from 'graphql/queries/Auth';\nimport routesConfig from 'app/views/router/config';\nimport { useLazyQuery } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\nconst Router = withRouter(({\n  Layout,\n  history,\n  loginSuccess,\n  loginFailed,\n  enqueueSnackbar,\n  intl\n}) => {\n  // mapStateToProps\n  const [verifyToken, authRes] = useLazyQuery(AuthQueries.VERIFY_ACCESS_TOKEN, {\n    onCompleted: () => {\n      if (authRes.data) {\n        return loginSuccess(authRes.data.verifyAccessToken);\n      }\n    },\n    onError: () => {\n      return loginFailed();\n    }\n  }); // Verify token and login if valid\n\n  useEffect(() => {\n    verifyToken();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // Pages that have hasLayout set to true will be wrapped with headers, body and footer of configured layout\n    React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 4\n      }\n    }, routesConfig.map((route, idx) => {\n      return route.component ? /*#__PURE__*/React.createElement(Route, {\n        key: idx,\n        path: route.path,\n        exact: route.exact,\n        name: route.name,\n        render: props => /*#__PURE__*/React.createElement(Layout, {\n          hasLayout: route.hasLayout,\n          hasFooter: route.hasFooter,\n          hasHeader: route.hasHeader,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(route.component, Object.assign({}, route.extraProps, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 10\n          }\n        }))),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }) : /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/404\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }\n    }))\n  );\n});\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  const loginSuccess = payload => dispatch(authActions.loginSuccess(payload));\n\n  const loginFailed = () => dispatch(authActions.loginFailed());\n\n  return {\n    dispatch,\n    loginSuccess,\n    loginFailed\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Router));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/router/index.js"],"names":["React","useEffect","Route","Switch","withRouter","Redirect","shallowEqual","useSelector","connect","authActions","AuthQueries","routesConfig","useLazyQuery","withSnackbar","Router","Layout","history","loginSuccess","loginFailed","enqueueSnackbar","intl","verifyToken","authRes","VERIFY_ACCESS_TOKEN","onCompleted","data","verifyAccessToken","onError","map","route","idx","component","path","exact","name","props","hasLayout","hasFooter","hasHeader","extraProps","mapStateToProps","state","auth","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["/**\n * High level router.\n *\n * Note: It's recommended to compose related routes in internal router\n * components (e.g: `src/pages/auth/AuthPage`, `src/pages/home/HomePage`).\n */\n\nimport React, { useEffect } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport { shallowEqual, useSelector, connect } from 'react-redux';\nimport authActions from 'state/ducks/auth/actions';\nimport AuthQueries from 'graphql/queries/Auth';\n\nimport routesConfig from 'app/views/router/config';\nimport { useLazyQuery } from '@apollo/client';\nimport { withSnackbar } from 'notistack';\n\nconst Router = withRouter(({ Layout, history, loginSuccess, loginFailed, enqueueSnackbar, intl }) => {\n\t// mapStateToProps\n\tconst [verifyToken, authRes] = useLazyQuery(AuthQueries.VERIFY_ACCESS_TOKEN, {\n\t\tonCompleted: () => {\n\t\t\tif (authRes.data) {\n\t\t\t\treturn loginSuccess(authRes.data.verifyAccessToken);\n\t\t\t}\n\t\t},\n\t\tonError: () => {\n\t\t\treturn loginFailed();\n\t\t},\n\t});\n\t// Verify token and login if valid\n\tuseEffect(() => {\n\t\tverifyToken();\n\t}, []);\n\treturn (\n\t\t// Pages that have hasLayout set to true will be wrapped with headers, body and footer of configured layout\n\t\t\t<Switch>\n\t\t\t\t{routesConfig.map((route, idx) => {\n\t\t\t\t\treturn route.component ? (\n\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\tname={route.name}\n\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t<Layout\n\t\t\t\t\t\t\t\t\thasLayout={route.hasLayout}\n\t\t\t\t\t\t\t\t\thasFooter={route.hasFooter}\n\t\t\t\t\t\t\t\t\thasHeader={route.hasHeader}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<route.component {...route.extraProps} {...props} />\n\t\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Redirect to=\"/500\" />\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<Redirect to=\"/404\" />\n\t\t\t</Switch>\n\t);\n});\n\nfunction mapStateToProps(state) {\n\treturn {\n\t\tauth: state.auth,\n\t};\n}\n\nfunction mapDispatchToProps(dispatch) {\n\tconst loginSuccess = payload => dispatch(authActions.loginSuccess(payload));\n\tconst loginFailed = () => dispatch(authActions.loginFailed());\n\n\treturn {\n\t\tdispatch,\n\t\tloginSuccess,\n\t\tloginFailed,\n\t};\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withSnackbar(Router));\n"]},"metadata":{},"sourceType":"module"}
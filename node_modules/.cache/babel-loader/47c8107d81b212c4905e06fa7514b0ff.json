{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/CreateTestMain/index.js\";\nimport React, { useState, useEffect, memo } from 'react';\nimport { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport CreateTestToolbar from 'app/views/pages/AdminCreateTest/components/CreateTestToolbar';\nimport theme from 'app/assets/theme';\nimport { Grid } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport TestEditor from '../TestEditor';\nimport TestDetailsCardRender from '../TestsDetailsCardRender';\nimport { useMutation } from '@apollo/client';\nimport TestMutation from 'graphql/mutations/Test';\nconst TestListItem = React.lazy(() => import('app/views/components/Test/TestListItem'));\nconst Wrapper = styled(Grid)`\n\tmargin-top: 60px;\n\t@media only screen and (min-width: 1025px) {\n\t\tmargin-top: 0px;\n\t}\n\toverflow: hidden;\n`;\nconst TestInfoWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tbackground-color: ${theme.ncpPrimaryBackground};\n\tpadding: 50px;\n\tcolor: ${theme.ncpTextColor};\n\toverflow-y: auto;\n\theight: calc(50vh - 55px);\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n`; // QUESTION PART\n\nconst TestEditorWrapper = styled.div`\n\tposition: relative;\n\theight: calc(50vh - 55px);\n\tbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n\t\t0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n\toverflow-y: auto;\n\tpadding: 40px;\n\tpadding-bottom: 80px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n\tcolor: ${theme.ncpTextColor};\n`;\nconst SectionTitleEditor = styled(Typography)`\n\tmargin: 20px 0px !important;\n`;\nconst SectionTitleTestDetails = styled(Typography)`\n\tmargin: 10px 0px 20px 0px !important;\n`;\nconst StyledCol = styled(Grid)`\n\t// padding: 0px;\n`;\n\nconst AdminCreateTestMain = props => {\n  const {\n    currentTestData,\n    modifyTestData,\n    handleChangeLocation\n  } = props;\n  const [createTest, createTestRes] = useMutation(TestMutation.CREATE_TEST, {\n    variables: {\n      test: { ...currentTestData,\n        rating: undefined,\n        testsTaken: undefined\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestInfoWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitleTestDetails, {\n    variant: \"h5\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, \"Test Details Preview\"), /*#__PURE__*/React.createElement(TestListItem, {\n    noMargin: true,\n    viewOnly: true,\n    test: currentTestData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TestDetailsCardRender, {\n    currentTestData: currentTestData,\n    handleChangeLocation: handleChangeLocation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestEditorWrapper, {\n    className: \"card card-custom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitleEditor, {\n    variant: \"h5\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 6\n    }\n  }, \"Test Details Editor\"), /*#__PURE__*/React.createElement(TestEditor, {\n    modifyTestData: modifyTestData,\n    test: currentTestData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(CreateTestToolbar, {\n    isLoading: createTestRes.loading,\n    error: createTestRes.error,\n    handleSave: createTest,\n    title: currentTestData.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default memo(AdminCreateTestMain);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/CreateTestMain/index.js"],"names":["React","useState","useEffect","memo","Typography","styled","_","CreateTestToolbar","theme","Grid","LoadingIndicator","TestEditor","TestDetailsCardRender","useMutation","TestMutation","TestListItem","lazy","Wrapper","TestInfoWrapper","div","ncpPrimaryBackground","ncpTextColor","TestEditorWrapper","SectionTitleEditor","SectionTitleTestDetails","StyledCol","AdminCreateTestMain","props","currentTestData","modifyTestData","handleChangeLocation","createTest","createTestRes","CREATE_TEST","variables","test","rating","undefined","testsTaken","loading","error","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport { Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport _ from 'lodash';\nimport CreateTestToolbar from 'app/views/pages/AdminCreateTest/components/CreateTestToolbar';\nimport theme from 'app/assets/theme';\nimport { Grid } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport TestEditor from '../TestEditor';\nimport TestDetailsCardRender from '../TestsDetailsCardRender';\nimport { useMutation } from '@apollo/client';\nimport TestMutation from 'graphql/mutations/Test';\n\nconst TestListItem = React.lazy(() => import('app/views/components/Test/TestListItem'));\n\nconst Wrapper = styled(Grid)`\n\tmargin-top: 60px;\n\t@media only screen and (min-width: 1025px) {\n\t\tmargin-top: 0px;\n\t}\n\toverflow: hidden;\n`;\n\nconst TestInfoWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tposition: relative;\n\tbackground-color: ${theme.ncpPrimaryBackground};\n\tpadding: 50px;\n\tcolor: ${theme.ncpTextColor};\n\toverflow-y: auto;\n\theight: calc(50vh - 55px);\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n`;\n\n// QUESTION PART\n\nconst TestEditorWrapper = styled.div`\n\tposition: relative;\n\theight: calc(50vh - 55px);\n\tbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n\t\t0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n\toverflow-y: auto;\n\tpadding: 40px;\n\tpadding-bottom: 80px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n\tcolor: ${theme.ncpTextColor};\n`;\n\nconst SectionTitleEditor = styled(Typography)`\n\tmargin: 20px 0px !important;\n`;\n\nconst SectionTitleTestDetails = styled(Typography)`\n\tmargin: 10px 0px 20px 0px !important;\n`;\n\nconst StyledCol = styled(Grid)`\n\t// padding: 0px;\n`;\n\nconst AdminCreateTestMain = props => {\n\tconst { currentTestData, modifyTestData, handleChangeLocation } = props;\n\tconst [createTest, createTestRes] = useMutation(TestMutation.CREATE_TEST, {\n\t\tvariables: { test: { ...currentTestData, rating: undefined, testsTaken: undefined } },\n\t});\n\n\treturn (\n\t\t<Wrapper container spacing={0}>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<TestInfoWrapper>\n\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator />}>\n\t\t\t\t\t\t<SectionTitleTestDetails variant=\"h5\" component=\"p\">\n\t\t\t\t\t\t\tTest Details Preview\n\t\t\t\t\t\t</SectionTitleTestDetails>\n\t\t\t\t\t\t<TestListItem noMargin={true} viewOnly={true} test={currentTestData}></TestListItem>\n\t\t\t\t\t\t<TestDetailsCardRender\n\t\t\t\t\t\t\tcurrentTestData={currentTestData}\n\t\t\t\t\t\t\thandleChangeLocation={handleChangeLocation}\n\t\t\t\t\t\t></TestDetailsCardRender>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</TestInfoWrapper>\n\t\t\t</StyledCol>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<TestEditorWrapper className=\"card card-custom\">\n\t\t\t\t\t<SectionTitleEditor variant=\"h5\" component=\"p\">\n\t\t\t\t\t\tTest Details Editor\n\t\t\t\t\t</SectionTitleEditor>\n\t\t\t\t\t<TestEditor modifyTestData={modifyTestData} test={currentTestData}></TestEditor>\n\t\t\t\t</TestEditorWrapper>\n\t\t\t</StyledCol>\n\t\t\t<CreateTestToolbar\n\t\t\t\tisLoading={createTestRes.loading}\n\t\t\t\terror={createTestRes.error}\n\t\t\t\thandleSave={createTest}\n\t\t\t\ttitle={currentTestData.title}\n\t\t\t></CreateTestToolbar>\n\t\t</Wrapper>\n\t);\n};\n\nexport default memo(AdminCreateTestMain);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Blog/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport BlogQueries from 'graphql/queries/Blog';\nimport { useHistory } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport { injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\nimport ReactMarkdown from 'react-markdown';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Grid, Typography } from '@material-ui/core';\nimport BlogList from './BlogList';\nimport { Visibility, Event } from '@material-ui/icons';\nimport moment from 'moment';\nconst Rightside = styled(Grid)``;\n\nfunction Blog(props) {\n  const [data, setData] = useState({\n    title: '',\n    isPublished: false,\n    content: {\n      html: '',\n      text: ''\n    },\n    author: {\n      username: ''\n    }\n  });\n  const {\n    intl\n  } = props;\n  const history = useHistory();\n  const params = useParams();\n  const [getBlog, blogData] = useLazyQuery(BlogQueries.GET_BLOG, {\n    fetchPolicy: 'network-only',\n    onCompleted: res => handleGetBlogsSuccess(res),\n    onError: err => handleGetBlogsError(err)\n  });\n  useEffect(() => {\n    getBlog({\n      variables: {\n        id: params.id\n      }\n    });\n  }, [params.id]);\n\n  const handleGetBlogsSuccess = res => {\n    setData(res.post);\n  };\n\n  const handleGetBlogsError = err => {\n    let message = getMessage(err.message);\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n    history.goBack();\n  };\n\n  const handleRouteAuthor = id => {\n    history.push(`/user/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    justify: \"space-evenly\",\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet kt-portlet--height-fluid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-portlet__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: \"kt-portlet__head-title font-weight-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }\n  }, data.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: \"kt-portlet__head-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    className: \"kt-widget4__username\",\n    onClick: () => handleRouteAuthor(data.author.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), data.author.username && `By ${data.author.username}`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info d-flex align-items-center mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"views\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Visibility, {\n    className: \"mr-1\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), \" \", data.views ? data.views : 0), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"createdAt\",\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Event, {\n    className: \"mr-1\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }), moment(data.createdAt).format('DD-MMM-YYYY'), ' ')), data.image && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-center align-items-center w-80 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    style: {\n      width: '90%'\n    },\n    src: data.image,\n    alt: \"Blog image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ReactMarkdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, data.content.text)))), /*#__PURE__*/React.createElement(Rightside, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BlogList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default injectIntl(withSnackbar(Blog));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Blog/index.js"],"names":["React","useState","useEffect","useLazyQuery","BlogQueries","useHistory","withSnackbar","injectIntl","getMessage","ReactMarkdown","useParams","styled","Grid","Typography","BlogList","Visibility","Event","moment","Rightside","Blog","props","data","setData","title","isPublished","content","html","text","author","username","intl","history","params","getBlog","blogData","GET_BLOG","fetchPolicy","onCompleted","res","handleGetBlogsSuccess","onError","err","handleGetBlogsError","variables","id","post","message","enqueueSnackbar","formatMessage","variant","anchorOrigin","vertical","horizontal","goBack","handleRouteAuthor","push","views","createdAt","format","image","width"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\nimport BlogQueries from 'graphql/queries/Blog';\nimport { useHistory } from 'react-router-dom';\nimport { withSnackbar } from 'notistack';\nimport { injectIntl } from 'react-intl';\nimport { getMessage } from 'utils/messageConvert';\nimport ReactMarkdown from 'react-markdown';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Grid, Typography } from '@material-ui/core';\nimport BlogList from './BlogList';\nimport { Visibility, Event } from '@material-ui/icons';\nimport moment from 'moment';\n\nconst Rightside = styled(Grid)``;\n\nfunction Blog(props) {\n\tconst [data, setData] = useState({\n\t\ttitle: '',\n\t\tisPublished: false,\n\t\tcontent: { html: '', text: '' },\n\t\tauthor: { username: '' },\n\t});\n\tconst { intl } = props;\n\tconst history = useHistory();\n\tconst params = useParams();\n\n\tconst [getBlog, blogData] = useLazyQuery(BlogQueries.GET_BLOG, {\n\t\tfetchPolicy: 'network-only',\n\t\tonCompleted: res => handleGetBlogsSuccess(res),\n\t\tonError: err => handleGetBlogsError(err),\n\t});\n\tuseEffect(() => {\n\t\tgetBlog({ variables: { id: params.id } });\n\t}, [params.id]);\n\n\tconst handleGetBlogsSuccess = res => {\n\t\tsetData(res.post);\n\t};\n\n\tconst handleGetBlogsError = err => {\n\t\tlet message = getMessage(err.message);\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\n\t\thistory.goBack();\n\t};\n\n\tconst handleRouteAuthor = id => {\n\t\thistory.push(`/user/${id}`);\n\t};\n\treturn (\n\t\t<Grid justify=\"space-evenly\" container>\n\t\t\t<Grid item xs={12} md={7}>\n\t\t\t\t<div className=\"kt-portlet kt-portlet--height-fluid\">\n\t\t\t\t\t<div className=\"kt-portlet__body\">\n\t\t\t\t\t\t<div className=\"mb-2\">\n\t\t\t\t\t\t\t<Typography variant=\"h4\" className=\"kt-portlet__head-title font-weight-bold\">\n\t\t\t\t\t\t\t\t{data.title}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"h6\" className=\"kt-portlet__head-title\">\n\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\tclassName=\"kt-widget4__username\"\n\t\t\t\t\t\t\t\t\tonClick={() => handleRouteAuthor(data.author.id)}\n\t\t\t\t\t\t\t\t></a>\n\t\t\t\t\t\t\t\t{data.author.username && `By ${data.author.username}`}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"info d-flex align-items-center mb-5\">\n\t\t\t\t\t\t\t<div id=\"views\">\n\t\t\t\t\t\t\t\t<Visibility className=\"mr-1\" color=\"primary\"></Visibility> {data.views ? data.views : 0}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div id=\"createdAt\" className=\"ml-2\">\n\t\t\t\t\t\t\t\t<Event className=\"mr-1\" color=\"primary\"></Event>\n\t\t\t\t\t\t\t\t{moment(data.createdAt).format('DD-MMM-YYYY')}{' '}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{data.image && (\n\t\t\t\t\t\t\t<div className=\"d-flex justify-content-center align-items-center w-80 mb-5\">\n\t\t\t\t\t\t\t\t<img style={{ width: '90%' }} src={data.image} alt=\"Blog image\"></img>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<ReactMarkdown>{data.content.text}</ReactMarkdown>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Rightside item xs={12} md={4}>\n\t\t\t\t<BlogList></BlogList>\n\t\t\t</Rightside>\n\t\t</Grid>\n\t);\n}\n\nexport default injectIntl(withSnackbar(Blog));\n"]},"metadata":{},"sourceType":"module"}
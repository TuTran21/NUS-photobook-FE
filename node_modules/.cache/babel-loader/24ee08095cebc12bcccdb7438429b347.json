{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Test/Collection/index.js\";\nimport React, { useEffect, memo } from 'react';\nimport { Button, Grid, Container } from '@material-ui/core';\nimport TestList from '../components/TestList';\nimport styled from 'styled-components';\nimport { useMutation } from '@apollo/client';\nimport TestMutation from 'graphql/mutations/Test';\nimport TestMockData from '../mockdata';\nimport TestSelectFilterBar from './TestSelectFilterBar';\nimport BlogList from '../../Blog/BlogList';\nconst Rightside = styled(Grid)``;\n\nfunction TestSelectScreen(props) {\n  const {\n    dispatch,\n    addTest,\n    history,\n    removeAnswersSheet\n  } = props; // const [createTest, { test }] = useMutation(TestMutation.CREATE_TEST);\n  // Clean answers from memory for new test\n  // Because we cannot load answers from global state to forms YET\n\n  useEffect(() => {\n    removeAnswersSheet();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    justify: \"space-evenly\",\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestSelectFilterBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(TestList, {\n    history: history,\n    dispatch: dispatch,\n    addTest: addTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(Rightside, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(BlogList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default memo(TestSelectScreen);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Test/Collection/index.js"],"names":["React","useEffect","memo","Button","Grid","Container","TestList","styled","useMutation","TestMutation","TestMockData","TestSelectFilterBar","BlogList","Rightside","TestSelectScreen","props","dispatch","addTest","history","removeAnswersSheet"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,QAAwC,mBAAxC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,MAAMC,SAAS,GAAGN,MAAM,CAACH,IAAD,CAAO,EAA/B;;AAEA,SAASU,gBAAT,CAA0BC,KAA1B,EAAiC;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,OAArB;AAA8BC,IAAAA;AAA9B,MAAqDJ,KAA3D,CADgC,CAEhC;AACA;AACA;;AACAd,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,kBAAkB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACC,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,cAAd;AAA6B,IAAA,SAAS,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAED,OAAnB;AAA4B,IAAA,QAAQ,EAAEF,QAAtC;AAAgD,IAAA,OAAO,EAAEC,OAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CADD,eAKC,oBAAC,SAAD;AAAW,IAAA,IAAI,MAAf;AAAgB,IAAA,EAAE,EAAE,EAApB;AAAwB,IAAA,EAAE,EAAE,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALD,CADD;AAWA;;AAED,eAAef,IAAI,CAACY,gBAAD,CAAnB","sourcesContent":["import React, { useEffect, memo } from 'react';\nimport { Button, Grid, Container } from '@material-ui/core';\nimport TestList from '../components/TestList';\nimport styled from 'styled-components';\n\nimport { useMutation } from '@apollo/client';\nimport TestMutation from 'graphql/mutations/Test';\nimport TestMockData from '../mockdata';\nimport TestSelectFilterBar from './TestSelectFilterBar';\nimport BlogList from '../../Blog/BlogList';\n\nconst Rightside = styled(Grid)``;\n\nfunction TestSelectScreen(props) {\n\tconst { dispatch, addTest, history, removeAnswersSheet } = props;\n\t// const [createTest, { test }] = useMutation(TestMutation.CREATE_TEST);\n\t// Clean answers from memory for new test\n\t// Because we cannot load answers from global state to forms YET\n\tuseEffect(() => {\n\t\tremoveAnswersSheet();\n\t}, []);\n\n\treturn (\n\t\t<Grid justify=\"space-evenly\" container>\n\t\t\t<Grid item xs={12} md={7}>\n\t\t\t\t<TestSelectFilterBar></TestSelectFilterBar>\n\t\t\t\t<TestList history={history} dispatch={dispatch} addTest={addTest}></TestList>\n\t\t\t</Grid>\n\t\t\t<Rightside item xs={12} md={4}>\n\t\t\t\t<BlogList></BlogList>\n\t\t\t</Rightside>\n\t\t</Grid>\n\t);\n}\n\nexport default memo(TestSelectScreen);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Dashboard/index.js\";\nimport React, { useMemo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Portlet, PortletBody, PortletHeader, PortletHeaderToolbar } from 'app/views/components/content/Portlet';\nimport { metronic } from 'app/themes/_metronic';\nimport dashboardMenuConfig from './DashboardMenuConfig'; // import QuickStatsChart from '../../widgets/QuickStatsChart';\n// import OrderStatisticsChart from '../../widgets/OrderStatisticsChart';\n// import OrdersWidget from '../../widgets/OrdersWidget';\n// import SalesBarChart from '../../widgets/SalesBarChart';\n// import DownloadFiles from '../../widgets/DownloadFiles';\n// import NewUsers from '../../widgets/NewUsers';\n// import LatestUpdates from '../../widgets/LatestUpdates';\n// import RecentActivities from '../../widgets/RecentActivities';\n\nimport PortletHeaderDropdown from 'app/views/components/layout/CustomDropdowns/PortletHeaderDropdown';\nimport NewUsers from './NewUsers';\nexport default function Dashboard(props) {\n  const {\n    brandColor,\n    dangerColor,\n    successColor,\n    primaryColor\n  } = useSelector(state => ({\n    brandColor: metronic.builder.selectors.getConfig(state, 'colors.state.brand'),\n    dangerColor: metronic.builder.selectors.getConfig(state, 'colors.state.danger'),\n    successColor: metronic.builder.selectors.getConfig(state, 'colors.state.success'),\n    primaryColor: metronic.builder.selectors.getConfig(state, 'colors.state.primary')\n  }));\n  const chartOptions = useMemo(() => ({\n    chart1: {\n      data: [10, 14, 18, 11, 9, 12, 14, 17, 18, 14],\n      color: brandColor,\n      border: 3\n    },\n    chart2: {\n      data: [11, 12, 18, 13, 11, 12, 15, 13, 19, 15],\n      color: dangerColor,\n      border: 3\n    },\n    chart3: {\n      data: [12, 12, 18, 11, 15, 12, 13, 16, 11, 18],\n      color: successColor,\n      border: 3\n    },\n    chart4: {\n      data: [11, 9, 13, 18, 13, 15, 14, 13, 18, 15],\n      color: primaryColor,\n      border: 3\n    }\n  }), [brandColor, dangerColor, primaryColor, successColor]);\n  useEffect(() => {\n    props.dispatch(metronic.builder.actions.setMenuConfig(dashboardMenuConfig));\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(NewUsers, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, \"LatestUpdates\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"Best Seller\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-xl-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"RecentActivities\")));\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/Dashboard/index.js"],"names":["React","useMemo","useEffect","useSelector","Portlet","PortletBody","PortletHeader","PortletHeaderToolbar","metronic","dashboardMenuConfig","PortletHeaderDropdown","NewUsers","Dashboard","props","brandColor","dangerColor","successColor","primaryColor","state","builder","selectors","getConfig","chartOptions","chart1","data","color","border","chart2","chart3","chart4","dispatch","actions","setMenuConfig"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Portlet, PortletBody, PortletHeader, PortletHeaderToolbar } from 'app/views/components/content/Portlet';\nimport { metronic } from 'app/themes/_metronic';\nimport dashboardMenuConfig from './DashboardMenuConfig';\n// import QuickStatsChart from '../../widgets/QuickStatsChart';\n// import OrderStatisticsChart from '../../widgets/OrderStatisticsChart';\n// import OrdersWidget from '../../widgets/OrdersWidget';\n// import SalesBarChart from '../../widgets/SalesBarChart';\n// import DownloadFiles from '../../widgets/DownloadFiles';\n// import NewUsers from '../../widgets/NewUsers';\n// import LatestUpdates from '../../widgets/LatestUpdates';\n\n// import RecentActivities from '../../widgets/RecentActivities';\nimport PortletHeaderDropdown from 'app/views/components/layout/CustomDropdowns/PortletHeaderDropdown';\nimport NewUsers from './NewUsers';\n\nexport default function Dashboard(props) {\n\tconst { brandColor, dangerColor, successColor, primaryColor } = useSelector(state => ({\n\t\tbrandColor: metronic.builder.selectors.getConfig(state, 'colors.state.brand'),\n\t\tdangerColor: metronic.builder.selectors.getConfig(state, 'colors.state.danger'),\n\t\tsuccessColor: metronic.builder.selectors.getConfig(state, 'colors.state.success'),\n\t\tprimaryColor: metronic.builder.selectors.getConfig(state, 'colors.state.primary'),\n\t}));\n\n\tconst chartOptions = useMemo(\n\t\t() => ({\n\t\t\tchart1: {\n\t\t\t\tdata: [10, 14, 18, 11, 9, 12, 14, 17, 18, 14],\n\t\t\t\tcolor: brandColor,\n\t\t\t\tborder: 3,\n\t\t\t},\n\n\t\t\tchart2: {\n\t\t\t\tdata: [11, 12, 18, 13, 11, 12, 15, 13, 19, 15],\n\t\t\t\tcolor: dangerColor,\n\t\t\t\tborder: 3,\n\t\t\t},\n\n\t\t\tchart3: {\n\t\t\t\tdata: [12, 12, 18, 11, 15, 12, 13, 16, 11, 18],\n\t\t\t\tcolor: successColor,\n\t\t\t\tborder: 3,\n\t\t\t},\n\n\t\t\tchart4: {\n\t\t\t\tdata: [11, 9, 13, 18, 13, 15, 14, 13, 18, 15],\n\t\t\t\tcolor: primaryColor,\n\t\t\t\tborder: 3,\n\t\t\t},\n\t\t}),\n\t\t[brandColor, dangerColor, primaryColor, successColor],\n\t);\n\n\tuseEffect(() => {\n\t\tprops.dispatch(metronic.builder.actions.setMenuConfig(dashboardMenuConfig));\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"row\">\n\t\t\t\t{/* <div className=\"col-xl-4\">DownloadFiles</div> */}\n\t\t\t\t<div className=\"col-xl-4\">\n\t\t\t\t\t<NewUsers></NewUsers>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"col-xl-4\">LatestUpdates</div>\n\t\t\t</div>\n\n\t\t\t{/* <div className=\"row\">\n        <div className=\"col-xl-8\"></div>\n        <div className=\"col-xl-4\">\n          <AuthorsProfit />\n        </div>\n      </div> */}\n\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"col-xl-8\">Best Seller</div>\n\t\t\t\t<div className=\"col-xl-4\">\n\t\t\t\t\tRecentActivities\n\t\t\t\t\t{/* <RecentActivities /> */}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/AuthForms/ForgotPasswordForm.js\";\nimport React, { Component, useState } from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { TextField, Button } from '@material-ui/core';\nimport { Link, Redirect } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport clsx from 'clsx';\nimport { withSnackbar } from 'notistack'; // import * as auth from '../../store/ducks/auth.duck';\n// import { requestPassword } from '../../crud/auth.crud';\n\nfunction ForgotPasswordForm(props) {\n  const {\n    intl,\n    handleForgotPasswordPromise,\n    handleChangeFormType\n  } = props;\n  const [isRequested, setRequested] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [loadingButtonStyle, setLoadingButtonStyle] = useState({\n    paddingRight: '2.5rem'\n  });\n\n  const enableLoading = () => {\n    setLoading(true);\n    setLoadingButtonStyle({\n      paddingRight: '3.5rem'\n    });\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n    setLoadingButtonStyle({\n      paddingRight: '2.5rem'\n    });\n  };\n\n  const forgotError = (err, setStatus, setSubmitting) => {\n    disableLoading();\n    let message = '';\n\n    switch (err.code) {\n      case 404:\n        message = 'AUTH.VALIDATION.USER_NOT_FOUND';\n        break;\n\n      case 500:\n        message = 'SERVER_INTERNAL_ERROR';\n        break;\n\n      default:\n        message = 'TRY_AGAIN_LATER';\n        break;\n    }\n\n    props.enqueueSnackbar(intl.formatMessage({\n      id: message\n    }), {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n    setSubmitting(false);\n    setStatus(intl.formatMessage({\n      id: message\n    }));\n  };\n\n  const forgotSuccess = (res, setStatus, setSubmitting) => {\n    disableLoading();\n    props.enqueueSnackbar(intl.formatMessage({\n      id: 'AUTH.FORGOT.REQUEST_SUCCESS'\n    }), {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      }\n    });\n    setSubmitting(false);\n    setStatus(intl.formatMessage({\n      id: 'AUTH.FORGOT.REQUEST_SUCCESS'\n    }));\n    setRequested(true);\n  };\n\n  if (isRequested) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/auth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid  kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.FORGOT.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: ''\n    },\n    validate: values => {\n      const errors = {};\n\n      if (!values.email) {\n        errors.email = intl.formatMessage({\n          id: 'AUTH.VALIDATION.REQUIRED_FIELD'\n        });\n      } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n        errors.email = intl.formatMessage({\n          id: 'AUTH.VALIDATION.INVALID_FIELD'\n        });\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setStatus,\n      setSubmitting\n    }) => {\n      enableLoading();\n      setTimeout(() => {\n        const payload = {\n          email: values.email\n        };\n        handleForgotPasswordPromise(payload).then(res => {\n          forgotSuccess(res, setStatus, setSubmitting);\n        }).catch(err => {\n          forgotError(err, setStatus, setSubmitting);\n        });\n      }, 1000);\n      return;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 6\n    }\n  }, ({\n    values,\n    status,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"kt-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 8\n    }\n  }, status && /*#__PURE__*/React.createElement(\"div\", {\n    role: \"alert\",\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"alert-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, status)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    type: \"email\",\n    label: \"Email\",\n    margin: \"normal\",\n    fullWidth: true,\n    name: \"email\",\n    onBlur: handleBlur,\n    onChange: handleChange,\n    value: values.email,\n    helperText: touched.email && errors.email,\n    error: Boolean(touched.email && errors.email),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-login__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, handleChangeFormType ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleChangeFormType('login'),\n    className: \"btn btn-secondary btn-elevate kt-login__btn-secondary d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: 'AUTH.GENERAL.BACK_BUTTON'\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/auth\",\n    className: \"btn btn-secondary btn-elevate kt-login__btn-secondary d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, intl.formatMessage({\n    id: 'AUTH.GENERAL.BACK_BUTTON'\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: `btn btn-primary btn-elevate kt-login__btn-primary ${clsx({\n      'kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light': loading\n    })}`,\n    style: loadingButtonStyle,\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 10\n    }\n  }, intl.formatMessage({\n    id: 'AUTH.GENERAL.SUBMIT_BUTTON'\n  }))))))));\n}\n\nexport default injectIntl(withSnackbar(ForgotPasswordForm));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/AuthForms/ForgotPasswordForm.js"],"names":["React","Component","useState","Formik","connect","TextField","Button","Link","Redirect","FormattedMessage","injectIntl","clsx","withSnackbar","ForgotPasswordForm","props","intl","handleForgotPasswordPromise","handleChangeFormType","isRequested","setRequested","loading","setLoading","loadingButtonStyle","setLoadingButtonStyle","paddingRight","enableLoading","disableLoading","forgotError","err","setStatus","setSubmitting","message","code","enqueueSnackbar","formatMessage","id","variant","anchorOrigin","vertical","horizontal","forgotSuccess","res","email","values","errors","test","setTimeout","payload","then","catch","status","touched","handleChange","handleBlur","handleSubmit","isSubmitting","Boolean"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { TextField, Button } from '@material-ui/core';\nimport { Link, Redirect } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport clsx from 'clsx';\nimport { withSnackbar } from 'notistack';\n// import * as auth from '../../store/ducks/auth.duck';\n// import { requestPassword } from '../../crud/auth.crud';\n\nfunction ForgotPasswordForm(props) {\n\tconst { intl, handleForgotPasswordPromise, handleChangeFormType } = props;\n\tconst [isRequested, setRequested] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [loadingButtonStyle, setLoadingButtonStyle] = useState({\n\t\tpaddingRight: '2.5rem',\n\t});\n\tconst enableLoading = () => {\n\t\tsetLoading(true);\n\t\tsetLoadingButtonStyle({ paddingRight: '3.5rem' });\n\t};\n\n\tconst disableLoading = () => {\n\t\tsetLoading(false);\n\t\tsetLoadingButtonStyle({ paddingRight: '2.5rem' });\n\t};\n\n\tconst forgotError = (err, setStatus, setSubmitting) => {\n\t\tdisableLoading();\n\t\tlet message = '';\n\t\tswitch (err.code) {\n\t\t\tcase 404:\n\t\t\t\tmessage = 'AUTH.VALIDATION.USER_NOT_FOUND';\n\t\t\t\tbreak;\n\t\t\tcase 500:\n\t\t\t\tmessage = 'SERVER_INTERNAL_ERROR';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage = 'TRY_AGAIN_LATER';\n\t\t\t\tbreak;\n\t\t}\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'error',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tsetSubmitting(false);\n\t\tsetStatus(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t);\n\t};\n\n\tconst forgotSuccess = (res, setStatus, setSubmitting) => {\n\t\tdisableLoading();\n\t\tprops.enqueueSnackbar(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: 'AUTH.FORGOT.REQUEST_SUCCESS',\n\t\t\t}),\n\t\t\t{\n\t\t\t\tvariant: 'success',\n\t\t\t\tanchorOrigin: {\n\t\t\t\t\tvertical: 'top',\n\t\t\t\t\thorizontal: 'right',\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t\tsetSubmitting(false);\n\t\tsetStatus(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: 'AUTH.FORGOT.REQUEST_SUCCESS',\n\t\t\t}),\n\t\t);\n\t\tsetRequested(true);\n\t};\n\n\tif (isRequested) {\n\t\treturn <Redirect to=\"/auth\" />;\n\t}\n\n\treturn (\n\t\t<div className=\"kt-grid__item kt-grid__item--fluid  kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\">\n\t\t\t<div className=\"kt-login__body\">\n\t\t\t\t<div className=\"kt-login__form\">\n\t\t\t\t\t<div className=\"kt-login__title\">\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t<FormattedMessage id=\"AUTH.FORGOT.TITLE\" />\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tinitialValues={{ email: '' }}\n\t\t\t\t\t\tvalidate={values => {\n\t\t\t\t\t\t\tconst errors = {};\n\n\t\t\t\t\t\t\tif (!values.email) {\n\t\t\t\t\t\t\t\terrors.email = intl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: 'AUTH.VALIDATION.REQUIRED_FIELD',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n\t\t\t\t\t\t\t\terrors.email = intl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: 'AUTH.VALIDATION.INVALID_FIELD',\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn errors;\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonSubmit={(values, { setStatus, setSubmitting }) => {\n\t\t\t\t\t\t\tenableLoading();\n\t\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\t\tconst payload = { email: values.email };\n\t\t\t\t\t\t\t\thandleForgotPasswordPromise(payload)\n\t\t\t\t\t\t\t\t\t.then(res => {\n\t\t\t\t\t\t\t\t\t\tforgotSuccess(res, setStatus, setSubmitting);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\t\t\tforgotError(err, setStatus, setSubmitting);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, 1000);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({\n\t\t\t\t\t\t\tvalues,\n\t\t\t\t\t\t\tstatus,\n\t\t\t\t\t\t\terrors,\n\t\t\t\t\t\t\ttouched,\n\t\t\t\t\t\t\thandleChange,\n\t\t\t\t\t\t\thandleBlur,\n\t\t\t\t\t\t\thandleSubmit,\n\t\t\t\t\t\t\tisSubmitting,\n\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t<form onSubmit={handleSubmit} className=\"kt-form\">\n\t\t\t\t\t\t\t\t{status && (\n\t\t\t\t\t\t\t\t\t<div role=\"alert\" className=\"alert alert-danger\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"alert-text\">{status}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\t\t\t\t\t\tfullWidth={true}\n\t\t\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={values.email}\n\t\t\t\t\t\t\t\t\t\thelperText={touched.email && errors.email}\n\t\t\t\t\t\t\t\t\t\terror={Boolean(touched.email && errors.email)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"kt-login__actions\">\n\t\t\t\t\t\t\t\t\t{handleChangeFormType ? (\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => handleChangeFormType('login')}\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-secondary btn-elevate kt-login__btn-secondary d-flex align-items-center\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'AUTH.GENERAL.BACK_BUTTON',\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\tto=\"/auth\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-secondary btn-elevate kt-login__btn-secondary d-flex align-items-center\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\t\tid: 'AUTH.GENERAL.BACK_BUTTON',\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tclassName={`btn btn-primary btn-elevate kt-login__btn-primary ${clsx({\n\t\t\t\t\t\t\t\t\t\t\t'kt-spinner kt-spinner--right kt-spinner--md kt-spinner--light': loading,\n\t\t\t\t\t\t\t\t\t\t})}`}\n\t\t\t\t\t\t\t\t\t\tstyle={loadingButtonStyle}\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\t\t\tid: 'AUTH.GENERAL.SUBMIT_BUTTON',\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default injectIntl(withSnackbar(ForgotPasswordForm));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Form/EngageRadioButtons/index.js\";\n\n/* eslint-disable react/prop-types */\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport theme from 'app/themes';\nimport _ from 'lodash';\nimport classnames from 'classnames';\nimport UnChecked from \"./UnChecked.svg\";\nimport Checked from \"./Checked.svg\";\nimport { incrementAlphabet } from 'utils/utils';\nimport QuestionNumber from '../../Test/QuestionNumber';\nimport UnCheckedSquare from \"./UnCheckedSquare.svg\";\nimport CheckedSquare from \"./CheckedSquare.svg\";\nimport LoadingIndicator from '../../common/LoadingIndicator';\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 10px;\n\n\t${props => props.flexvertical ? `flex-direction: column;` : ''}\n\n\t${props => props.disabled ? `\n      background-color: ${theme.engDisabledBackground};\n      border: none !important;\n      cursor: not-allowed !important;\n      opacity: 0.9;\n  ` : ''}\n`;\nconst Label = styled.label`\n    display: inline-block;\n    margin-bottom: 0 !important;\n    cursor: pointer;\n    line-height: 1.5;\n    font-size: 16px;\n}`;\nconst StyledCheckbox = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-start;\n\tcursor: pointer;\n\tmargin-right: 20px;\n\theight: 36px;\n\tmargin-bottom: 8px;\n\n\tlabel {\n\t\tmargin-bottom: 0 !important;\n\t\tmargin-left: 5px;\n\t\tcolor: ${theme.ncpDark};\n\t\tcursor: pointer;\n\t}\n\n\timg {\n\t\tcursor: pointer;\n\t\tmargin-top: -1px;\n\t\twidth: 16px;\n\t}\n`;\nexport default function ({\n  title,\n  required,\n  defaultValue,\n  onChange,\n  isMulti = false,\n  disabled,\n  flexvertical,\n  holderStyle,\n  hasAlphabetLabel,\n  value,\n  options = []\n}) {\n  const [selected, setSelected] = useState(defaultValue || (isMulti ? [] : {}));\n  const onSelect = useCallback(radioButton => {\n    if (disabled) {\n      return;\n    }\n\n    if (isMulti) {\n      const isExistedIdx = _.findIndex(selected, sel => sel.key === radioButton.key);\n\n      if (isExistedIdx > -1) {\n        const newSelected = [...selected];\n        newSelected.splice(isExistedIdx, 1);\n        setSelected(newSelected);\n        onChange(newSelected);\n      } else {\n        setSelected([...selected, radioButton]);\n        onChange([...selected, radioButton]);\n      }\n    } else if (_.isEmpty(selected) || selected.key !== radioButton.key) {\n      setSelected(radioButton);\n      onChange(radioButton);\n    } else {\n      setSelected({});\n      onChange(null);\n    }\n  }, [selected, setSelected, onChange, disabled]);\n\n  const isSelected = key => {\n    if (_.isEmpty(selected)) {\n      return false;\n    }\n\n    if (isMulti) {\n      return !!_.find(selected, sel => sel.key === key);\n    }\n\n    return selected.key === key;\n  };\n\n  const isUnselected = key => {\n    if (_.isEmpty(selected)) {\n      return true;\n    }\n\n    if (isMulti) {\n      return !_.find(selected, sel => sel.key === key);\n    }\n\n    return selected.key !== key;\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 3\n    }\n  }, !!title && /*#__PURE__*/React.createElement(Label, {\n    className: classnames('eng-label--input-title', {\n      'eng-label--required': required\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, title), /*#__PURE__*/React.createElement(Wrapper, {\n    style: holderStyle,\n    disabled: disabled,\n    flexvertical: flexvertical,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 4\n    }\n  }, options.map((radioButton, idx) => /*#__PURE__*/React.createElement(StyledCheckbox, {\n    key: idx,\n    onClick: () => onSelect(radioButton),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }\n  }, hasAlphabetLabel && /*#__PURE__*/React.createElement(QuestionNumber, {\n    hasAlphabet: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 28\n    }\n  }, incrementAlphabet(idx)), isSelected(radioButton.key) && /*#__PURE__*/React.createElement(\"img\", {\n    src: isMulti ? CheckedSquare : Checked,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 39\n    }\n  }), isUnselected(radioButton.key) && /*#__PURE__*/React.createElement(\"img\", {\n    src: isMulti ? UnCheckedSquare : UnChecked,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 41\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, ` ${radioButton.label}`)))));\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Form/EngageRadioButtons/index.js"],"names":["React","useState","useCallback","useEffect","styled","theme","_","classnames","incrementAlphabet","QuestionNumber","LoadingIndicator","Wrapper","div","props","flexvertical","disabled","engDisabledBackground","Label","label","StyledCheckbox","ncpDark","title","required","defaultValue","onChange","isMulti","holderStyle","hasAlphabetLabel","value","options","selected","setSelected","onSelect","radioButton","isExistedIdx","findIndex","sel","key","newSelected","splice","isEmpty","isSelected","find","isUnselected","map","idx","CheckedSquare","Checked","UnCheckedSquare","UnChecked"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable react/jsx-props-no-spreading */\nimport React, { useState, useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport theme from 'app/themes';\nimport _ from 'lodash';\nimport classnames from 'classnames';\nimport UnChecked from './UnChecked.svg';\nimport Checked from './Checked.svg';\n\nimport { incrementAlphabet } from 'utils/utils';\nimport QuestionNumber from '../../Test/QuestionNumber';\nimport UnCheckedSquare from './UnCheckedSquare.svg';\nimport CheckedSquare from './CheckedSquare.svg';\nimport LoadingIndicator from '../../common/LoadingIndicator';\n\nconst Wrapper = styled.div`\n\tdisplay: flex;\n\tmargin-bottom: 10px;\n\n\t${props => (props.flexvertical ? `flex-direction: column;` : '')}\n\n\t${props =>\n\t\tprops.disabled\n\t\t\t? `\n      background-color: ${theme.engDisabledBackground};\n      border: none !important;\n      cursor: not-allowed !important;\n      opacity: 0.9;\n  `\n\t\t\t: ''}\n`;\n\nconst Label = styled.label`\n    display: inline-block;\n    margin-bottom: 0 !important;\n    cursor: pointer;\n    line-height: 1.5;\n    font-size: 16px;\n}`;\n\nconst StyledCheckbox = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: flex-start;\n\tcursor: pointer;\n\tmargin-right: 20px;\n\theight: 36px;\n\tmargin-bottom: 8px;\n\n\tlabel {\n\t\tmargin-bottom: 0 !important;\n\t\tmargin-left: 5px;\n\t\tcolor: ${theme.ncpDark};\n\t\tcursor: pointer;\n\t}\n\n\timg {\n\t\tcursor: pointer;\n\t\tmargin-top: -1px;\n\t\twidth: 16px;\n\t}\n`;\n\nexport default function({\n\ttitle,\n\trequired,\n\tdefaultValue,\n\tonChange,\n\tisMulti = false,\n\tdisabled,\n\tflexvertical,\n\tholderStyle,\n\thasAlphabetLabel,\n\tvalue,\n\toptions = [],\n}) {\n\tconst [selected, setSelected] = useState(defaultValue || (isMulti ? [] : {}));\n\n\tconst onSelect = useCallback(\n\t\tradioButton => {\n\t\t\tif (disabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (isMulti) {\n\t\t\t\tconst isExistedIdx = _.findIndex(selected, sel => sel.key === radioButton.key);\n\t\t\t\tif (isExistedIdx > -1) {\n\t\t\t\t\tconst newSelected = [...selected];\n\t\t\t\t\tnewSelected.splice(isExistedIdx, 1);\n\t\t\t\t\tsetSelected(newSelected);\n\t\t\t\t\tonChange(newSelected);\n\t\t\t\t} else {\n\t\t\t\t\tsetSelected([...selected, radioButton]);\n\t\t\t\t\tonChange([...selected, radioButton]);\n\t\t\t\t}\n\t\t\t} else if (_.isEmpty(selected) || selected.key !== radioButton.key) {\n\t\t\t\tsetSelected(radioButton);\n\t\t\t\tonChange(radioButton);\n\t\t\t} else {\n\t\t\t\tsetSelected({});\n\t\t\t\tonChange(null);\n\t\t\t}\n\t\t},\n\t\t[selected, setSelected, onChange, disabled],\n\t);\n\n\tconst isSelected = key => {\n\t\tif (_.isEmpty(selected)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (isMulti) {\n\t\t\treturn !!_.find(selected, sel => sel.key === key);\n\t\t}\n\n\t\treturn selected.key === key;\n\t};\n\n\tconst isUnselected = key => {\n\t\tif (_.isEmpty(selected)) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isMulti) {\n\t\t\treturn !_.find(selected, sel => sel.key === key);\n\t\t}\n\n\t\treturn selected.key !== key;\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{!!title && (\n\t\t\t\t<Label\n\t\t\t\t\tclassName={classnames('eng-label--input-title', {\n\t\t\t\t\t\t'eng-label--required': required,\n\t\t\t\t\t})}\n\t\t\t\t>\n\t\t\t\t\t{title}\n\t\t\t\t</Label>\n\t\t\t)}\n\n\t\t\t<Wrapper style={holderStyle} disabled={disabled} flexvertical={flexvertical}>\n\t\t\t\t{options.map((radioButton, idx) => (\n\t\t\t\t\t<StyledCheckbox key={idx} onClick={() => onSelect(radioButton)}>\n\t\t\t\t\t\t{hasAlphabetLabel && <QuestionNumber hasAlphabet>{incrementAlphabet(idx)}</QuestionNumber>}\n\t\t\t\t\t\t{isSelected(radioButton.key) && <img src={isMulti ? CheckedSquare : Checked} alt=\"\" />}\n\t\t\t\t\t\t{isUnselected(radioButton.key) && <img src={isMulti ? UnCheckedSquare : UnChecked} alt=\"\" />}\n\t\t\t\t\t\t<Label>{` ${radioButton.label}`}</Label>\n\t\t\t\t\t</StyledCheckbox>\n\t\t\t\t))}\n\t\t\t</Wrapper>\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
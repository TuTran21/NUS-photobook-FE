{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/LandingPage/components/PhotoList.js\";\nimport React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useQuery } from '@apollo/client';\nimport TestQueries from 'graphql/queries/Test';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport FeaturedTestsSkeleton from '../../../components/Skeletons/FeaturedTestsSkeleton';\nimport TestCardItemSkeleton from 'app/views/components/Skeletons/TestCardItemSkeleton';\nconst TestCardItem = React.lazy(() => import('app/views/components/Test/TestCardItem'));\nconst Wrapper = styled(Grid)`\n\twidth: 100%;\n\tbackground: white;\n\talign-items: center;\n\n\t@media screen and (max-width: 600px) {\n\t\tmargin-top: 50px;\n\t}\n\n\t@media screen and (min-width: 1024px) and (max-width: 1300px) {\n\n\t}\n`;\nconst TestListContainer = styled(Grid)`\n\talign-items: center;\n`;\nconst ErrorText = styled(Typography)`\n\ttext-align: center;\n`;\n\nfunction PhotoList(props) {\n  const {\n    lowPadding = false,\n    wrapperStyle\n  } = props;\n  const getTestRes = useQuery(TestQueries.GET_TESTS, {\n    variables: {\n      offset: 0,\n      limit: 4\n    }\n  });\n  const {\n    data,\n    error,\n    loading\n  } = getTestRes;\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(Wrapper, {\n      style: wrapperStyle,\n      lowpadding: lowPadding.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 4\n      }\n    }, loading && /*#__PURE__*/React.createElement(FeaturedTestsSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), !data && !loading && /*#__PURE__*/React.createElement(ErrorText, {\n      color: \"error\",\n      variant: \"h6\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 6\n      }\n    }, \"No photos found\"), error && /*#__PURE__*/React.createElement(ErrorText, {\n      color: \"error\",\n      variant: \"h6\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }\n    }, \"Something went wrong, please try again later\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    style: wrapperStyle,\n    lowpadding: lowPadding.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TestListContainer, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 4\n    }\n  }, loading && /*#__PURE__*/React.createElement(FeaturedTestsSkeleton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), data && data.tests.map((test, idx) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 3,\n    key: idx,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(TestCardItemSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TestCardItem, {\n    testId: test.id,\n    title: test.title,\n    rating: test.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }))))));\n}\n\nexport default memo(PhotoList);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/LandingPage/components/PhotoList.js"],"names":["React","memo","styled","Grid","Typography","useQuery","TestQueries","LoadingIndicator","FeaturedTestsSkeleton","TestCardItemSkeleton","TestCardItem","lazy","Wrapper","TestListContainer","ErrorText","PhotoList","props","lowPadding","wrapperStyle","getTestRes","GET_TESTS","variables","offset","limit","data","error","loading","toString","tests","map","test","idx","id","title","rating"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport styled from 'styled-components';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useQuery } from '@apollo/client';\nimport TestQueries from 'graphql/queries/Test';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport FeaturedTestsSkeleton from '../../../components/Skeletons/FeaturedTestsSkeleton';\nimport TestCardItemSkeleton from 'app/views/components/Skeletons/TestCardItemSkeleton';\n\nconst TestCardItem = React.lazy(() => import('app/views/components/Test/TestCardItem'));\n\nconst Wrapper = styled(Grid)`\n\twidth: 100%;\n\tbackground: white;\n\talign-items: center;\n\n\t@media screen and (max-width: 600px) {\n\t\tmargin-top: 50px;\n\t}\n\n\t@media screen and (min-width: 1024px) and (max-width: 1300px) {\n\n\t}\n`;\n\nconst TestListContainer = styled(Grid)`\n\talign-items: center;\n`;\n\nconst ErrorText = styled(Typography)`\n\ttext-align: center;\n`;\n\nfunction PhotoList(props) {\n\tconst { lowPadding = false, wrapperStyle } = props;\n\tconst getTestRes = useQuery(TestQueries.GET_TESTS, { variables: { offset: 0, limit: 4 } });\n\tconst { data, error, loading } = getTestRes;\n\n\tif (error) {\n\t\treturn (\n\t\t\t<Wrapper style={wrapperStyle} lowpadding={lowPadding.toString()}>\n\t\t\t\t{loading && <FeaturedTestsSkeleton></FeaturedTestsSkeleton>}\n\t\t\t\t{!data && !loading && (\n\t\t\t\t\t<ErrorText color=\"error\" variant=\"h6\" component=\"p\">\n\t\t\t\t\t\tNo photos found\n\t\t\t\t\t</ErrorText>\n\t\t\t\t)}\n\t\t\t\t{error && (\n\t\t\t\t\t<ErrorText color=\"error\" variant=\"h6\" component=\"p\">\n\t\t\t\t\t\tSomething went wrong, please try again later\n\t\t\t\t\t</ErrorText>\n\t\t\t\t)}\n\t\t\t</Wrapper>\n\t\t);\n\t}\n\n\treturn (\n\t\t<Wrapper style={wrapperStyle} lowpadding={lowPadding.toString()}>\n\t\t\t<TestListContainer container>\n\t\t\t\t{loading && <FeaturedTestsSkeleton></FeaturedTestsSkeleton>}\n\t\t\t\t{data &&\n\t\t\t\t\tdata.tests.map((test, idx) => (\n\t\t\t\t\t\t<Grid item xs={12} sm={6} md={3} key={idx}>\n\t\t\t\t\t\t\t<React.Suspense fallback={<TestCardItemSkeleton />}>\n\t\t\t\t\t\t\t\t<TestCardItem testId={test.id} title={test.title} rating={test.rating}></TestCardItem>\n\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t))}\n\t\t\t</TestListContainer>\n\t\t</Wrapper>\n\t);\n}\n\nexport default memo(PhotoList);\n"]},"metadata":{},"sourceType":"module"}
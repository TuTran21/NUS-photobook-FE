{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/index.js\";\nimport React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { HelmetProvider } from 'react-helmet-async';\nimport ThemeProvider from 'app/themes/materialUI/ThemeProvider';\nimport { ApolloProvider } from '@apollo/client';\nimport client from 'utils/apollo';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment'; // Components\n\nimport App from './app/views/App';\nimport { SnackbarProvider } from 'notistack'; // Store\n\nimport configureStore from './state/store';\nimport history from './utils/history';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react'; // IE 11 polyfills\n\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable'; // Actions\n// Styling\n\nimport './index.scss';\nimport './index.css';\nimport 'socicon/css/socicon.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { CircularProgress } from '@material-ui/core';\nimport AnimateLoading from 'app/views/components/layout/AnimateLoading'; // Create redux store with history\n\nconst store = configureStore(window.REDUX_INITIAL_DATA, history);\nconst persistor = persistStore(store);\nrender( /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ApolloProvider, {\n  client: client,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 4\n  }\n}, /*#__PURE__*/React.createElement(React.Suspense, {\n  fallback: /*#__PURE__*/React.createElement(AnimateLoading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 31\n    }\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(HelmetProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 6\n  }\n}, /*#__PURE__*/React.createElement(PersistGate, {\n  persistor: persistor,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(ThemeProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 8\n  }\n}, /*#__PURE__*/React.createElement(ConnectedRouter, {\n  history: history,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(SnackbarProvider, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n  utils: MomentUtils,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 13\n  }\n}))))))))))), document.getElementById('root'));\n{\n  /* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/index.js"],"names":["React","render","Provider","ConnectedRouter","HelmetProvider","ThemeProvider","ApolloProvider","client","MuiPickersUtilsProvider","MomentUtils","App","SnackbarProvider","configureStore","history","persistStore","PersistGate","CircularProgress","AnimateLoading","store","window","REDUX_INITIAL_DATA","persistor","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,OAAQC,aAAR,MAA4B,qCAA5B;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,uBAAT,QAAwC,sBAAxC;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iBAAhB;AACA,SAASC,gBAAT,QAAiC,WAAjC,C,CACA;;AACA,OAAOC,cAAP,MAA2B,eAA3B;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,WAAT,QAA4B,iCAA5B,C,CACA;;AACA,OAAO,yBAAP;AACA,OAAO,2BAAP,C,CACA;AACA;;AACA,OAAO,cAAP;AACA,OAAO,aAAP;AACA,OAAO,yBAAP;AACA,OAAO,+CAAP;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,OAAOC,cAAP,MAA2B,4CAA3B,C,CACA;;AACA,MAAMC,KAAK,GAAGN,cAAc,CAACO,MAAM,CAACC,kBAAR,EAA4BP,OAA5B,CAA5B;AACA,MAAMQ,SAAS,GAAGP,YAAY,CAACI,KAAD,CAA9B;AAEAjB,MAAM,eACL,uDACC,oBAAC,cAAD;AAAgB,EAAA,MAAM,EAAEM,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEW,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,KAAD,CAAO,QAAP;AAAgB,EAAA,QAAQ,eAAE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,WAAD;AAAa,EAAA,SAAS,EAAEG,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,eAAD;AAAiB,EAAA,OAAO,EAAER,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,uBAAD;AAAyB,EAAA,KAAK,EAAEJ,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,CADF,CADD,CADD,CADD,CADD,CADD,CADD,CADD,CADK,EAsBLa,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAtBK,CAAN;AAyBA;AACC;AACA","sourcesContent":["import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { HelmetProvider } from 'react-helmet-async';\nimport  ThemeProvider  from 'app/themes/materialUI/ThemeProvider';\nimport { ApolloProvider } from '@apollo/client';\nimport client from 'utils/apollo';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\n// Components\nimport App from './app/views/App';\nimport { SnackbarProvider } from 'notistack';\n// Store\nimport configureStore from './state/store';\nimport history from './utils/history';\nimport { persistStore } from 'redux-persist';\nimport { PersistGate } from 'redux-persist/integration/react';\n// IE 11 polyfills\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n// Actions\n// Styling\nimport './index.scss';\nimport './index.css';\nimport 'socicon/css/socicon.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport { CircularProgress } from '@material-ui/core';\nimport AnimateLoading from 'app/views/components/layout/AnimateLoading';\n// Create redux store with history\nconst store = configureStore(window.REDUX_INITIAL_DATA, history);\nconst persistor = persistStore(store);\n\nrender(\n\t<>\n\t\t<ApolloProvider client={client}>\n\t\t\t<Provider store={store}>\n\t\t\t\t<React.Suspense fallback={<AnimateLoading></AnimateLoading>}>\n\t\t\t\t\t<HelmetProvider>\n\t\t\t\t\t\t<PersistGate persistor={persistor}>\n\t\t\t\t\t\t\t<ThemeProvider>\n\t\t\t\t\t\t\t\t<ConnectedRouter history={history}>\n\t\t\t\t\t\t\t\t\t\t<SnackbarProvider>\n\t\t\t\t\t\t\t\t\t\t\t<MuiPickersUtilsProvider utils={MomentUtils}>\n\t\t\t\t\t\t\t\t\t\t\t\t<App />\n\t\t\t\t\t\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t\t\t\t\t\t\t</SnackbarProvider>\n\t\t\t\t\t\t\t\t</ConnectedRouter>\n\t\t\t\t\t\t\t</ThemeProvider>\n\t\t\t\t\t\t</PersistGate>\n\t\t\t\t\t</HelmetProvider>\n\t\t\t\t</React.Suspense>\n\t\t\t</Provider>\n\t\t</ApolloProvider>\n\t</>,\n\tdocument.getElementById('root'),\n);\n\n{\n\t/* Asynchronously persist redux stores and show `SplashScreen` while it's loading. */\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/EditQuestionSectionDrawer/index.js\";\nimport React, { useState } from 'react';\nimport { IconButton, Typography, Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nconst EditQuestionSectionForm = React.lazy(() => import('app/views/components/CreateReadingTest/questionCreateForms/EditQuestionSectionForm'));\nconst DrawerContent = styled.div`\n\twidth: auto;\n\tmin-width: 340px;\n\tmax-width: 600px;\n\tposition: relative;\n\tpadding: 20px;\n`;\nconst DrawerHeader = styled.div`\n\twidth: 100%;\n\tposition: relative;\n\tpadding: 20px;\n`;\nconst CloseDrawerBtn = styled(IconButton)`\n\tposition: absolute !important;\n\ttop: 5px;\n\tright: 5px;\n`;\nconst DrawerTitle = styled(Typography)``;\nconst DrawerFooter = styled.div`\n\tposition: relative;\n`;\n\nconst RenderForm = props => {\n  const {\n    questionType,\n    handleChangeQuestionType,\n    paragraphAmount,\n    toggleDrawer,\n    handleAddQuestionSection,\n    questionSection,\n    handleEditQuestionSection\n  } = props;\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      hasSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(EditQuestionSectionForm, {\n    questionType: questionType,\n    handleAddQuestionSection: handleAddQuestionSection,\n    handleEditQuestionSection: handleEditQuestionSection,\n    toggleDrawer: toggleDrawer,\n    paragraphAmount: paragraphAmount,\n    handleChangeQuestionType: handleChangeQuestionType,\n    questionSection: questionSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }\n  }));\n};\n\nfunction QuestionSectionDrawer(props) {\n  const {\n    toggleDrawer,\n    questionType,\n    paragraphAmount,\n    handleAddQuestionSection,\n    questionSection,\n    handleEditQuestionSection\n  } = props;\n  const [questionTypeState, setQuestionType] = useState(questionType);\n\n  const handleChangeQuestionType = value => {\n    setQuestionType(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(DrawerHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(DrawerTitle, {\n    variant: \"h6\",\n    component: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, \"Add new question section\")), /*#__PURE__*/React.createElement(DrawerContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(RenderForm, {\n    questionSection: questionSection,\n    handleEditQuestionSection: handleEditQuestionSection,\n    handleAddQuestionSection: handleAddQuestionSection,\n    toggleDrawer: toggleDrawer,\n    paragraphAmount: paragraphAmount,\n    questionType: questionTypeState,\n    handleChangeQuestionType: handleChangeQuestionType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  })));\n}\n\nexport default QuestionSectionDrawer;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/EditQuestionSectionDrawer/index.js"],"names":["React","useState","IconButton","Typography","Button","Close","styled","LoadingIndicator","EditQuestionSectionForm","lazy","DrawerContent","div","DrawerHeader","CloseDrawerBtn","DrawerTitle","DrawerFooter","RenderForm","props","questionType","handleChangeQuestionType","paragraphAmount","toggleDrawer","handleAddQuestionSection","questionSection","handleEditQuestionSection","QuestionSectionDrawer","questionTypeState","setQuestionType","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { IconButton, Typography, Button } from '@material-ui/core';\nimport { Close } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nconst EditQuestionSectionForm = React.lazy(() =>\n\timport('app/views/components/CreateReadingTest/questionCreateForms/EditQuestionSectionForm'),\n);\nconst DrawerContent = styled.div`\n\twidth: auto;\n\tmin-width: 340px;\n\tmax-width: 600px;\n\tposition: relative;\n\tpadding: 20px;\n`;\n\nconst DrawerHeader = styled.div`\n\twidth: 100%;\n\tposition: relative;\n\tpadding: 20px;\n`;\n\nconst CloseDrawerBtn = styled(IconButton)`\n\tposition: absolute !important;\n\ttop: 5px;\n\tright: 5px;\n`;\n\nconst DrawerTitle = styled(Typography)``;\nconst DrawerFooter = styled.div`\n\tposition: relative;\n`;\n\nconst RenderForm = props => {\n\tconst {\n\t\tquestionType,\n\t\thandleChangeQuestionType,\n\t\tparagraphAmount,\n\t\ttoggleDrawer,\n\t\thandleAddQuestionSection,\n\t\tquestionSection,\n\t\thandleEditQuestionSection,\n\t} = props;\n\treturn (\n\t\t<React.Suspense fallback={<LoadingIndicator hasSpacing></LoadingIndicator>}>\n\t\t\t<EditQuestionSectionForm\n\t\t\t\tquestionType={questionType}\n\t\t\t\thandleAddQuestionSection={handleAddQuestionSection}\n\t\t\t\thandleEditQuestionSection={handleEditQuestionSection}\n\t\t\t\ttoggleDrawer={toggleDrawer}\n\t\t\t\tparagraphAmount={paragraphAmount}\n\t\t\t\thandleChangeQuestionType={handleChangeQuestionType}\n\t\t\t\tquestionSection={questionSection}\n\t\t\t/>\n\t\t</React.Suspense>\n\t);\n};\n\nfunction QuestionSectionDrawer(props) {\n\tconst {\n\t\ttoggleDrawer,\n\t\tquestionType,\n\t\tparagraphAmount,\n\t\thandleAddQuestionSection,\n\t\tquestionSection,\n\t\thandleEditQuestionSection,\n\t} = props;\n\tconst [questionTypeState, setQuestionType] = useState(questionType);\n\tconst handleChangeQuestionType = value => {\n\t\tsetQuestionType(value);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<DrawerHeader>\n\t\t\t\t<DrawerTitle variant=\"h6\" component=\"p\">\n\t\t\t\t\tAdd new question section\n\t\t\t\t</DrawerTitle>\n\t\t\t</DrawerHeader>\n\t\t\t<DrawerContent>\n\t\t\t\t<RenderForm\n\t\t\t\t\tquestionSection={questionSection}\n\t\t\t\t\thandleEditQuestionSection={handleEditQuestionSection}\n\t\t\t\t\thandleAddQuestionSection={handleAddQuestionSection}\n\t\t\t\t\ttoggleDrawer={toggleDrawer}\n\t\t\t\t\tparagraphAmount={paragraphAmount}\n\t\t\t\t\tquestionType={questionTypeState}\n\t\t\t\t\thandleChangeQuestionType={handleChangeQuestionType}\n\t\t\t\t></RenderForm>\n\t\t\t</DrawerContent>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default QuestionSectionDrawer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/EditQuestionSectionForm.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport { Button, Input, Grid, TextField } from '@material-ui/core';\nimport QuestionTypeDropdown from '../QuestionTypeDropdown';\nimport QuestionRender from 'app/views/pages/Test/QuestionRender';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport OptionsInput from './OptionsInput';\nimport getQuestionTypeInitialData from 'app/views/components/CreateReadingTest/questionCreateForms/getQuestionTypeInitialData';\nconst QuestionEditRender = React.lazy(() => import('../QuestionEditRender'));\nconst Wrapper = styled.div`\n\twidth: 100%;\n\theight: auto;\n`;\n\nfunction MatchHeadingQuestionForm(props) {\n  const {\n    questionType,\n    handleChangeQuestionType,\n    paragraphAmount,\n    toggleDrawer,\n    handleAddQuestionSection,\n    handleEditQuestionSection,\n    questionSection\n  } = props;\n  const initialValues = questionSection.data && questionSection.data.questionType ? questionSection.data : getQuestionTypeInitialData(questionType);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Formik, {\n    initialValues: initialValues,\n    enableReinitialize: true,\n    validate: values => {\n      const errors = {};\n\n      if (!values.instruction) {\n        errors.instruction = 'Required';\n      }\n\n      return errors;\n    },\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        if (questionSection.data && questionSection.data.questions) {\n          handleEditQuestionSection({\n            data: values,\n            idx: questionSection.idx\n          });\n        } else {\n          handleAddQuestionSection(values);\n        }\n\n        setSubmitting(false);\n      }, 400);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting,\n    setValues\n    /* and other goodies */\n\n  }) => {\n    const handleAddOptions = value => {\n      if (value.length === 0) {\n        return;\n      }\n\n      const newOptions = [...values.options];\n      newOptions.push(value);\n      setValues({ ...values,\n        options: newOptions\n      });\n    };\n\n    const handleEditOption = (value, idx) => {\n      const newOptions = [...values.options];\n      newOptions[idx] = value;\n      setValues({ ...values,\n        options: newOptions\n      });\n    };\n\n    const handleRemoveOption = idx => {\n      const newOptions = [...values.options];\n      newOptions.splice(idx, 1);\n      setValues({ ...values,\n        options: newOptions\n      });\n    };\n\n    const handleAddQuestion = questionType => {\n      const newQuestion = getQuestionTypeInitialData(questionType).questions[0];\n      const newQuestions = [...values.questions];\n      newQuestions.push(newQuestion);\n      setValues({ ...values,\n        questions: newQuestions\n      });\n    };\n\n    const handleRemoveQuestion = idx => {\n      const newQuestions = [...values.questions];\n      newQuestions.splice(idx, 1);\n      setValues({ ...values,\n        questions: newQuestions\n      });\n    };\n\n    const handleEditQuestion = (question, idx) => {\n      const newQuestions = [...values.questions];\n      newQuestions[idx] = question;\n      setValues({ ...values,\n        questions: newQuestions\n      });\n    };\n\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      spacing: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      inputProps: {\n        style: {\n          height: 'auto !important'\n        }\n      },\n      error: errors.instruction ? true : false,\n      fullWidth: true,\n      variant: \"outlined\",\n      label: \"Instruction\",\n      type: \"text\",\n      name: \"instruction\",\n      label: \"Instruction\",\n      onChange: handleChange,\n      onBlur: handleBlur,\n      value: values.instruction,\n      multiline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(QuestionTypeDropdown, {\n      questionType: questionType,\n      handleChangeQuestionType: handleChangeQuestionType,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 10\n      }\n    })), questionType !== 'fillInGap' && questionType !== 'listSelection' && questionType !== 'multipleChoice' && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(OptionsInput, {\n      questionType: questionType,\n      handleRemoveOption: handleRemoveOption,\n      handleEditOption: handleEditOption,\n      options: values.options,\n      handleAddOptions: handleAddOptions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(QuestionEditRender, {\n      paragraphAmount: paragraphAmount,\n      handleEditQuestion: handleEditQuestion,\n      handleAddQuestion: handleAddQuestion,\n      handleRemoveQuestion: handleRemoveQuestion,\n      questionSection: values,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      style: {\n        float: 'right'\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 10\n      }\n    }, questionSection.data ? 'Edit' : 'Add', isSubmitting && /*#__PURE__*/React.createElement(LoadingIndicator, {\n      width: \"15px\",\n      height: \"15px\",\n      size: \"15px\",\n      color: \"inherit\",\n      wrapperStyle: {\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: toggleDrawer(false),\n      style: {\n        float: 'right',\n        marginRight: '15px'\n      },\n      variant: \"outlined\",\n      color: \"default\",\n      disabled: isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 10\n      }\n    }, \"Cancel\"))));\n  }));\n}\n\nexport default MatchHeadingQuestionForm;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/EditQuestionSectionForm.js"],"names":["React","styled","Formik","Button","Input","Grid","TextField","QuestionTypeDropdown","QuestionRender","LoadingIndicator","OptionsInput","getQuestionTypeInitialData","QuestionEditRender","lazy","Wrapper","div","MatchHeadingQuestionForm","props","questionType","handleChangeQuestionType","paragraphAmount","toggleDrawer","handleAddQuestionSection","handleEditQuestionSection","questionSection","initialValues","data","values","errors","instruction","setSubmitting","setTimeout","questions","idx","touched","handleChange","handleBlur","handleSubmit","isSubmitting","setValues","handleAddOptions","value","length","newOptions","options","push","handleEditOption","handleRemoveOption","splice","handleAddQuestion","newQuestion","newQuestions","handleRemoveQuestion","handleEditQuestion","question","style","height","float","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport { Button, Input, Grid, TextField } from '@material-ui/core';\nimport QuestionTypeDropdown from '../QuestionTypeDropdown';\nimport QuestionRender from 'app/views/pages/Test/QuestionRender';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport OptionsInput from './OptionsInput';\nimport getQuestionTypeInitialData from 'app/views/components/CreateReadingTest/questionCreateForms/getQuestionTypeInitialData';\n\nconst QuestionEditRender = React.lazy(() => import('../QuestionEditRender'));\n\nconst Wrapper = styled.div`\n\twidth: 100%;\n\theight: auto;\n`;\n\nfunction MatchHeadingQuestionForm(props) {\n\tconst {\n\t\tquestionType,\n\t\thandleChangeQuestionType,\n\t\tparagraphAmount,\n\t\ttoggleDrawer,\n\t\thandleAddQuestionSection,\n\t\thandleEditQuestionSection,\n\t\tquestionSection,\n\t} = props;\n\n\tconst initialValues =\n\t\tquestionSection.data && questionSection.data.questionType\n\t\t\t? questionSection.data\n\t\t\t: getQuestionTypeInitialData(questionType);\n\n\treturn (\n\t\t<Wrapper>\n\t\t\t<Formik\n\t\t\t\tinitialValues={initialValues}\n\t\t\t\tenableReinitialize\n\t\t\t\tvalidate={values => {\n\t\t\t\t\tconst errors = {};\n\t\t\t\t\tif (!values.instruction) {\n\t\t\t\t\t\terrors.instruction = 'Required';\n\t\t\t\t\t}\n\t\t\t\t\treturn errors;\n\t\t\t\t}}\n\t\t\t\tonSubmit={(values, { setSubmitting }) => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tif (questionSection.data && questionSection.data.questions) {\n\t\t\t\t\t\t\thandleEditQuestionSection({ data: values, idx: questionSection.idx });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\thandleAddQuestionSection(values);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t\t}, 400);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\terrors,\n\t\t\t\t\ttouched,\n\t\t\t\t\thandleChange,\n\t\t\t\t\thandleBlur,\n\t\t\t\t\thandleSubmit,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tsetValues,\n\t\t\t\t\t/* and other goodies */\n\t\t\t\t}) => {\n\t\t\t\t\tconst handleAddOptions = value => {\n\t\t\t\t\t\tif (value.length === 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst newOptions = [...values.options];\n\t\t\t\t\t\tnewOptions.push(value);\n\t\t\t\t\t\tsetValues({ ...values, options: newOptions });\n\t\t\t\t\t};\n\n\t\t\t\t\tconst handleEditOption = (value, idx) => {\n\t\t\t\t\t\tconst newOptions = [...values.options];\n\t\t\t\t\t\tnewOptions[idx] = value;\n\t\t\t\t\t\tsetValues({ ...values, options: newOptions });\n\t\t\t\t\t};\n\n\t\t\t\t\tconst handleRemoveOption = idx => {\n\t\t\t\t\t\tconst newOptions = [...values.options];\n\t\t\t\t\t\tnewOptions.splice(idx, 1);\n\t\t\t\t\t\tsetValues({ ...values, options: newOptions });\n\t\t\t\t\t};\n\n\t\t\t\t\tconst handleAddQuestion = questionType => {\n\t\t\t\t\t\tconst newQuestion = getQuestionTypeInitialData(questionType).questions[0];\n\t\t\t\t\t\tconst newQuestions = [...values.questions];\n\t\t\t\t\t\tnewQuestions.push(newQuestion);\n\t\t\t\t\t\tsetValues({ ...values, questions: newQuestions });\n\t\t\t\t\t};\n\n\t\t\t\t\tconst handleRemoveQuestion = idx => {\n\t\t\t\t\t\tconst newQuestions = [...values.questions];\n\t\t\t\t\t\tnewQuestions.splice(idx, 1);\n\t\t\t\t\t\tsetValues({ ...values, questions: newQuestions });\n\t\t\t\t\t};\n\n\t\t\t\t\tconst handleEditQuestion = (question, idx) => {\n\t\t\t\t\t\tconst newQuestions = [...values.questions];\n\t\t\t\t\t\tnewQuestions[idx] = question;\n\t\t\t\t\t\tsetValues({ ...values, questions: newQuestions });\n\t\t\t\t\t};\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tinputProps={{ style: { height: 'auto !important' } }}\n\t\t\t\t\t\t\t\t\t\terror={errors.instruction ? true : false}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Instruction\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname=\"instruction\"\n\t\t\t\t\t\t\t\t\t\tlabel=\"Instruction\"\n\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\t\t\t\t\tvalue={values.instruction}\n\t\t\t\t\t\t\t\t\t\tmultiline\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<QuestionTypeDropdown\n\t\t\t\t\t\t\t\t\t\tquestionType={questionType}\n\t\t\t\t\t\t\t\t\t\thandleChangeQuestionType={handleChangeQuestionType}\n\t\t\t\t\t\t\t\t\t></QuestionTypeDropdown>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t{questionType !== 'fillInGap' &&\n\t\t\t\t\t\t\t\t\tquestionType !== 'listSelection' &&\n\t\t\t\t\t\t\t\t\tquestionType !== 'multipleChoice' && (\n\t\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t<OptionsInput\n\t\t\t\t\t\t\t\t\t\t\t\tquestionType={questionType}\n\t\t\t\t\t\t\t\t\t\t\t\thandleRemoveOption={handleRemoveOption}\n\t\t\t\t\t\t\t\t\t\t\t\thandleEditOption={handleEditOption}\n\t\t\t\t\t\t\t\t\t\t\t\toptions={values.options}\n\t\t\t\t\t\t\t\t\t\t\t\thandleAddOptions={handleAddOptions}\n\t\t\t\t\t\t\t\t\t\t\t></OptionsInput>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<QuestionEditRender\n\t\t\t\t\t\t\t\t\t\tparagraphAmount={paragraphAmount}\n\t\t\t\t\t\t\t\t\t\thandleEditQuestion={handleEditQuestion}\n\t\t\t\t\t\t\t\t\t\thandleAddQuestion={handleAddQuestion}\n\t\t\t\t\t\t\t\t\t\thandleRemoveQuestion={handleRemoveQuestion}\n\t\t\t\t\t\t\t\t\t\tquestionSection={values}\n\t\t\t\t\t\t\t\t\t></QuestionEditRender>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t\tstyle={{ float: 'right' }}\n\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{questionSection.data ? 'Edit' : 'Add'}\n\t\t\t\t\t\t\t\t\t\t{isSubmitting && (\n\t\t\t\t\t\t\t\t\t\t\t<LoadingIndicator\n\t\t\t\t\t\t\t\t\t\t\t\twidth=\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\theight=\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\tsize=\"15px\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t\t\t\t\t\t\twrapperStyle={{ marginLeft: '10px' }}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tonClick={toggleDrawer(false)}\n\t\t\t\t\t\t\t\t\t\tstyle={{ float: 'right', marginRight: '15px' }}\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\n\t\t\t\t\t\t\t\t\t\tdisabled={isSubmitting}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Formik>\n\t\t</Wrapper>\n\t);\n}\n\nexport default MatchHeadingQuestionForm;\n"]},"metadata":{},"sourceType":"module"}
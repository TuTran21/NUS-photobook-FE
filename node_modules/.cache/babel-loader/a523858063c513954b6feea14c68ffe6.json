{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/TestDetails/index.js\";\nimport React, { useEffect, memo } from 'react';\nimport { useMutation, useLazyQuery, useQuery } from '@apollo/client';\nimport TestQueries from 'graphql/queries/Test';\nimport styled from 'styled-components';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TestListItemSkeleton from 'app/views/components/Skeletons/TestListItemSkeleton';\nconst FeaturedTests = React.lazy(() => import('app/views/pages/LandingPage/components/FeaturedTests'));\nconst TestListItem = React.lazy(() => import('app/views/components/Test/TestListItem'));\nconst LeaderboardTabs = React.lazy(() => import('app/views/pages/TestDetails/components/LeaderboardTabs'));\nconst Wrapper = styled(Grid)``;\nconst TestInfoBlock = styled.div`\n\tmargin-top: -45px;\n`;\nconst OtherTestBlock = styled.div`\n\tmargin-top: 30px;\n`;\n\nconst RenderTestListItem = props => {\n  const {\n    addTest,\n    testId\n  } = props;\n  const {\n    loading,\n    data,\n    error\n  } = props.getTestRes;\n  const history = useHistory();\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(TestListItemSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minHeight: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }\n    }, \"Something went wrong, please try again later\"));\n  }\n\n  const {\n    test\n  } = data;\n  return /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(TestListItemSkeleton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(TestListItem, {\n    addTest: addTest,\n    hasTakeTestButtons: true,\n    history: history,\n    test: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }\n  }));\n};\n\nconst TestDetails = props => {\n  const {\n    history,\n    dispatch,\n    addTest\n  } = props;\n  const testId = props.match.params.testId;\n  const getTestRes = useQuery(TestQueries.GET_TEST, {\n    variables: {\n      id: testId\n    }\n  });\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    container: true,\n    justify: \"space-evenly\",\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(TestInfoBlock, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RenderTestListItem, {\n    testId: testId,\n    addTest: addTest,\n    getTestRes: getTestRes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(OtherTestBlock, {\n    className: \"card card-custom card-stretch gutter-b \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(FeaturedTests, {\n    lowPadding: true,\n    title: \"Other Tests\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    lg: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(LeaderboardTabs, {\n    testId: testId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default memo(TestDetails);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/TestDetails/index.js"],"names":["React","useEffect","memo","useMutation","useLazyQuery","useQuery","TestQueries","styled","LoadingIndicator","Grid","useHistory","TestListItemSkeleton","FeaturedTests","lazy","TestListItem","LeaderboardTabs","Wrapper","TestInfoBlock","div","OtherTestBlock","RenderTestListItem","props","addTest","testId","loading","data","error","getTestRes","history","minHeight","textAlign","test","TestDetails","dispatch","match","params","GET_TEST","variables","id"],"mappings":"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","sourcesContent":["import React, { useEffect, memo } from 'react';\nimport { useMutation, useLazyQuery, useQuery } from '@apollo/client';\nimport TestQueries from 'graphql/queries/Test';\nimport styled from 'styled-components';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { Grid } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\nimport TestListItemSkeleton from 'app/views/components/Skeletons/TestListItemSkeleton';\n\nconst FeaturedTests = React.lazy(() => import('app/views/pages/LandingPage/components/FeaturedTests'));\nconst TestListItem = React.lazy(() => import('app/views/components/Test/TestListItem'));\nconst LeaderboardTabs = React.lazy(() => import('app/views/pages/TestDetails/components/LeaderboardTabs'));\n\nconst Wrapper = styled(Grid)``;\n\nconst TestInfoBlock = styled.div`\n\tmargin-top: -45px;\n`;\n\nconst OtherTestBlock = styled.div`\n\tmargin-top: 30px;\n`;\n\nconst RenderTestListItem = props => {\n\tconst { addTest, testId } = props;\n\tconst { loading, data, error } = props.getTestRes;\n\tconst history = useHistory();\n\tif (loading) {\n\t\treturn <TestListItemSkeleton></TestListItemSkeleton>;\n\t}\n\n\tif (error) {\n\t\treturn (\n\t\t\t<div style={{ minHeight: '300px' }}>\n\t\t\t\t<p style={{ textAlign: 'center' }}>Something went wrong, please try again later</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tconst { test } = data;\n\treturn (\n\t\t<React.Suspense fallback={<TestListItemSkeleton />}>\n\t\t\t<TestListItem addTest={addTest} hasTakeTestButtons={true} history={history} test={test}></TestListItem>\n\t\t</React.Suspense>\n\t);\n};\n\nconst TestDetails = props => {\n\tconst { history, dispatch, addTest } = props;\n\tconst testId = props.match.params.testId;\n\tconst getTestRes = useQuery(TestQueries.GET_TEST, { variables: { id: testId } });\n\n\treturn (\n\t\t<Wrapper container justify=\"space-evenly\" spacing={8}>\n\t\t\t<Grid item xs={12} lg={7}>\n\t\t\t\t<TestInfoBlock>\n\t\t\t\t\t<RenderTestListItem testId={testId} addTest={addTest} getTestRes={getTestRes}></RenderTestListItem>\n\t\t\t\t</TestInfoBlock>\n\t\t\t\t<OtherTestBlock className=\"card card-custom card-stretch gutter-b \">\n\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator />}>\n\t\t\t\t\t\t<FeaturedTests lowPadding={true} title=\"Other Tests\"></FeaturedTests>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</OtherTestBlock>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} lg={3}>\n\t\t\t\t<LeaderboardTabs testId={testId}></LeaderboardTabs>\n\t\t\t</Grid>\n\t\t</Wrapper>\n\t);\n};\n\nexport default memo(TestDetails);\n"]},"metadata":{},"sourceType":"module"}
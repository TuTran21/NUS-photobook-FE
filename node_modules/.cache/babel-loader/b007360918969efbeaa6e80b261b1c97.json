{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph/index.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components'; // import ParagraphEditor from '../ParagraphEditor';\n\nimport { incrementAlphabet } from 'utils/utils';\nimport { IconButton } from '@material-ui/core';\nimport { Edit, Delete } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nconst ParagraphEditor = React.lazy(() => import('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/ParagraphEditor'));\nconst PassageParagraphWrapper = styled.div`\n\tposition: relative;\n\twidth: 100%;\n\t${props => props.isparagraphhover === 'true' ? `\n\t\t\toutline: 1px solid  rgba(0, 0, 0, 0.23);\n  ` : ``}\n`;\nconst PassageParagraph = styled.p`\n\tfont-size: 16px;\n\tmargin-bottom: 0px;\n\tstrong {\n\t\tfont-weight: 800;\n\t}\n`;\nconst EditParagraphBtWrapper = styled.div`\n\tposition: absolute;\n\tright: 0;\n\ttop: -40px;\n`;\nconst Wrapper = styled.div`\n\t${props => props.isquestionedit === 'false' && `\n\t\tmargin: 20px 0px 0px 0px;\n`}\n\t${props => props.isedit === 'true' && props.isquestionedit !== 'true' && `margin-bottom: 80px;\n`}\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst EditParagraphBtn = props => {\n  const {\n    handleChangeEditState,\n    handleRemove,\n    idx\n  } = props;\n  return /*#__PURE__*/React.createElement(EditParagraphBtWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => handleChangeEditState(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Edit, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    size: \"medium\",\n    onClick: () => handleRemove(idx),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Delete, {\n    color: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  })));\n};\n\nfunction CreateTestParagraph(props) {\n  const {\n    content,\n    idx,\n    handleConfirm,\n    handleRemove,\n    hasParagraphAlphabet = true,\n    labelStyle,\n    wrapperStyle,\n    isQuestionEdit = false\n  } = props;\n  const [isEdit, setIsEdit] = useState(false);\n  const [isParagraphHover, setIsParagraphHover] = useState(false);\n\n  const handleHoverParagraph = value => {\n    setIsParagraphHover(value);\n  };\n\n  const handleChangeEditState = value => {\n    setIsEdit(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    style: wrapperStyle,\n    isedit: isEdit.toString(),\n    isquestionedit: isQuestionEdit.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, !isEdit ? /*#__PURE__*/React.createElement(PassageParagraphWrapper, {\n    onMouseEnter: () => handleHoverParagraph(true),\n    onMouseLeave: () => handleHoverParagraph(false),\n    isparagraphhover: isParagraphHover.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PassageParagraph, {\n    style: labelStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 6\n    }\n  }, hasParagraphAlphabet && /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 32\n    }\n  }, incrementAlphabet(idx), \". \"), content), isParagraphHover && /*#__PURE__*/React.createElement(EditParagraphBtn, {\n    idx: idx,\n    handleRemove: handleRemove,\n    handleChangeEditState: handleChangeEditState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  })) : /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, hasParagraphAlphabet && /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 31\n    }\n  }, incrementAlphabet(idx), \". \"), /*#__PURE__*/React.createElement(ParagraphEditor, {\n    isQuestionEdit: isQuestionEdit,\n    handleConfirm: handleConfirm,\n    idx: idx,\n    handleChangeEditState: handleChangeEditState,\n    paragraphContent: content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 6\n    }\n  })));\n}\n\nexport default CreateTestParagraph;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph/index.js"],"names":["React","useState","styled","incrementAlphabet","IconButton","Edit","Delete","LoadingIndicator","ParagraphEditor","lazy","PassageParagraphWrapper","div","props","isparagraphhover","PassageParagraph","p","EditParagraphBtWrapper","Wrapper","isquestionedit","isedit","EditParagraphBtn","handleChangeEditState","handleRemove","idx","CreateTestParagraph","content","handleConfirm","hasParagraphAlphabet","labelStyle","wrapperStyle","isQuestionEdit","isEdit","setIsEdit","isParagraphHover","setIsParagraphHover","handleHoverParagraph","value","toString","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,oBAA7B;AACA,OAAOC,gBAAP,MAA6B,8CAA7B;AAEA,MAAMC,eAAe,GAAGR,KAAK,CAACS,IAAN,CAAW,MAClC,OAAO,8FAAP,CADuB,CAAxB;AAIA,MAAMC,uBAAuB,GAAGR,MAAM,CAACS,GAAI;AAC3C;AACA;AACA,GAAGC,KAAK,IACNA,KAAK,CAACC,gBAAN,KAA2B,MAA3B,GACI;AACN;AACA,GAHE,GAII,EAAE;AACR,CATA;AAWA,MAAMC,gBAAgB,GAAGZ,MAAM,CAACa,CAAE;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMC,sBAAsB,GAAGd,MAAM,CAACS,GAAI;AAC1C;AACA;AACA;AACA,CAJA;AAMA,MAAMM,OAAO,GAAGf,MAAM,CAACS,GAAI;AAC3B,GAAGC,KAAK,IACNA,KAAK,CAACM,cAAN,KAAyB,OAAzB,IACC;AACH;AACA,CAAE;AACF,GAAGN,KAAK,IACNA,KAAK,CAACO,MAAN,KAAiB,MAAjB,IACAP,KAAK,CAACM,cAAN,KAAyB,MADzB,IAEC;AACH,CAAE;AACF;AACA;AACA;AACA,CAdA;;AAgBA,MAAME,gBAAgB,GAAGR,KAAK,IAAI;AACjC,QAAM;AAAES,IAAAA,qBAAF;AAAyBC,IAAAA,YAAzB;AAAuCC,IAAAA;AAAvC,MAA+CX,KAArD;AACA,sBACC,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAE,MAAMS,qBAAqB,CAAC,IAAD,CAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAKC,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,QAAjB;AAA0B,IAAA,OAAO,EAAE,MAAMC,YAAY,CAACC,GAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CALD,CADD;AAWA,CAbD;;AAeA,SAASC,mBAAT,CAA6BZ,KAA7B,EAAoC;AACnC,QAAM;AACLa,IAAAA,OADK;AAELF,IAAAA,GAFK;AAGLG,IAAAA,aAHK;AAILJ,IAAAA,YAJK;AAKLK,IAAAA,oBAAoB,GAAG,IALlB;AAMLC,IAAAA,UANK;AAOLC,IAAAA,YAPK;AAQLC,IAAAA,cAAc,GAAG;AARZ,MASFlB,KATJ;AAUA,QAAM,CAACmB,MAAD,EAASC,SAAT,IAAsB/B,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACgC,gBAAD,EAAmBC,mBAAnB,IAA0CjC,QAAQ,CAAC,KAAD,CAAxD;;AAEA,QAAMkC,oBAAoB,GAAGC,KAAK,IAAI;AACrCF,IAAAA,mBAAmB,CAACE,KAAD,CAAnB;AACA,GAFD;;AAIA,QAAMf,qBAAqB,GAAGe,KAAK,IAAI;AACtCJ,IAAAA,SAAS,CAACI,KAAD,CAAT;AACA,GAFD;;AAIA,sBACC,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEP,YAAhB;AAA8B,IAAA,MAAM,EAAEE,MAAM,CAACM,QAAP,EAAtC;AAAyD,IAAA,cAAc,EAAEP,cAAc,CAACO,QAAf,EAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,CAACN,MAAD,gBACA,oBAAC,uBAAD;AACC,IAAA,YAAY,EAAE,MAAMI,oBAAoB,CAAC,IAAD,CADzC;AAEC,IAAA,YAAY,EAAE,MAAMA,oBAAoB,CAAC,KAAD,CAFzC;AAGC,IAAA,gBAAgB,EAAEF,gBAAgB,CAACI,QAAjB,EAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKC,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAET,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,oBAAoB,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASxB,iBAAiB,CAACoB,GAAD,CAA1B,OAD1B,EAEEE,OAFF,CALD,EASEQ,gBAAgB,iBAChB,oBAAC,gBAAD;AACC,IAAA,GAAG,EAAEV,GADN;AAEC,IAAA,YAAY,EAAED,YAFf;AAGC,IAAA,qBAAqB,EAAED,qBAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADA,gBAmBA,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,QAAQ,eAAE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEM,oBAAoB,iBAAI;AAAQ,IAAA,KAAK,EAAE;AAAEW,MAAAA,QAAQ,EAAE;AAAZ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCnC,iBAAiB,CAACoB,GAAD,CAAvD,OAD1B,eAEC,oBAAC,eAAD;AACC,IAAA,cAAc,EAAEO,cADjB;AAEC,IAAA,aAAa,EAAEJ,aAFhB;AAGC,IAAA,GAAG,EAAEH,GAHN;AAIC,IAAA,qBAAqB,EAAEF,qBAJxB;AAKC,IAAA,gBAAgB,EAAEI,OALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,CApBF,CADD;AAkCA;;AAED,eAAeD,mBAAf","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n// import ParagraphEditor from '../ParagraphEditor';\nimport { incrementAlphabet } from 'utils/utils';\nimport { IconButton } from '@material-ui/core';\nimport { Edit, Delete } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nconst ParagraphEditor = React.lazy(() =>\n\timport('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/ParagraphEditor'),\n);\n\nconst PassageParagraphWrapper = styled.div`\n\tposition: relative;\n\twidth: 100%;\n\t${props =>\n\t\tprops.isparagraphhover === 'true'\n\t\t\t? `\n\t\t\toutline: 1px solid  rgba(0, 0, 0, 0.23);\n  `\n\t\t\t: ``}\n`;\n\nconst PassageParagraph = styled.p`\n\tfont-size: 16px;\n\tmargin-bottom: 0px;\n\tstrong {\n\t\tfont-weight: 800;\n\t}\n`;\n\nconst EditParagraphBtWrapper = styled.div`\n\tposition: absolute;\n\tright: 0;\n\ttop: -40px;\n`;\n\nconst Wrapper = styled.div`\n\t${props =>\n\t\tprops.isquestionedit === 'false' &&\n\t\t`\n\t\tmargin: 20px 0px 0px 0px;\n`}\n\t${props =>\n\t\tprops.isedit === 'true' &&\n\t\tprops.isquestionedit !== 'true' &&\n\t\t`margin-bottom: 80px;\n`}\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n`;\n\nconst EditParagraphBtn = props => {\n\tconst { handleChangeEditState, handleRemove, idx } = props;\n\treturn (\n\t\t<EditParagraphBtWrapper>\n\t\t\t<IconButton onClick={() => handleChangeEditState(true)}>\n\t\t\t\t<Edit></Edit>\n\t\t\t</IconButton>\n\n\t\t\t<IconButton size=\"medium\" onClick={() => handleRemove(idx)}>\n\t\t\t\t<Delete color=\"error\"></Delete>\n\t\t\t</IconButton>\n\t\t</EditParagraphBtWrapper>\n\t);\n};\n\nfunction CreateTestParagraph(props) {\n\tconst {\n\t\tcontent,\n\t\tidx,\n\t\thandleConfirm,\n\t\thandleRemove,\n\t\thasParagraphAlphabet = true,\n\t\tlabelStyle,\n\t\twrapperStyle,\n\t\tisQuestionEdit = false,\n\t} = props;\n\tconst [isEdit, setIsEdit] = useState(false);\n\tconst [isParagraphHover, setIsParagraphHover] = useState(false);\n\n\tconst handleHoverParagraph = value => {\n\t\tsetIsParagraphHover(value);\n\t};\n\n\tconst handleChangeEditState = value => {\n\t\tsetIsEdit(value);\n\t};\n\n\treturn (\n\t\t<Wrapper style={wrapperStyle} isedit={isEdit.toString()} isquestionedit={isQuestionEdit.toString()}>\n\t\t\t{!isEdit ? (\n\t\t\t\t<PassageParagraphWrapper\n\t\t\t\t\tonMouseEnter={() => handleHoverParagraph(true)}\n\t\t\t\t\tonMouseLeave={() => handleHoverParagraph(false)}\n\t\t\t\t\tisparagraphhover={isParagraphHover.toString()}\n\t\t\t\t>\n\t\t\t\t\t<PassageParagraph style={labelStyle}>\n\t\t\t\t\t\t{hasParagraphAlphabet && <strong>{incrementAlphabet(idx)}. </strong>}\n\t\t\t\t\t\t{content}\n\t\t\t\t\t</PassageParagraph>\n\t\t\t\t\t{isParagraphHover && (\n\t\t\t\t\t\t<EditParagraphBtn\n\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\thandleRemove={handleRemove}\n\t\t\t\t\t\t\thandleChangeEditState={handleChangeEditState}\n\t\t\t\t\t\t></EditParagraphBtn>\n\t\t\t\t\t)}\n\t\t\t\t</PassageParagraphWrapper>\n\t\t\t) : (\n\t\t\t\t<React.Suspense fallback={<LoadingIndicator></LoadingIndicator>}>\n\t\t\t\t\t{hasParagraphAlphabet && <strong style={{ fontSize: '16px' }}>{incrementAlphabet(idx)}. </strong>}\n\t\t\t\t\t<ParagraphEditor\n\t\t\t\t\t\tisQuestionEdit={isQuestionEdit}\n\t\t\t\t\t\thandleConfirm={handleConfirm}\n\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\thandleChangeEditState={handleChangeEditState}\n\t\t\t\t\t\tparagraphContent={content}\n\t\t\t\t\t></ParagraphEditor>\n\t\t\t\t</React.Suspense>\n\t\t\t)}\n\t\t</Wrapper>\n\t);\n}\n\nexport default CreateTestParagraph;\n"]},"metadata":{},"sourceType":"module"}
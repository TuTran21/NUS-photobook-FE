{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/OptionsEdit.js\";\nimport React from 'react';\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@material-ui/core';\nimport { Edit, Done, Close, Delete } from '@material-ui/icons';\n\nfunction OptionsEdit(props) {\n  const {\n    option,\n    idx,\n    handleEditOption,\n    handleRemoveOption\n  } = props;\n  const [isEdit, changeIsEdit] = React.useState(false);\n  const [value, changeValue] = React.useState(option);\n\n  if (option !== value && !isEdit) {\n    changeValue(option);\n  }\n\n  const handleChange = value => {\n    changeValue(value);\n  };\n\n  const toggleEditState = value => {\n    changeIsEdit(value);\n  };\n\n  const handleConfirm = () => {\n    handleEditOption(value, idx);\n    toggleEditState(false);\n  };\n\n  const handleOnRemoveOption = () => {\n    handleRemoveOption(idx);\n  };\n\n  const handleCancel = () => {\n    changeValue(option);\n    changeIsEdit(false);\n  };\n\n  return /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: `question-option-${idx}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }\n  }, \"Question option \", idx + 1), /*#__PURE__*/React.createElement(OutlinedInput, {\n    disabled: !isEdit,\n    id: `question-option-${idx}`,\n    type: \"text\",\n    value: value,\n    onChange: event => handleChange(event.target.value),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 6\n      }\n    }, !isEdit ? /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Edit option\",\n      onClick: () => toggleEditState(!isEdit) // onMouseDown={handleMouseDownPassword}\n      ,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    })) : /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Edit option\",\n      onClick: () => handleConfirm() // onMouseDown={handleMouseDownPassword}\n      ,\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Done, {\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    })), isEdit && /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleCancel(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: () => handleOnRemoveOption(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Delete, {\n      color: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 8\n      }\n    }))),\n    labelWidth: 125,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }));\n}\n\nexport default OptionsEdit;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/OptionsEdit.js"],"names":["React","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Edit","Done","Close","Delete","OptionsEdit","props","option","idx","handleEditOption","handleRemoveOption","isEdit","changeIsEdit","useState","value","changeValue","handleChange","toggleEditState","handleConfirm","handleOnRemoveOption","handleCancel","event","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton } from '@material-ui/core';\nimport { Edit, Done, Close, Delete } from '@material-ui/icons';\n\nfunction OptionsEdit(props) {\n\tconst { option, idx, handleEditOption, handleRemoveOption } = props;\n\tconst [isEdit, changeIsEdit] = React.useState(false);\n\tconst [value, changeValue] = React.useState(option);\n\n\tif (option !== value && !isEdit) {\n\t\tchangeValue(option);\n\t}\n\n\tconst handleChange = value => {\n\t\tchangeValue(value);\n\t};\n\n\tconst toggleEditState = value => {\n\t\tchangeIsEdit(value);\n\t};\n\n\tconst handleConfirm = () => {\n\t\thandleEditOption(value, idx);\n\t\ttoggleEditState(false);\n\t};\n\n\tconst handleOnRemoveOption = () => {\n\t\thandleRemoveOption(idx);\n\t};\n\n\tconst handleCancel = () => {\n\t\tchangeValue(option);\n\t\tchangeIsEdit(false);\n\t};\n\treturn (\n\t\t<FormControl fullWidth variant=\"outlined\">\n\t\t\t<InputLabel htmlFor={`question-option-${idx}`}>Question option {idx + 1}</InputLabel>\n\t\t\t<OutlinedInput\n\t\t\t\tdisabled={!isEdit}\n\t\t\t\tid={`question-option-${idx}`}\n\t\t\t\ttype=\"text\"\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={event => handleChange(event.target.value)}\n\t\t\t\tendAdornment={\n\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t{!isEdit ? (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Edit option\"\n\t\t\t\t\t\t\t\tonClick={() => toggleEditState(!isEdit)}\n\t\t\t\t\t\t\t\t// onMouseDown={handleMouseDownPassword}\n\t\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Edit></Edit>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\taria-label=\"Edit option\"\n\t\t\t\t\t\t\t\tonClick={() => handleConfirm()}\n\t\t\t\t\t\t\t\t// onMouseDown={handleMouseDownPassword}\n\t\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Done color=\"primary\"></Done>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{isEdit && (\n\t\t\t\t\t\t\t<IconButton onClick={() => handleCancel()}>\n\t\t\t\t\t\t\t\t<Close color=\"error\"></Close>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<IconButton onClick={() => handleOnRemoveOption()}>\n\t\t\t\t\t\t\t<Delete color=\"error\"></Delete>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</InputAdornment>\n\t\t\t\t}\n\t\t\t\tlabelWidth={125}\n\t\t\t/>\n\t\t</FormControl>\n\t);\n}\n\nexport default OptionsEdit;\n"]},"metadata":{},"sourceType":"module"}
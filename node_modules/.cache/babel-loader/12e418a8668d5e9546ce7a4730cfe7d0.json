{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AuthPage/index.js\";\nimport React, { useState } from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport LoginForm from 'app/views/components/AuthForms/LoginForm';\nimport RegistrationForm from 'app/views/components/AuthForms/RegistrationForm';\nimport ForgotPasswordForm from 'app/views/components/AuthForms/ForgotPasswordForm';\nimport { toAbsoluteUrl } from 'app/themes/_metronic';\nimport 'app/themes/styles/login/login-1.scss';\nimport logo from 'app/assets/media/logos/300x300white.png';\nimport ResetPasswordForm from 'app/views/components/AuthForms/ResetPasswordForm';\nimport VerifyEmailForm from 'app/views/components/AuthForms/VerifyEmailForm';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport UserMutations from 'graphql/mutations/User';\nimport AuthQueries from 'graphql/queries/Auth';\nimport { Grid } from '@material-ui/core';\nexport default function AuthPage(props) {\n  const {\n    dispatch,\n    formTypeDefault = 'login'\n  } = props;\n  const [formType, changeFormType] = useState(formTypeDefault);\n  const [login, loginRes] = useLazyQuery(AuthQueries.LOG_IN);\n  const [register, registerRes] = useMutation(UserMutations.CREATE_USER);\n\n  const handleLogin = (email, password) => {\n    return login({\n      variables: {\n        email: email,\n        password: password\n      }\n    });\n  };\n\n  const handleRegister = (email, password, username, firstName, lastName, phone) => {\n    const parseStringPhone = phone.toString();\n    return register({\n      variables: {\n        user: {\n          email,\n          password,\n          username,\n          firstName,\n          lastName,\n          phone: parseStringPhone\n        }\n      }\n    });\n  };\n\n  const handleChangeFormType = (value = 'login') => {\n    changeFormType(value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-grid kt-grid--ver kt-grid--root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"kt_login\",\n    className: \"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"kt-grid__item kt-grid__item--fluid  kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }\n  }, formType === 'login' ? /*#__PURE__*/React.createElement(LoginForm, {\n    dispatch: dispatch,\n    loginRes: loginRes,\n    handleChangeFormType: handleChangeFormType,\n    handleLogin: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }) : null, formType === 'register' ? /*#__PURE__*/React.createElement(RegistrationForm, {\n    dispatch: dispatch,\n    registerRes: registerRes,\n    handleChangeFormType: handleChangeFormType,\n    handleRegister: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }) : null, formType === 'forgotPassword' ? /*#__PURE__*/React.createElement(ForgotPasswordForm, {\n    handleChangeFormType: handleChangeFormType,\n    dispatch: dispatch,\n    handleForgotPasswordPromise: props.handleForgotPasswordPromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }\n  }) : null))));\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AuthPage/index.js"],"names":["React","useState","Link","Redirect","Route","Switch","LoginForm","RegistrationForm","ForgotPasswordForm","toAbsoluteUrl","logo","ResetPasswordForm","VerifyEmailForm","useLazyQuery","useMutation","UserMutations","AuthQueries","Grid","AuthPage","props","dispatch","formTypeDefault","formType","changeFormType","login","loginRes","LOG_IN","register","registerRes","CREATE_USER","handleLogin","email","password","variables","handleRegister","username","firstName","lastName","phone","parseStringPhone","toString","user","handleChangeFormType","value","handleForgotPasswordPromise"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport LoginForm from 'app/views/components/AuthForms/LoginForm';\nimport RegistrationForm from 'app/views/components/AuthForms/RegistrationForm';\nimport ForgotPasswordForm from 'app/views/components/AuthForms/ForgotPasswordForm';\nimport { toAbsoluteUrl } from 'app/themes/_metronic';\nimport 'app/themes/styles/login/login-1.scss';\nimport logo from 'app/assets/media/logos/300x300white.png';\nimport ResetPasswordForm from 'app/views/components/AuthForms/ResetPasswordForm';\nimport VerifyEmailForm from 'app/views/components/AuthForms/VerifyEmailForm';\nimport { useLazyQuery, useMutation } from '@apollo/client';\nimport UserMutations from 'graphql/mutations/User';\nimport AuthQueries from 'graphql/queries/Auth';\nimport { Grid } from '@material-ui/core';\n\nexport default function AuthPage(props) {\n\tconst { dispatch, formTypeDefault = 'login' } = props;\n\tconst [formType, changeFormType] = useState(formTypeDefault);\n\tconst [login, loginRes] = useLazyQuery(AuthQueries.LOG_IN);\n\tconst [register, registerRes] = useMutation(UserMutations.CREATE_USER);\n\n\tconst handleLogin = (email, password) => {\n\t\treturn login({\n\t\t\tvariables: { email: email, password: password },\n\t\t});\n\t};\n\n\tconst handleRegister = (email, password, username, firstName, lastName, phone) => {\n\t\tconst parseStringPhone = phone.toString();\n\t\treturn register({\n\t\t\tvariables: {\n\t\t\t\tuser: {\n\t\t\t\t\temail,\n\t\t\t\t\tpassword,\n\t\t\t\t\tusername,\n\t\t\t\t\tfirstName,\n\t\t\t\t\tlastName,\n\t\t\t\t\tphone: parseStringPhone,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleChangeFormType = (value = 'login') => {\n\t\tchangeFormType(value);\n\t};\n\n\treturn (\n\t\t<div className=\"kt-grid kt-grid--ver kt-grid--root\">\n\t\t\t<div id=\"kt_login\" className=\"kt-grid kt-grid--hor kt-grid--root  kt-login kt-login--v1\">\n\t\t\t\t<div className=\"kt-grid__item kt-grid__item--fluid kt-grid kt-grid--desktop kt-grid--ver-desktop kt-grid--hor-tablet-and-mobile\">\n\t\t\t\t\t<div className=\"kt-grid__item kt-grid__item--fluid  kt-grid__item--order-tablet-and-mobile-1  kt-login__wrapper\">\n\t\t\t\t\t\t{formType === 'login' ? (\n\t\t\t\t\t\t\t<LoginForm\n\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\tloginRes={loginRes}\n\t\t\t\t\t\t\t\thandleChangeFormType={handleChangeFormType}\n\t\t\t\t\t\t\t\thandleLogin={handleLogin}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{formType === 'register' ? (\n\t\t\t\t\t\t\t<RegistrationForm\n\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\tregisterRes={registerRes}\n\t\t\t\t\t\t\t\thandleChangeFormType={handleChangeFormType}\n\t\t\t\t\t\t\t\thandleRegister={handleRegister}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{formType === 'forgotPassword' ? (\n\t\t\t\t\t\t\t<ForgotPasswordForm\n\t\t\t\t\t\t\t\thandleChangeFormType={handleChangeFormType}\n\t\t\t\t\t\t\t\tdispatch={dispatch}\n\t\t\t\t\t\t\t\thandleForgotPasswordPromise={props.handleForgotPasswordPromise}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
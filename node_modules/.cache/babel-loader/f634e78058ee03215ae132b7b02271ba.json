{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/EditableQuestions/EditableListSelection.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { questionIndexing, splitStringByBlank, incrementAlphabet } from 'utils/utils';\nimport QuestionNumber from 'app/views/components/Test/QuestionNumber';\nimport CustomCheckbox from 'app/views/components/Form/EngageCheckbox';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { Button } from '@material-ui/core';\nconst CreateTestParagraph = React.lazy(() => import('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph'));\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\nconst WordLimit = styled.strong`\n\tcolor: #ff0000;\n\tfont-style: italic;\n`;\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\nconst Question = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 15px;\n\tmargin-left: 15px;\n\t${props => props.isquestionedit === 'true' && `margin-bottom: 80px;\n\t`}\n\t${props => props.iseditable === 'false' && 'margin-bottom: 15px;'}\n`;\nconst ActionsWrapper = styled.div`\n\tposition: absolute;\n\ttop: -45px;\n\tright: 20px;\n\t@media (max-width: 400px) {\n\t\tleft: 20px;\n\t\ttop: -18px;\n\t}\n`;\n\nfunction EditableListSelection(props) {\n  const {\n    questionSection,\n    paragraphAmount,\n    questionRange,\n    handleOnChange,\n    sectionAnswer,\n    handleRemoveQuestion,\n    handleAddQuestion,\n    isEditable\n  } = props;\n  const {\n    instruction,\n    questions\n  } = questionSection;\n  let questionIndex = 0;\n\n  if (questionRange) {\n    questionIndex = questionIndexing(questionRange);\n  }\n\n  return /*#__PURE__*/React.createElement(QuestionContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(ActionsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }\n  }, handleAddQuestion && /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: () => handleAddQuestion('listSelection'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 6\n    }\n  }, \"Add question\")), /*#__PURE__*/React.createElement(QuestionInstruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, instruction), questions.map((question, idx) => {\n    questionIndex = questionIndex + 1;\n    const value = question.key === 'true' ? true : false;\n    const alphabetIndex = incrementAlphabet(idx);\n    return /*#__PURE__*/React.createElement(Question, {\n      key: idx,\n      isquestionedit: \"true\",\n      iseditable: isEditable.toString(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(QuestionNumber, {\n      hasAlphabet: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, alphabetIndex), /*#__PURE__*/React.createElement(QuestionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CustomCheckbox, {\n      isChecked: value,\n      title: !isEditable ? question.content : '',\n      onChange: e => handleOnChange(idx, e.toString(), question.content, question.multipleChoices),\n      disabled: !isEditable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    })), isEditable && /*#__PURE__*/React.createElement(React.Suspense, {\n      fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 34\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(CreateTestParagraph, {\n      handleConfirm: content => handleOnChange(idx, question.key, content, question.multipleChoices),\n      handleRemove: () => handleRemoveQuestion(idx),\n      isQuestionEdit: true,\n      hasParagraphAlphabet: false,\n      content: question.content,\n      wrapperStyle: {\n        flexGrow: 1\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })));\n  }));\n}\n\nexport default EditableListSelection;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/EditableQuestions/EditableListSelection.js"],"names":["React","styled","questionIndexing","splitStringByBlank","incrementAlphabet","QuestionNumber","CustomCheckbox","LoadingIndicator","Button","CreateTestParagraph","lazy","QuestionContent","div","QuestionInstruction","p","WordLimit","strong","QuestionSelect","span","Question","props","isquestionedit","iseditable","ActionsWrapper","EditableListSelection","questionSection","paragraphAmount","questionRange","handleOnChange","sectionAnswer","handleRemoveQuestion","handleAddQuestion","isEditable","instruction","questions","questionIndex","map","question","idx","value","key","alphabetIndex","toString","content","e","multipleChoices","flexGrow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { questionIndexing, splitStringByBlank, incrementAlphabet } from 'utils/utils';\nimport QuestionNumber from 'app/views/components/Test/QuestionNumber';\nimport CustomCheckbox from 'app/views/components/Form/EngageCheckbox';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nimport { Button } from '@material-ui/core';\n\nconst CreateTestParagraph = React.lazy(() =>\n\timport('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/Paragraph'),\n);\n\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\n\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\n\nconst WordLimit = styled.strong`\n\tcolor: #ff0000;\n\tfont-style: italic;\n`;\n\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\n\nconst Question = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tmargin-bottom: 15px;\n\tmargin-left: 15px;\n\t${props =>\n\t\tprops.isquestionedit === 'true' &&\n\t\t`margin-bottom: 80px;\n\t`}\n\t${props => props.iseditable === 'false' && 'margin-bottom: 15px;'}\n`;\n\nconst ActionsWrapper = styled.div`\n\tposition: absolute;\n\ttop: -45px;\n\tright: 20px;\n\t@media (max-width: 400px) {\n\t\tleft: 20px;\n\t\ttop: -18px;\n\t}\n`;\n\nfunction EditableListSelection(props) {\n\tconst {\n\t\tquestionSection,\n\t\tparagraphAmount,\n\t\tquestionRange,\n\t\thandleOnChange,\n\t\tsectionAnswer,\n\t\thandleRemoveQuestion,\n\t\thandleAddQuestion,\n\t\tisEditable,\n\t} = props;\n\n\tconst { instruction, questions } = questionSection;\n\n\tlet questionIndex = 0;\n\tif (questionRange) {\n\t\tquestionIndex = questionIndexing(questionRange);\n\t}\n\treturn (\n\t\t<QuestionContent>\n\t\t\t<ActionsWrapper>\n\t\t\t\t{handleAddQuestion && (\n\t\t\t\t\t<Button variant=\"outlined\" color=\"primary\" onClick={() => handleAddQuestion('listSelection')}>\n\t\t\t\t\t\tAdd question\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</ActionsWrapper>\n\t\t\t<QuestionInstruction>{instruction}</QuestionInstruction>\n\n\t\t\t{questions.map((question, idx) => {\n\t\t\t\tquestionIndex = questionIndex + 1;\n\t\t\t\tconst value = question.key === 'true' ? true : false;\n\t\t\t\tconst alphabetIndex = incrementAlphabet(idx);\n\t\t\t\treturn (\n\t\t\t\t\t<Question key={idx} isquestionedit=\"true\" iseditable={isEditable.toString()}>\n\t\t\t\t\t\t<QuestionNumber hasAlphabet>{alphabetIndex}</QuestionNumber>\n\t\t\t\t\t\t<QuestionSelect>\n\t\t\t\t\t\t\t<CustomCheckbox\n\t\t\t\t\t\t\t\tisChecked={value}\n\t\t\t\t\t\t\t\ttitle={!isEditable ? question.content : ''}\n\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\thandleOnChange(idx, e.toString(), question.content, question.multipleChoices)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tdisabled={!isEditable}\n\t\t\t\t\t\t\t></CustomCheckbox>\n\t\t\t\t\t\t</QuestionSelect>\n\t\t\t\t\t\t{isEditable && (\n\t\t\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator></LoadingIndicator>}>\n\t\t\t\t\t\t\t\t<CreateTestParagraph\n\t\t\t\t\t\t\t\t\thandleConfirm={content =>\n\t\t\t\t\t\t\t\t\t\thandleOnChange(idx, question.key, content, question.multipleChoices)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\thandleRemove={() => handleRemoveQuestion(idx)}\n\t\t\t\t\t\t\t\t\tisQuestionEdit={true}\n\t\t\t\t\t\t\t\t\thasParagraphAlphabet={false}\n\t\t\t\t\t\t\t\t\tcontent={question.content}\n\t\t\t\t\t\t\t\t\twrapperStyle={{ flexGrow: 1 }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</React.Suspense>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Question>\n\t\t\t\t);\n\t\t\t})}\n\t\t</QuestionContent>\n\t);\n}\n\nexport default EditableListSelection;\n"]},"metadata":{},"sourceType":"module"}
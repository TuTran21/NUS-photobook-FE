{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/index.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nconst InfoColumn = React.lazy(() => import('app/views/pages/UserProfile/components/ProfileInfoColumn'));\nconst ProfileMultiPurposeColumn = React.lazy(() => import('./components/ProfileMultiPurposeColumn'));\n\nfunction UserProfile(props) {\n  const {\n    auth\n  } = props;\n  const userId = props.match.params.userId;\n  const profileRes = useQuery(UserQueries.GET_USER, {\n    variables: {\n      id: userId\n    },\n    pollInterval: 10000\n  });\n  const overallScoreRes = useQuery(UserQueries.GET_OVERALL_SCORE, {\n    variables: {\n      userId: userId\n    }\n  });\n\n  if (profileRes.loading) {\n    return /*#__PURE__*/React.createElement(LoadingIndicator, {\n      hasSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 10\n      }\n    });\n  }\n\n  if (profileRes.error) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }\n    }, \"Something went wrong, please try again later.\");\n  }\n\n  if (!profileRes.data && !profileRes.loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 10\n      }\n    }, \"Something went wrong, please try again later.\");\n  }\n\n  const user = profileRes.data.user.user;\n  const isOwner = profileRes.data.user.isOwner;\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      wrapperStyle: {\n        marginTop: '30px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InfoColumn, {\n    user: user,\n    refetchProfile: profileRes.refetch,\n    overallScoreRes: overallScoreRes,\n    isOwner: isOwner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 31\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProfileMultiPurposeColumn, {\n    refetchProfile: profileRes.refetch,\n    userId: userId,\n    user: user,\n    isOwner: isOwner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 6\n    }\n  }))));\n}\n\nexport default UserProfile;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/UserProfile/index.js"],"names":["React","Grid","useQuery","UserQueries","LoadingIndicator","InfoColumn","lazy","ProfileMultiPurposeColumn","UserProfile","props","auth","userId","match","params","profileRes","GET_USER","variables","id","pollInterval","overallScoreRes","GET_OVERALL_SCORE","loading","error","data","user","isOwner","marginTop","refetch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nconst InfoColumn = React.lazy(() => import('app/views/pages/UserProfile/components/ProfileInfoColumn'));\nconst ProfileMultiPurposeColumn = React.lazy(() => import('./components/ProfileMultiPurposeColumn'));\n\nfunction UserProfile(props) {\n\tconst { auth } = props;\n\n\tconst userId = props.match.params.userId;\n\tconst profileRes = useQuery(UserQueries.GET_USER, {\n\t\tvariables: { id: userId },\n\t\tpollInterval: 10000,\n\t});\n\tconst overallScoreRes = useQuery(UserQueries.GET_OVERALL_SCORE, {\n\t\tvariables: { userId: userId },\n\t});\n\n\tif (profileRes.loading) {\n\t\treturn <LoadingIndicator hasSpacing={true}></LoadingIndicator>;\n\t}\n\n\tif (profileRes.error) {\n\t\treturn <div>Something went wrong, please try again later.</div>;\n\t}\n\n\tif (!profileRes.data && !profileRes.loading) {\n\t\treturn <div>Something went wrong, please try again later.</div>;\n\t}\n\n\tconst user = profileRes.data.user.user;\n\tconst isOwner = profileRes.data.user.isOwner;\n\treturn (\n\t\t<Grid container>\n\t\t\t<Grid item xs={12} md={4}>\n\t\t\t\t<React.Suspense fallback={<LoadingIndicator wrapperStyle={{ marginTop: '30px' }}></LoadingIndicator>}>\n\t\t\t\t\t<InfoColumn\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\trefetchProfile={profileRes.refetch}\n\t\t\t\t\t\toverallScoreRes={overallScoreRes}\n\t\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\t></InfoColumn>\n\t\t\t\t</React.Suspense>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} md={8}>\n\t\t\t\t<React.Suspense fallback={<LoadingIndicator></LoadingIndicator>}>\n\t\t\t\t\t<ProfileMultiPurposeColumn\n\t\t\t\t\t\trefetchProfile={profileRes.refetch}\n\t\t\t\t\t\tuserId={userId}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t\tisOwner={isOwner}\n\t\t\t\t\t></ProfileMultiPurposeColumn>\n\t\t\t\t</React.Suspense>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nexport default UserProfile;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/QuestionTypes/MultipleChoice.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport CustomRadioButton from '../../Form/EngageRadioButtons/index';\nimport QuestionNumber from '../QuestionNumber';\nimport { incrementAlphabet, questionIndexing } from 'utils/utils';\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\nconst Question = styled.div``;\n\nfunction MultipleChoice(props) {\n  const {\n    questionSection,\n    paragraphAmount,\n    questionRange,\n    handleOnChange,\n    sectionAnswer\n  } = props;\n  const {\n    instruction,\n    questionType,\n    questions\n  } = questionSection;\n  let questionIndex = questionIndexing(questionRange);\n  let valueFormat = [];\n\n  if (sectionAnswer) {\n    sectionAnswer.answers.map(answer => {\n      valueFormat.push({\n        key: answer.id,\n        value: answer.value\n      });\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(QuestionContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(QuestionInstruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, instruction), questions.map((question, idx) => {\n    questionIndex = questionIndex + 1;\n    const {\n      multipleChoices\n    } = question;\n\n    if (!multipleChoices) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 14\n        }\n      }, \"Something went wrong, please try again later\");\n    }\n\n    let optionFormat = [];\n    multipleChoices.map((option, idx) => optionFormat.push({\n      key: idx,\n      label: option\n    }));\n    const value = valueFormat.find(answer => answer.id === idx);\n    return /*#__PURE__*/React.createElement(Question, {\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(QuestionNumber, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }\n    }, questionIndex), /*#__PURE__*/React.createElement(QuestionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 8\n      }\n    }, question.content, /*#__PURE__*/React.createElement(CustomRadioButton, {\n      value: value,\n      hasAlphabetLabel: true,\n      flexvertical: true,\n      onChange: e => handleOnChange(idx, e ? e.label : ''),\n      holderStyle: {\n        marginTop: '15px',\n        marginLeft: '15px'\n      },\n      options: optionFormat,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    })));\n  })));\n}\n\nexport default MultipleChoice;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/QuestionTypes/MultipleChoice.js"],"names":["React","styled","CustomRadioButton","QuestionNumber","incrementAlphabet","questionIndexing","QuestionContent","div","QuestionInstruction","p","QuestionSelect","span","Question","MultipleChoice","props","questionSection","paragraphAmount","questionRange","handleOnChange","sectionAnswer","instruction","questionType","questions","questionIndex","valueFormat","answers","map","answer","push","key","id","value","question","idx","multipleChoices","optionFormat","option","label","find","content","e","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport CustomRadioButton from '../../Form/EngageRadioButtons/index';\nimport QuestionNumber from '../QuestionNumber';\nimport { incrementAlphabet, questionIndexing } from 'utils/utils';\n\nconst QuestionContent = styled.div`\n\tpadding: 0px 5px;\n`;\n\nconst QuestionInstruction = styled.p`\n\tmargin-top: 20px;\n`;\n\nconst QuestionSelect = styled.span`\n\tmargin: 0px 5px;\n`;\n\nconst Question = styled.div``;\n\nfunction MultipleChoice(props) {\n\tconst { questionSection, paragraphAmount, questionRange, handleOnChange, sectionAnswer } = props;\n\tconst { instruction, questionType, questions } = questionSection;\n\n\tlet questionIndex = questionIndexing(questionRange);\n\n\tlet valueFormat = [];\n\n\tif (sectionAnswer) {\n\t\tsectionAnswer.answers.map(answer => {\n\t\t\tvalueFormat.push({ key: answer.id, value: answer.value });\n\t\t});\n\t}\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<QuestionContent>\n\t\t\t\t<QuestionInstruction>{instruction}</QuestionInstruction>\n\n\t\t\t\t{questions.map((question, idx) => {\n\t\t\t\t\tquestionIndex = questionIndex + 1;\n\t\t\t\t\tconst { multipleChoices } = question;\n\n\t\t\t\t\tif (!multipleChoices) {\n\t\t\t\t\t\treturn <div>Something went wrong, please try again later</div>;\n\t\t\t\t\t}\n\t\t\t\t\tlet optionFormat = [];\n\t\t\t\t\tmultipleChoices.map((option, idx) => optionFormat.push({ key: idx, label: option }));\n\t\t\t\t\tconst value = valueFormat.find(answer => answer.id === idx);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Question key={idx}>\n\t\t\t\t\t\t\t<QuestionNumber>{questionIndex}</QuestionNumber>\n\t\t\t\t\t\t\t<QuestionSelect>\n\t\t\t\t\t\t\t\t{question.content}\n\t\t\t\t\t\t\t\t<CustomRadioButton\n\t\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\t\thasAlphabetLabel\n\t\t\t\t\t\t\t\t\tflexvertical\n\t\t\t\t\t\t\t\t\tonChange={e => handleOnChange(idx, e ? e.label : '')}\n\t\t\t\t\t\t\t\t\tholderStyle={{\n\t\t\t\t\t\t\t\t\t\tmarginTop: '15px',\n\t\t\t\t\t\t\t\t\t\tmarginLeft: '15px',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\toptions={optionFormat}\n\t\t\t\t\t\t\t\t></CustomRadioButton>\n\t\t\t\t\t\t\t</QuestionSelect>\n\t\t\t\t\t\t</Question>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</QuestionContent>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default MultipleChoice;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/AuthForms/VerifyEmailForm.js\";\nimport React, { Component, useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport clsx from 'clsx';\nimport { withSnackbar } from 'notistack';\nimport * as _ from 'lodash';\nimport styled, { css } from 'styled-components';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'; // import * as auth from '../../store/ducks/auth.duck';\n// import { requestPassword } from '../../crud/auth.crud';\n\nconst LoadingIndicator = styled.svg`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-left: 0 !important;\n\theight: 50px;\n\twidth: 50px;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\t${props => props.loading === 'false' && css`\n\t\t\tdisplay: none;\n\t\t`};\n`;\nconst SuccessIndicator = styled(CheckIcon)`\n\tdisplay: none !important;\n\twidth: 50px !important;\n\theight: 50px !important;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\t${props => props.isSuccess === 'true' && props.loading === 'false' && css`\n\t\t\tdisplay: block !important;\n\t\t`};\n`;\nconst FailureIndicator = styled(ErrorOutlineIcon)`\n\tdisplay: none !important;\n\twidth: 50px !important;\n\theight: 50px !important;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\tcolor: rgb(220, 0, 78);\n\t${props => props.isSuccess === 'false' && props.loading === 'false' && css`\n\t\t\tdisplay: block !important;\n\t\t`};\n`;\nconst BodyWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100%;\n\tmin-height: 400px;\n`;\n\nfunction VerifyEmailForm(props) {\n  const {\n    intl,\n    handleVerifyEmailPromise\n  } = props;\n  let {\n    token\n  } = useParams();\n  const [isSuccess, setIsSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(intl.formatMessage({\n    id: 'PLEASE_WAIT'\n  }));\n\n  const enableLoading = () => {\n    setLoading(true);\n  };\n\n  const disableLoading = () => {\n    setLoading(false);\n  };\n\n  const handleVerify = () => {\n    enableLoading();\n    handleVerifyEmailPromise(token).then(res => {\n      verifySuccess(res);\n    }).catch(err => {\n      verifyError(err);\n    });\n  };\n\n  const verifyError = err => {\n    disableLoading();\n    let message = '';\n\n    switch (err.code) {\n      case 400:\n        message = 'TOKEN_EXPIRED';\n        break;\n\n      case 404:\n        message = 'AUTH.VALIDATION.USER_NOT_FOUND';\n        break;\n\n      case 500:\n        message = 'SERVER_INTERNAL_ERROR';\n        break;\n\n      default:\n        message = 'TRY_AGAIN_LATER';\n        break;\n    }\n\n    setStatus(intl.formatMessage({\n      id: message\n    }));\n  };\n\n  const verifySuccess = res => {\n    disableLoading();\n    setStatus(intl.formatMessage({\n      id: 'AUTH.VERIFY_EMAIL.SUCCESS'\n    }));\n    setIsSuccess(true);\n  };\n\n  useEffect(() => {\n    handleVerify();\n  }, []);\n\n  if (isSuccess) {\n    setTimeout(() => {\n      props.history.push('/auth');\n    }, 3000);\n  }\n\n  return /*#__PURE__*/React.createElement(BodyWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"AUTH.VERIFY_EMAIL.TITLE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(LoadingIndicator, {\n    loading: loading.toString(),\n    className: \"spinner\",\n    viewBox: \"0 0 50 50\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: \"path\",\n    cx: \"25\",\n    cy: \"25\",\n    r: \"20\",\n    fill: \"none\",\n    strokeWidth: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(SuccessIndicator, {\n    loading: loading.toString(),\n    color: \"secondary\",\n    isSuccess: isSuccess.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(FailureIndicator, {\n    loading: loading.toString(),\n    isSuccess: isSuccess.toString(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 4\n    }\n  }, status));\n}\n\nexport default injectIntl(VerifyEmailForm);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/AuthForms/VerifyEmailForm.js"],"names":["React","Component","useState","useEffect","Formik","connect","TextField","Link","Redirect","useParams","FormattedMessage","injectIntl","clsx","withSnackbar","_","styled","css","CheckIcon","ErrorOutlineIcon","LoadingIndicator","svg","props","loading","SuccessIndicator","isSuccess","FailureIndicator","BodyWrapper","div","VerifyEmailForm","intl","handleVerifyEmailPromise","token","setIsSuccess","setLoading","status","setStatus","formatMessage","id","enableLoading","disableLoading","handleVerify","then","res","verifySuccess","catch","err","verifyError","message","code","setTimeout","history","push","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,QAA0C,kBAA1C;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAO,KAAKC,CAAZ,MAAmB,QAAnB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,gBAAP,MAA6B,iCAA7B,C,CACA;AACA;;AAEA,MAAMC,gBAAgB,GAAGJ,MAAM,CAACK,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAGC,KAAK,IACNA,KAAK,CAACC,OAAN,KAAkB,OAAlB,IACAN,GAAI;AACN;AACA,GAAI;AACJ,CAdA;AAgBA,MAAMO,gBAAgB,GAAGR,MAAM,CAACE,SAAD,CAAY;AAC3C;AACA;AACA;AACA;AACA;AACA,GAAGI,KAAK,IACNA,KAAK,CAACG,SAAN,KAAoB,MAApB,IACAH,KAAK,CAACC,OAAN,KAAkB,OADlB,IAEAN,GAAI;AACN;AACA,GAAI;AACJ,CAZA;AAcA,MAAMS,gBAAgB,GAAGV,MAAM,CAACG,gBAAD,CAAmB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA,GAAGG,KAAK,IACNA,KAAK,CAACG,SAAN,KAAoB,OAApB,IACAH,KAAK,CAACC,OAAN,KAAkB,OADlB,IAEAN,GAAI;AACN;AACA,GAAI;AACJ,CAbA;AAeA,MAAMU,WAAW,GAAGX,MAAM,CAACY,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;;AASA,SAASC,eAAT,CAAyBP,KAAzB,EAAgC;AAC/B,QAAM;AAAEQ,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAqCT,KAA3C;AACA,MAAI;AAAEU,IAAAA;AAAF,MAAYtB,SAAS,EAAzB;AACA,QAAM,CAACe,SAAD,EAAYQ,YAAZ,IAA4B9B,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACoB,OAAD,EAAUW,UAAV,IAAwB/B,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CACnC2B,IAAI,CAACO,aAAL,CAAmB;AAClBC,IAAAA,EAAE,EAAE;AADc,GAAnB,CADmC,CAApC;;AAMA,QAAMC,aAAa,GAAG,MAAM;AAC3BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,GAFD;;AAIA,QAAMM,cAAc,GAAG,MAAM;AAC5BN,IAAAA,UAAU,CAAC,KAAD,CAAV;AACA,GAFD;;AAIA,QAAMO,YAAY,GAAG,MAAM;AAC1BF,IAAAA,aAAa;AACbR,IAAAA,wBAAwB,CAACC,KAAD,CAAxB,CACEU,IADF,CACOC,GAAG,IAAI;AACZC,MAAAA,aAAa,CAACD,GAAD,CAAb;AACA,KAHF,EAIEE,KAJF,CAIQC,GAAG,IAAI;AACbC,MAAAA,WAAW,CAACD,GAAD,CAAX;AACA,KANF;AAOA,GATD;;AAWA,QAAMC,WAAW,GAAGD,GAAG,IAAI;AAC1BN,IAAAA,cAAc;AACd,QAAIQ,OAAO,GAAG,EAAd;;AACA,YAAQF,GAAG,CAACG,IAAZ;AACC,WAAK,GAAL;AACCD,QAAAA,OAAO,GAAG,eAAV;AACA;;AACD,WAAK,GAAL;AACCA,QAAAA,OAAO,GAAG,gCAAV;AACA;;AACD,WAAK,GAAL;AACCA,QAAAA,OAAO,GAAG,uBAAV;AACA;;AACD;AACCA,QAAAA,OAAO,GAAG,iBAAV;AACA;AAZF;;AAcAZ,IAAAA,SAAS,CACRN,IAAI,CAACO,aAAL,CAAmB;AAClBC,MAAAA,EAAE,EAAEU;AADc,KAAnB,CADQ,CAAT;AAKA,GAtBD;;AAwBA,QAAMJ,aAAa,GAAGD,GAAG,IAAI;AAC5BH,IAAAA,cAAc;AACdJ,IAAAA,SAAS,CACRN,IAAI,CAACO,aAAL,CAAmB;AAClBC,MAAAA,EAAE,EAAE;AADc,KAAnB,CADQ,CAAT;AAKAL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,GARD;;AAUA7B,EAAAA,SAAS,CAAC,MAAM;AACfqC,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIhB,SAAJ,EAAe;AACdyB,IAAAA,UAAU,CAAC,MAAM;AAChB5B,MAAAA,KAAK,CAAC6B,OAAN,CAAcC,IAAd,CAAmB,OAAnB;AACA,KAFS,EAEP,IAFO,CAAV;AAGA;;AAED,sBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD,eAIC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE7B,OAAO,CAAC8B,QAAR,EAA3B;AAA+C,IAAA,SAAS,EAAC,SAAzD;AAAmE,IAAA,OAAO,EAAC,WAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,EAAE,EAAC,IAA5B;AAAiC,IAAA,EAAE,EAAC,IAApC;AAAyC,IAAA,CAAC,EAAC,IAA3C;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,WAAW,EAAC,GAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAJD,eAOC,oBAAC,gBAAD;AACC,IAAA,OAAO,EAAE9B,OAAO,CAAC8B,QAAR,EADV;AAEC,IAAA,KAAK,EAAC,WAFP;AAGC,IAAA,SAAS,EAAE5B,SAAS,CAAC4B,QAAV,EAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,eAYC,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE9B,OAAO,CAAC8B,QAAR,EAA3B;AAA+C,IAAA,SAAS,EAAE5B,SAAS,CAAC4B,QAAV,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZD,eAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,MAAL,CAbD,CADD;AAiBA;;AAED,eAAevB,UAAU,CAACiB,eAAD,CAAzB","sourcesContent":["import React, { Component, useState, useEffect } from 'react';\nimport { Formik } from 'formik';\nimport { connect } from 'react-redux';\nimport { TextField } from '@material-ui/core';\nimport { Link, Redirect, useParams } from 'react-router-dom';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport clsx from 'clsx';\nimport { withSnackbar } from 'notistack';\nimport * as _ from 'lodash';\nimport styled, { css } from 'styled-components';\nimport CheckIcon from '@material-ui/icons/Check';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n// import * as auth from '../../store/ducks/auth.duck';\n// import { requestPassword } from '../../crud/auth.crud';\n\nconst LoadingIndicator = styled.svg`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tmargin-left: 0 !important;\n\theight: 50px;\n\twidth: 50px;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\t${props =>\n\t\tprops.loading === 'false' &&\n\t\tcss`\n\t\t\tdisplay: none;\n\t\t`};\n`;\n\nconst SuccessIndicator = styled(CheckIcon)`\n\tdisplay: none !important;\n\twidth: 50px !important;\n\theight: 50px !important;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\t${props =>\n\t\tprops.isSuccess === 'true' &&\n\t\tprops.loading === 'false' &&\n\t\tcss`\n\t\t\tdisplay: block !important;\n\t\t`};\n`;\n\nconst FailureIndicator = styled(ErrorOutlineIcon)`\n\tdisplay: none !important;\n\twidth: 50px !important;\n\theight: 50px !important;\n\tmargin-top: 40px;\n\tmargin-bottom: 40px;\n\tcolor: rgb(220, 0, 78);\n\t${props =>\n\t\tprops.isSuccess === 'false' &&\n\t\tprops.loading === 'false' &&\n\t\tcss`\n\t\t\tdisplay: block !important;\n\t\t`};\n`;\n\nconst BodyWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100%;\n\tmin-height: 400px;\n`;\n\nfunction VerifyEmailForm(props) {\n\tconst { intl, handleVerifyEmailPromise } = props;\n\tlet { token } = useParams();\n\tconst [isSuccess, setIsSuccess] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\tconst [status, setStatus] = useState(\n\t\tintl.formatMessage({\n\t\t\tid: 'PLEASE_WAIT',\n\t\t}),\n\t);\n\n\tconst enableLoading = () => {\n\t\tsetLoading(true);\n\t};\n\n\tconst disableLoading = () => {\n\t\tsetLoading(false);\n\t};\n\n\tconst handleVerify = () => {\n\t\tenableLoading();\n\t\thandleVerifyEmailPromise(token)\n\t\t\t.then(res => {\n\t\t\t\tverifySuccess(res);\n\t\t\t})\n\t\t\t.catch(err => {\n\t\t\t\tverifyError(err);\n\t\t\t});\n\t};\n\n\tconst verifyError = err => {\n\t\tdisableLoading();\n\t\tlet message = '';\n\t\tswitch (err.code) {\n\t\t\tcase 400:\n\t\t\t\tmessage = 'TOKEN_EXPIRED';\n\t\t\t\tbreak;\n\t\t\tcase 404:\n\t\t\t\tmessage = 'AUTH.VALIDATION.USER_NOT_FOUND';\n\t\t\t\tbreak;\n\t\t\tcase 500:\n\t\t\t\tmessage = 'SERVER_INTERNAL_ERROR';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tmessage = 'TRY_AGAIN_LATER';\n\t\t\t\tbreak;\n\t\t}\n\t\tsetStatus(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: message,\n\t\t\t}),\n\t\t);\n\t};\n\n\tconst verifySuccess = res => {\n\t\tdisableLoading();\n\t\tsetStatus(\n\t\t\tintl.formatMessage({\n\t\t\t\tid: 'AUTH.VERIFY_EMAIL.SUCCESS',\n\t\t\t}),\n\t\t);\n\t\tsetIsSuccess(true);\n\t};\n\n\tuseEffect(() => {\n\t\thandleVerify();\n\t}, []);\n\n\tif (isSuccess) {\n\t\tsetTimeout(() => {\n\t\t\tprops.history.push('/auth');\n\t\t}, 3000);\n\t}\n\n\treturn (\n\t\t<BodyWrapper>\n\t\t\t<h3>\n\t\t\t\t<FormattedMessage id=\"AUTH.VERIFY_EMAIL.TITLE\" />\n\t\t\t</h3>\n\t\t\t<LoadingIndicator loading={loading.toString()} className=\"spinner\" viewBox=\"0 0 50 50\">\n\t\t\t\t<circle className=\"path\" cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" strokeWidth=\"5\"></circle>\n\t\t\t</LoadingIndicator>\n\t\t\t<SuccessIndicator\n\t\t\t\tloading={loading.toString()}\n\t\t\t\tcolor=\"secondary\"\n\t\t\t\tisSuccess={isSuccess.toString()}\n\t\t\t></SuccessIndicator>\n\t\t\t<FailureIndicator loading={loading.toString()} isSuccess={isSuccess.toString()}></FailureIndicator>\n\t\t\t<h5>{status}</h5>\n\t\t</BodyWrapper>\n\t);\n}\n\nexport default injectIntl(VerifyEmailForm);\n"]},"metadata":{},"sourceType":"module"}
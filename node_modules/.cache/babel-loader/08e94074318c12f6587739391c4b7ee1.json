{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/index.js\";\nimport React, { useState, useEffect, memo } from 'react';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { incrementAlphabet, getQuestionSectionQuestionRange, getPassageQuestionRange, getEndingNumber, objectShallowEqual } from 'utils/utils';\nimport QuestionRender from 'app/views/pages/Test/QuestionRender';\nimport _ from 'lodash';\nimport CreateTestToolbar from 'app/views/pages/AdminCreateTest/components/CreateTestToolbar';\nimport theme from 'app/assets/theme';\nimport { Grid } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator'; // Mock test data used as initial component state\n\nimport mockTestData from './defaultMockdata';\nimport PassageToolbar from 'app/views/components/CreateReadingTest/PassageToolbar';\nimport CreateTestParagraph from './components/Paragraph';\nimport AdminPassageTitle from './components/PassageTitle';\nimport QuestionToolbar from 'app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/QuestionToolbar/';\nimport QuestionEditRender from 'app/views/components/CreateReadingTest/QuestionEditRender';\nimport EditableQuestionSection from './components/EditableQuestionSection';\nconst PassageImageEditor = React.lazy(() => import('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/PassageImageEdit'));\nconst Wrapper = styled(Grid)`\n\tmargin-top: 60px;\n\t@media only screen and (min-width: 1025px) {\n\t\tmargin-top: 0px;\n\t}\n\toverflow: hidden;\n`;\nconst PassageWrapper = styled.div`\n\tposition: relative;\n\tbackground-color: ${theme.ncpPrimaryBackground};\n\tpadding: 50px;\n\tcolor: ${theme.ncpTextColor};\n\toverflow-y: auto;\n\theight: calc(50vh - 55px);\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n`;\nconst PassageStepTitle = styled.h1`\n\tfont-weight: 700;\n`;\nconst PassageInstruction = styled.p`\n\tmargin-top: 20px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n`;\nconst PassageContent = styled.div`\n\tline-height: 1.5;\n`; // QUESTION PART\n\nconst QuestionWrapper = styled.div`\n\tposition: relative;\n\theight: calc(50vh - 55px);\n\tbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n\t\t0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n\toverflow-y: auto;\n\tpadding: 40px;\n\tpadding-bottom: 80px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n\tcolor: ${theme.ncpTextColor};\n`;\nconst QuestionCaption = styled.span`\n\tfont-size: 12px;\n\tfont-weight: 700;\n\ttext-transform: uppercase;\n\tletter-spacing: 2px;\n\tcolor: ${theme.ncpPrimary};\n`;\nconst QuestionCount = styled.h3`\n\tmargin-top: 15px;\n\tfont-size: 20px;\n\tfont-weight: 700;\n\tline-height: 1.2;\n`;\nconst QuestionSection = styled.div`\n\tmargin-bottom: 30px;\n`;\nconst SectionController = styled.div`\n\twidth: 100%;\n\theight: 50px;\n\tdisplay: flex;\n\tposition: fixed;\n\tbottom: 50px;\n\tbackground-color: ${theme.ncpGray};\n\tcolor: ${theme.ncpPrimary} !important;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 11px 50px 11px 20px;\n\t@media only screen and (min-width: 1280px) {\n\t\twidth: 50%;\n\t\tright: 0;\n\t}\n`;\nconst SectionTitle = styled.span`\n\tfont-size: 14px;\n\tfont-weight: 700;\n\ttext-transform: uppercase;\n\tletter-spacing: 2px;\n\tcolor: ${theme.ncpPrimary};\n\tline-height: 33px;\n\tpadding-left: 10px;\n`;\nconst SectionControlButton = styled(Button)`\n\tpadding: 0 15px;\n\tmargin: 0 0 0 10px;\n\ttext-transform: uppercase;\n\tfont-size: 16px !important;\n\tcolor: ${theme.ncpPrimary};\n`;\nconst LoadingWrapper = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\twidth: 100%;\n\tjustify-content: center;\n\talign-items: center;\n`;\nconst StyledCol = styled(Grid)`\n\t// padding: 0px;\n`;\n\nfunction RenderLoading(props) {\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(PassageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n    hasSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 6\n    }\n  }))), /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(QuestionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n    hasSpacing: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 6\n    }\n  }))));\n}\n\nconst CreateEditReadingTest = props => {\n  let {\n    readingTest,\n    modifyReadingTest,\n    handleChangeLocation\n  } = props; // Hooks\n\n  const [passageNumber, setPassageNumber] = useState(0);\n  const [readingTestData, modifyTest] = useState(readingTest || mockTestData);\n  const [drawerState, setDrawerState] = React.useState(false);\n  const [editQuestionSection, setEditQuestionSection] = useState({}); // DEFINE CONSTANTS FOR USE IN RENDER\n\n  const readingTestDetails = readingTestData.testDetails;\n  const currentPassage = readingTestDetails.passages[passageNumber];\n  const questionSections = currentPassage.questionSections;\n  const paragraphAmount = currentPassage.paragraphs.length; // Seperate questions inside passages into range strings to display on top of question sections for each passage: \"questions 1-13\"\n\n  const passageQuestionRange = getPassageQuestionRange(readingTestDetails.passages); // DRAWER HANDLE\n\n  const toggleDrawer = (drawerState, questionSection) => {\n    setDrawerState(drawerState);\n\n    if (questionSection) {\n      // questionSection: {data: questionSection, idx: idx}\n      setEditQuestionSection(questionSection);\n    }\n  }; // Reset edit question section every time the drawer closes to make sure the data is clean and brand new every render\n\n\n  if (drawerState === false) {\n    if (editQuestionSection.questionType) {\n      setEditQuestionSection({});\n    }\n  } // SECTION HANDLE\n  // Add new section\n\n\n  const handleAddNewSection = () => {\n    const newBlankPassage = {\n      title: 'Passage title',\n      image: '',\n      paragraphs: [{\n        content: ''\n      }],\n      questionSections: []\n    };\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages.push(newBlankPassage);\n    modifyTest(newReadingTestData);\n  }; // SAVE\n  // Handle save changes and update to parent component\n\n\n  const handleSave = () => {\n    modifyReadingTest(readingTestData);\n  };\n\n  const handleBack = () => {\n    handleChangeLocation('main');\n  }; // PARAGRAPH HANDLE\n  // Add a new blank paragraph to current passage\n\n\n  const handleAddParagraph = () => {\n    const newParagraph = {\n      content: ''\n    };\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].paragraphs.push(newParagraph);\n    modifyTest(newReadingTestData);\n  };\n\n  const handleAddImage = base64String => {\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].image = base64String;\n    modifyTest(newReadingTestData);\n  };\n\n  const handleTitleChange = value => {\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].title = value;\n    modifyTest(newReadingTestData);\n  };\n\n  const handleConfirmParagraphEdit = (content, idx) => {\n    if (content.length === 0) {\n      const newReadingTestData = { ...readingTestData\n      };\n      newReadingTestData.testDetails.passages[passageNumber].paragraphs.splice(idx, 1);\n      modifyTest(newReadingTestData);\n      return;\n    }\n\n    const newParagraph = {\n      content: content\n    };\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].paragraphs[[idx]] = newParagraph;\n    modifyTest(newReadingTestData);\n  };\n\n  const handleRemoveParagraph = idx => {\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].paragraphs.splice(idx, 1);\n    modifyTest(newReadingTestData);\n  }; // QUESTION HANDLE\n  // Add question section\n\n\n  const handleEditQuestionSection = questionSection => {\n    const {\n      data,\n      idx\n    } = questionSection;\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].questionSections[idx] = data;\n    modifyTest(newReadingTestData);\n    setDrawerState(false);\n  };\n\n  const handleAddQuestionSection = questionSection => {\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].questionSections.push(questionSection);\n    modifyTest(newReadingTestData);\n    setDrawerState(false);\n  };\n\n  const handleRemoveQuestionSection = idx => {\n    const newReadingTestData = { ...readingTestData\n    };\n    newReadingTestData.testDetails.passages[passageNumber].questionSections.splice(idx, 1);\n    modifyTest(newReadingTestData);\n  }; // Seperate questions inside sections into range strings to display on top of question Sections: \"Questions 1-4\"\n  // Ex: section[0]: 1-4, section[1]: 5-8, section[2]: 9-13\n\n\n  let previousSectionQuestionCount;\n\n  if (passageNumber > 0) {\n    previousSectionQuestionCount = getEndingNumber(passageQuestionRange[passageNumber - 1]) + 1;\n  }\n\n  const questionRange = getQuestionSectionQuestionRange(questionSections, previousSectionQuestionCount);\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    container: true,\n    spacing: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(PassageWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PassageToolbar, {\n    handleAddParagraph: handleAddParagraph,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(PassageStepTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 6\n    }\n  }, \"Reading Passage \", passageNumber + 1), /*#__PURE__*/React.createElement(PassageInstruction, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 6\n    }\n  }, \"You should spend about 20 minutes on\", ' ', /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }\n  }, \"Questions \", passageQuestionRange[passageNumber]), \", which are based on Reading Passage \", passageNumber + 1, \" below.\"), /*#__PURE__*/React.createElement(PassageImageEditor, {\n    handleAddImage: handleAddImage,\n    src: currentPassage.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(AdminPassageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(CreateTestParagraph, {\n    handleConfirm: handleTitleChange,\n    handleRemove: () => handleTitleChange('Passage Title'),\n    labelStyle: {\n      marginTop: '20px',\n      marginBottom: '10px',\n      fontSize: '26px',\n      lineHeight: '1.2',\n      fontWeight: '700',\n      textAlign: 'center'\n    },\n    content: currentPassage.title,\n    hasParagraphAlphabet: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(PassageContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 6\n    }\n  }, currentPassage.paragraphs.map((paragraph, idx) => {\n    return /*#__PURE__*/React.createElement(CreateTestParagraph, {\n      idx: idx,\n      key: idx,\n      content: paragraph.content,\n      handleConfirm: handleConfirmParagraphEdit,\n      handleRemove: handleRemoveParagraph,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }\n    });\n  })))), /*#__PURE__*/React.createElement(StyledCol, {\n    item: true,\n    xs: 12,\n    lg: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(QuestionWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(QuestionToolbar, {\n    drawerState: drawerState,\n    handleAddQuestionSection: handleAddQuestionSection,\n    handleEditQuestionSection: handleEditQuestionSection,\n    paragraphAmount: paragraphAmount,\n    questionSection: editQuestionSection,\n    setDrawerState: setDrawerState,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 6\n    }\n  }), /*#__PURE__*/React.createElement(QuestionCaption, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 6\n    }\n  }, \"Section \", passageNumber + 1, \": \", passageQuestionRange[passageNumber]), /*#__PURE__*/React.createElement(EditableQuestionSection, {\n    toggleDrawer: toggleDrawer,\n    readingTestData: readingTestData,\n    passageNumber: passageNumber,\n    handleRemoveQuestionSection: handleRemoveQuestionSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 6\n    }\n  })), /*#__PURE__*/React.createElement(SectionController, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 6\n    }\n  }, \"Section \", passageNumber + 1), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 6\n    }\n  }, passageNumber + 1 > 1 ? /*#__PURE__*/React.createElement(SectionControlButton, {\n    color: \"primary\",\n    onClick: () => setPassageNumber(passageNumber - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 8\n    }\n  }, \"Previous\") : null, passageNumber + 1 < readingTestDetails.passages.length ? /*#__PURE__*/React.createElement(SectionControlButton, {\n    color: \"primary\",\n    onClick: () => setPassageNumber(passageNumber + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 8\n    }\n  }, \"Next\") : null, /*#__PURE__*/React.createElement(SectionControlButton, {\n    color: \"primary\",\n    onClick: () => handleAddNewSection(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, \"Add Passage\")))), /*#__PURE__*/React.createElement(CreateTestToolbar, {\n    isLoading: false,\n    error: undefined,\n    resData: undefined,\n    handleSave: handleSave,\n    handleChangeLocation: handleBack,\n    title: 'Mock data test',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 4\n    }\n  }));\n};\n\nexport default memo(CreateEditReadingTest);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/index.js"],"names":["React","useState","useEffect","memo","Button","styled","incrementAlphabet","getQuestionSectionQuestionRange","getPassageQuestionRange","getEndingNumber","objectShallowEqual","QuestionRender","_","CreateTestToolbar","theme","Grid","LoadingIndicator","mockTestData","PassageToolbar","CreateTestParagraph","AdminPassageTitle","QuestionToolbar","QuestionEditRender","EditableQuestionSection","PassageImageEditor","lazy","Wrapper","PassageWrapper","div","ncpPrimaryBackground","ncpTextColor","PassageStepTitle","h1","PassageInstruction","p","PassageContent","QuestionWrapper","QuestionCaption","span","ncpPrimary","QuestionCount","h3","QuestionSection","SectionController","ncpGray","SectionTitle","SectionControlButton","LoadingWrapper","StyledCol","RenderLoading","props","CreateEditReadingTest","readingTest","modifyReadingTest","handleChangeLocation","passageNumber","setPassageNumber","readingTestData","modifyTest","drawerState","setDrawerState","editQuestionSection","setEditQuestionSection","readingTestDetails","testDetails","currentPassage","passages","questionSections","paragraphAmount","paragraphs","length","passageQuestionRange","toggleDrawer","questionSection","questionType","handleAddNewSection","newBlankPassage","title","image","content","newReadingTestData","push","handleSave","handleBack","handleAddParagraph","newParagraph","handleAddImage","base64String","handleTitleChange","value","handleConfirmParagraphEdit","idx","splice","handleRemoveParagraph","handleEditQuestionSection","data","handleAddQuestionSection","handleRemoveQuestionSection","previousSectionQuestionCount","questionRange","marginTop","marginBottom","fontSize","lineHeight","fontWeight","textAlign","map","paragraph","undefined"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, memo } from 'react';\nimport { Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {\n\tincrementAlphabet,\n\tgetQuestionSectionQuestionRange,\n\tgetPassageQuestionRange,\n\tgetEndingNumber,\n\tobjectShallowEqual,\n} from 'utils/utils';\nimport QuestionRender from 'app/views/pages/Test/QuestionRender';\nimport _ from 'lodash';\nimport CreateTestToolbar from 'app/views/pages/AdminCreateTest/components/CreateTestToolbar';\nimport theme from 'app/assets/theme';\nimport { Grid } from '@material-ui/core';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n// Mock test data used as initial component state\nimport mockTestData from './defaultMockdata';\nimport PassageToolbar from 'app/views/components/CreateReadingTest/PassageToolbar';\nimport CreateTestParagraph from './components/Paragraph';\nimport AdminPassageTitle from './components/PassageTitle';\nimport QuestionToolbar from 'app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/QuestionToolbar/';\nimport QuestionEditRender from 'app/views/components/CreateReadingTest/QuestionEditRender';\nimport EditableQuestionSection from './components/EditableQuestionSection';\n\nconst PassageImageEditor = React.lazy(() =>\n\timport('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/PassageImageEdit'),\n);\n\nconst Wrapper = styled(Grid)`\n\tmargin-top: 60px;\n\t@media only screen and (min-width: 1025px) {\n\t\tmargin-top: 0px;\n\t}\n\toverflow: hidden;\n`;\n\nconst PassageWrapper = styled.div`\n\tposition: relative;\n\tbackground-color: ${theme.ncpPrimaryBackground};\n\tpadding: 50px;\n\tcolor: ${theme.ncpTextColor};\n\toverflow-y: auto;\n\theight: calc(50vh - 55px);\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n`;\n\nconst PassageStepTitle = styled.h1`\n\tfont-weight: 700;\n`;\n\nconst PassageInstruction = styled.p`\n\tmargin-top: 20px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n`;\n\nconst PassageContent = styled.div`\n\tline-height: 1.5;\n`;\n\n// QUESTION PART\n\nconst QuestionWrapper = styled.div`\n\tposition: relative;\n\theight: calc(50vh - 55px);\n\tbox-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14),\n\t\t0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n\t@media only screen and (min-width: 1025px) {\n\t\theight: calc(50vh - 114px);\n\t}\n\t@media only screen and (min-width: 1280px) {\n\t\theight: calc(100vh - 230px);\n\t\tbox-shadow: none;\n\t}\n\toverflow-y: auto;\n\tpadding: 40px;\n\tpadding-bottom: 80px;\n\tline-height: 1.5;\n\tfont-size: 16px;\n\tcolor: ${theme.ncpTextColor};\n`;\n\nconst QuestionCaption = styled.span`\n\tfont-size: 12px;\n\tfont-weight: 700;\n\ttext-transform: uppercase;\n\tletter-spacing: 2px;\n\tcolor: ${theme.ncpPrimary};\n`;\n\nconst QuestionCount = styled.h3`\n\tmargin-top: 15px;\n\tfont-size: 20px;\n\tfont-weight: 700;\n\tline-height: 1.2;\n`;\n\nconst QuestionSection = styled.div`\n\tmargin-bottom: 30px;\n`;\n\nconst SectionController = styled.div`\n\twidth: 100%;\n\theight: 50px;\n\tdisplay: flex;\n\tposition: fixed;\n\tbottom: 50px;\n\tbackground-color: ${theme.ncpGray};\n\tcolor: ${theme.ncpPrimary} !important;\n\tjustify-content: space-between;\n\talign-items: center;\n\tpadding: 11px 50px 11px 20px;\n\t@media only screen and (min-width: 1280px) {\n\t\twidth: 50%;\n\t\tright: 0;\n\t}\n`;\n\nconst SectionTitle = styled.span`\n\tfont-size: 14px;\n\tfont-weight: 700;\n\ttext-transform: uppercase;\n\tletter-spacing: 2px;\n\tcolor: ${theme.ncpPrimary};\n\tline-height: 33px;\n\tpadding-left: 10px;\n`;\n\nconst SectionControlButton = styled(Button)`\n\tpadding: 0 15px;\n\tmargin: 0 0 0 10px;\n\ttext-transform: uppercase;\n\tfont-size: 16px !important;\n\tcolor: ${theme.ncpPrimary};\n`;\n\nconst LoadingWrapper = styled.div`\n\tdisplay: flex;\n\theight: 100%;\n\twidth: 100%;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nconst StyledCol = styled(Grid)`\n\t// padding: 0px;\n`;\n\nfunction RenderLoading(props) {\n\treturn (\n\t\t<Grid container>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<PassageWrapper>\n\t\t\t\t\t<LoadingIndicator hasSpacing={true}></LoadingIndicator>\n\t\t\t\t</PassageWrapper>\n\t\t\t</StyledCol>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<QuestionWrapper>\n\t\t\t\t\t<LoadingIndicator hasSpacing={true}></LoadingIndicator>\n\t\t\t\t</QuestionWrapper>\n\t\t\t</StyledCol>\n\t\t</Grid>\n\t);\n}\n\nconst CreateEditReadingTest = props => {\n\tlet { readingTest, modifyReadingTest, handleChangeLocation } = props;\n\n\t// Hooks\n\tconst [passageNumber, setPassageNumber] = useState(0);\n\tconst [readingTestData, modifyTest] = useState(readingTest || mockTestData);\n\tconst [drawerState, setDrawerState] = React.useState(false);\n\tconst [editQuestionSection, setEditQuestionSection] = useState({});\n\n\t// DEFINE CONSTANTS FOR USE IN RENDER\n\tconst readingTestDetails = readingTestData.testDetails;\n\tconst currentPassage = readingTestDetails.passages[passageNumber];\n\tconst questionSections = currentPassage.questionSections;\n\tconst paragraphAmount = currentPassage.paragraphs.length;\n\t// Seperate questions inside passages into range strings to display on top of question sections for each passage: \"questions 1-13\"\n\tconst passageQuestionRange = getPassageQuestionRange(readingTestDetails.passages);\n\t// DRAWER HANDLE\n\tconst toggleDrawer = (drawerState, questionSection) => {\n\t\tsetDrawerState(drawerState);\n\t\tif (questionSection) {\n\t\t\t// questionSection: {data: questionSection, idx: idx}\n\t\t\tsetEditQuestionSection(questionSection);\n\t\t}\n\t};\n\n\t// Reset edit question section every time the drawer closes to make sure the data is clean and brand new every render\n\tif (drawerState === false) {\n\t\tif (editQuestionSection.questionType) {\n\t\t\tsetEditQuestionSection({});\n\t\t}\n\t}\n\n\t// SECTION HANDLE\n\t// Add new section\n\tconst handleAddNewSection = () => {\n\t\tconst newBlankPassage = {\n\t\t\ttitle: 'Passage title',\n\t\t\timage: '',\n\t\t\tparagraphs: [\n\t\t\t\t{\n\t\t\t\t\tcontent: '',\n\t\t\t\t},\n\t\t\t],\n\t\t\tquestionSections: [],\n\t\t};\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages.push(newBlankPassage);\n\t\tmodifyTest(newReadingTestData);\n\t};\n\t// SAVE\n\t// Handle save changes and update to parent component\n\tconst handleSave = () => {\n\t\tmodifyReadingTest(readingTestData);\n\t};\n\n\tconst handleBack = () => {\n\t\thandleChangeLocation('main');\n\t};\n\t// PARAGRAPH HANDLE\n\t// Add a new blank paragraph to current passage\n\tconst handleAddParagraph = () => {\n\t\tconst newParagraph = { content: '' };\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].paragraphs.push(newParagraph);\n\t\tmodifyTest(newReadingTestData);\n\t};\n\n\tconst handleAddImage = base64String => {\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].image = base64String;\n\t\tmodifyTest(newReadingTestData);\n\t};\n\n\tconst handleTitleChange = value => {\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].title = value;\n\t\tmodifyTest(newReadingTestData);\n\t};\n\n\tconst handleConfirmParagraphEdit = (content, idx) => {\n\t\tif (content.length === 0) {\n\t\t\tconst newReadingTestData = { ...readingTestData };\n\t\t\tnewReadingTestData.testDetails.passages[passageNumber].paragraphs.splice(idx, 1);\n\t\t\tmodifyTest(newReadingTestData);\n\t\t\treturn;\n\t\t}\n\t\tconst newParagraph = { content: content };\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].paragraphs[[idx]] = newParagraph;\n\t\tmodifyTest(newReadingTestData);\n\t};\n\n\tconst handleRemoveParagraph = idx => {\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].paragraphs.splice(idx, 1);\n\t\tmodifyTest(newReadingTestData);\n\t};\n\n\t// QUESTION HANDLE\n\t// Add question section\n\tconst handleEditQuestionSection = questionSection => {\n\t\tconst { data, idx } = questionSection;\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].questionSections[idx] = data;\n\t\tmodifyTest(newReadingTestData);\n\t\tsetDrawerState(false);\n\t};\n\n\tconst handleAddQuestionSection = questionSection => {\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].questionSections.push(questionSection);\n\t\tmodifyTest(newReadingTestData);\n\t\tsetDrawerState(false);\n\t};\n\n\tconst handleRemoveQuestionSection = idx => {\n\t\tconst newReadingTestData = { ...readingTestData };\n\t\tnewReadingTestData.testDetails.passages[passageNumber].questionSections.splice(idx, 1);\n\t\tmodifyTest(newReadingTestData);\n\t};\n\t// Seperate questions inside sections into range strings to display on top of question Sections: \"Questions 1-4\"\n\t// Ex: section[0]: 1-4, section[1]: 5-8, section[2]: 9-13\n\tlet previousSectionQuestionCount;\n\tif (passageNumber > 0) {\n\t\tpreviousSectionQuestionCount = getEndingNumber(passageQuestionRange[passageNumber - 1]) + 1;\n\t}\n\tconst questionRange = getQuestionSectionQuestionRange(questionSections, previousSectionQuestionCount);\n\n\treturn (\n\t\t<Wrapper container spacing={0}>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<PassageWrapper>\n\t\t\t\t\t<PassageToolbar handleAddParagraph={handleAddParagraph}></PassageToolbar>\n\t\t\t\t\t<PassageStepTitle>Reading Passage {passageNumber + 1}</PassageStepTitle>\n\t\t\t\t\t<PassageInstruction>\n\t\t\t\t\t\tYou should spend about 20 minutes on{' '}\n\t\t\t\t\t\t<strong>Questions {passageQuestionRange[passageNumber]}</strong>, which are based on Reading\n\t\t\t\t\t\tPassage {passageNumber + 1} below.\n\t\t\t\t\t</PassageInstruction>\n\t\t\t\t\t<PassageImageEditor handleAddImage={handleAddImage} src={currentPassage.image}></PassageImageEditor>\n\t\t\t\t\t<AdminPassageTitle>\n\t\t\t\t\t\t<CreateTestParagraph\n\t\t\t\t\t\t\thandleConfirm={handleTitleChange}\n\t\t\t\t\t\t\thandleRemove={() => handleTitleChange('Passage Title')}\n\t\t\t\t\t\t\tlabelStyle={{\n\t\t\t\t\t\t\t\tmarginTop: '20px',\n\t\t\t\t\t\t\t\tmarginBottom: '10px',\n\t\t\t\t\t\t\t\tfontSize: '26px',\n\t\t\t\t\t\t\t\tlineHeight: '1.2',\n\t\t\t\t\t\t\t\tfontWeight: '700',\n\t\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcontent={currentPassage.title}\n\t\t\t\t\t\t\thasParagraphAlphabet={false}\n\t\t\t\t\t\t></CreateTestParagraph>\n\t\t\t\t\t</AdminPassageTitle>\n\t\t\t\t\t<PassageContent>\n\t\t\t\t\t\t{currentPassage.paragraphs.map((paragraph, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<CreateTestParagraph\n\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tcontent={paragraph.content}\n\t\t\t\t\t\t\t\t\thandleConfirm={handleConfirmParagraphEdit}\n\t\t\t\t\t\t\t\t\thandleRemove={handleRemoveParagraph}\n\t\t\t\t\t\t\t\t></CreateTestParagraph>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</PassageContent>\n\t\t\t\t</PassageWrapper>\n\t\t\t</StyledCol>\n\t\t\t<StyledCol item xs={12} lg={6}>\n\t\t\t\t<QuestionWrapper>\n\t\t\t\t\t<QuestionToolbar\n\t\t\t\t\t\tdrawerState={drawerState}\n\t\t\t\t\t\thandleAddQuestionSection={handleAddQuestionSection}\n\t\t\t\t\t\thandleEditQuestionSection={handleEditQuestionSection}\n\t\t\t\t\t\tparagraphAmount={paragraphAmount}\n\t\t\t\t\t\tquestionSection={editQuestionSection}\n\t\t\t\t\t\tsetDrawerState={setDrawerState}\n\t\t\t\t\t></QuestionToolbar>\n\t\t\t\t\t<QuestionCaption>\n\t\t\t\t\t\tSection {passageNumber + 1}: {passageQuestionRange[passageNumber]}\n\t\t\t\t\t</QuestionCaption>\n\t\t\t\t\t<EditableQuestionSection\n\t\t\t\t\t\ttoggleDrawer={toggleDrawer}\n\t\t\t\t\t\treadingTestData={readingTestData}\n\t\t\t\t\t\tpassageNumber={passageNumber}\n\t\t\t\t\t\thandleRemoveQuestionSection={handleRemoveQuestionSection}\n\t\t\t\t\t/>\n\t\t\t\t</QuestionWrapper>\n\t\t\t\t<SectionController>\n\t\t\t\t\t<SectionTitle>Section {passageNumber + 1}</SectionTitle>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t{passageNumber + 1 > 1 ? (\n\t\t\t\t\t\t\t<SectionControlButton color=\"primary\" onClick={() => setPassageNumber(passageNumber - 1)}>\n\t\t\t\t\t\t\t\tPrevious\n\t\t\t\t\t\t\t</SectionControlButton>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t{passageNumber + 1 < readingTestDetails.passages.length ? (\n\t\t\t\t\t\t\t<SectionControlButton color=\"primary\" onClick={() => setPassageNumber(passageNumber + 1)}>\n\t\t\t\t\t\t\t\tNext\n\t\t\t\t\t\t\t</SectionControlButton>\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t<SectionControlButton color=\"primary\" onClick={() => handleAddNewSection()}>\n\t\t\t\t\t\t\tAdd Passage\n\t\t\t\t\t\t</SectionControlButton>\n\t\t\t\t\t</div>\n\t\t\t\t</SectionController>\n\t\t\t</StyledCol>\n\t\t\t<CreateTestToolbar\n\t\t\t\tisLoading={false}\n\t\t\t\terror={undefined}\n\t\t\t\tresData={undefined}\n\t\t\t\thandleSave={handleSave}\n\t\t\t\thandleChangeLocation={handleBack}\n\t\t\t\ttitle={'Mock data test'}\n\t\t\t></CreateTestToolbar>\n\t\t</Wrapper>\n\t);\n};\n\nexport default memo(CreateEditReadingTest);\n"]},"metadata":{},"sourceType":"module"}
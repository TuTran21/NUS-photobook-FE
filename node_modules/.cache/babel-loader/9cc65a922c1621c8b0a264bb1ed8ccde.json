{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/utils/i18n/index.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\nimport * as de from 'react-intl/locale-data/de';\nimport * as en from 'react-intl/locale-data/en';\nimport * as es from 'react-intl/locale-data/es';\nimport * as fr from 'react-intl/locale-data/fr';\nimport * as ja from 'react-intl/locale-data/ja';\nimport * as zh from 'react-intl/locale-data/zh';\nimport * as vi from 'react-intl/locale-data/vi';\nimport deMessages from './messages/de';\nimport viMessages from './messages/vi';\nimport enMessages from './messages/en';\nimport esMessages from './messages/es';\nimport frMessages from './messages/fr';\nimport jaMessages from './messages/ja';\nimport zhMessages from './messages/zh';\nconst allMessages = {\n  de: deMessages,\n  en: enMessages,\n  vi: viMessages,\n  es: esMessages,\n  fr: frMessages,\n  ja: jaMessages,\n  zh: zhMessages\n};\naddLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh, ...vi]);\nexport default function I18nProvider({\n  children\n}) {\n  const locale = useSelector(({\n    i18n\n  }) => i18n.lang.lang);\n  const messages = allMessages[locale];\n  return /*#__PURE__*/React.createElement(IntlProvider, {\n    locale: locale,\n    messages: messages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 3\n    }\n  }, children);\n} // HOW TO USE\n// import { FormattedMessage, injectIntl } from 'react-intl';\n// <FormattedMessage id=\"AUTH.LOGIN.TITLE\" />\n// export default injectIntl(connect(null, auth.actions)(Login));","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/utils/i18n/index.js"],"names":["React","useSelector","addLocaleData","IntlProvider","de","en","es","fr","ja","zh","vi","deMessages","viMessages","enMessages","esMessages","frMessages","jaMessages","zhMessages","allMessages","I18nProvider","children","locale","i18n","lang","messages"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,YAA5C;AAEA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,2BAApB;AAEA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,WAAW,GAAG;AACnBd,EAAAA,EAAE,EAAEO,UADe;AAEnBN,EAAAA,EAAE,EAAEQ,UAFe;AAGnBH,EAAAA,EAAE,EAAEE,UAHe;AAInBN,EAAAA,EAAE,EAAEQ,UAJe;AAKnBP,EAAAA,EAAE,EAAEQ,UALe;AAMnBP,EAAAA,EAAE,EAAEQ,UANe;AAOnBP,EAAAA,EAAE,EAAEQ;AAPe,CAApB;AAUAf,aAAa,CAAC,CAAC,GAAGE,EAAJ,EAAQ,GAAGC,EAAX,EAAe,GAAGC,EAAlB,EAAsB,GAAGC,EAAzB,EAA6B,GAAGC,EAAhC,EAAoC,GAAGC,EAAvC,EAA2C,GAAGC,EAA9C,CAAD,CAAb;AAEA,eAAe,SAASS,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAoC;AAClD,QAAMC,MAAM,GAAGpB,WAAW,CAAC,CAAC;AAAEqB,IAAAA;AAAF,GAAD,KAAcA,IAAI,CAACC,IAAL,CAAUA,IAAzB,CAA1B;AACA,QAAMC,QAAQ,GAAGN,WAAW,CAACG,MAAD,CAA5B;AAEA,sBACC,oBAAC,YAAD;AAAc,IAAA,MAAM,EAAEA,MAAtB;AAA8B,IAAA,QAAQ,EAAEG,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEJ,QADF,CADD;AAKA,C,CAED;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { addLocaleData, IntlProvider } from 'react-intl';\n\nimport * as de from 'react-intl/locale-data/de';\nimport * as en from 'react-intl/locale-data/en';\nimport * as es from 'react-intl/locale-data/es';\nimport * as fr from 'react-intl/locale-data/fr';\nimport * as ja from 'react-intl/locale-data/ja';\nimport * as zh from 'react-intl/locale-data/zh';\nimport * as vi from 'react-intl/locale-data/vi';\n\nimport deMessages from './messages/de';\nimport viMessages from './messages/vi';\nimport enMessages from './messages/en';\nimport esMessages from './messages/es';\nimport frMessages from './messages/fr';\nimport jaMessages from './messages/ja';\nimport zhMessages from './messages/zh';\n\nconst allMessages = {\n\tde: deMessages,\n\ten: enMessages,\n\tvi: viMessages,\n\tes: esMessages,\n\tfr: frMessages,\n\tja: jaMessages,\n\tzh: zhMessages,\n};\n\naddLocaleData([...de, ...en, ...es, ...fr, ...ja, ...zh, ...vi]);\n\nexport default function I18nProvider({ children }) {\n\tconst locale = useSelector(({ i18n }) => i18n.lang.lang);\n\tconst messages = allMessages[locale];\n\n\treturn (\n\t\t<IntlProvider locale={locale} messages={messages}>\n\t\t\t{children}\n\t\t</IntlProvider>\n\t);\n}\n\n// HOW TO USE\n// import { FormattedMessage, injectIntl } from 'react-intl';\n// <FormattedMessage id=\"AUTH.LOGIN.TITLE\" />\n// export default injectIntl(connect(null, auth.actions)(Login));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/themes/_metronic/layout/LayoutInitializer.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as builder from 'state/ducks/layout/builder';\nimport { LayoutSplashScreen } from './LayoutContext'; // import builderActions from 'state/ducks/layout/actions';\n\nfunction loadCss(href, anchor) {\n  return new Promise((resolve, reject) => {\n    const link = document.createElement('link');\n    link.setAttribute('rel', 'stylesheet');\n    link.setAttribute('type', 'text/css');\n    link.onload = resolve;\n    link.onerror = reject;\n    link.setAttribute('href', href);\n    anchor.parentNode.insertBefore(link, anchor.nextSibling);\n    return link;\n  });\n}\n/**\n * Used to synchronize current layout `menuConfig`, `layoutConfig` and\n * `htmlClassService` with redux store.\n */\n\n\nexport default function LayoutInitializer({\n  styles,\n  children,\n  menuConfig,\n  layoutConfig,\n  htmlClassService\n}) {\n  const dispatch = useDispatch();\n  const [loadedStyles, setLoadedStyles] = useState();\n  const builderState = useSelector(({\n    builder\n  }) => builder);\n  useEffect(() => {\n    dispatch(builder.actions.setMenuConfig(menuConfig));\n  }, [dispatch, menuConfig]);\n  useEffect(() => {\n    if (layoutConfig.demo !== builderState.layoutConfig.demo) {\n      dispatch(builder.actions.setLayoutConfigs(layoutConfig));\n    }\n  }, [dispatch, builderState, layoutConfig]);\n  useEffect(() => {\n    dispatch(builder.actions.setHtmlClassService(htmlClassService));\n  }, [dispatch, htmlClassService]);\n  useEffect(() => {\n    if (!Array.isArray(styles)) {\n      setLoadedStyles(styles);\n      return;\n    }\n\n    const anchor = document.getElementById('layout-styles-anchor');\n    Promise.all([...styles].reverse().map(href => loadCss(href, anchor))).then(() => {\n      setLoadedStyles(styles);\n    });\n    return () => {\n      styles.forEach(href => {\n        const link = document.querySelector(`link[href='${href}']`);\n\n        if (link && link.parentNode) {\n          link.parentNode.removeChild(link);\n        }\n      });\n    };\n  }, [styles]);\n  return loadedStyles === styles && htmlClassService === builderState.htmlClassServiceObjects ?\n  /*#__PURE__*/\n  // Render content when `htmlClassService` synchronized with redux store.\n  React.createElement(React.Fragment, null, children) :\n  /*#__PURE__*/\n  // Otherwise sow loading splash screen.\n  React.createElement(LayoutSplashScreen, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }\n  });\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/themes/_metronic/layout/LayoutInitializer.js"],"names":["React","useEffect","useState","useDispatch","useSelector","builder","LayoutSplashScreen","loadCss","href","anchor","Promise","resolve","reject","link","document","createElement","setAttribute","onload","onerror","parentNode","insertBefore","nextSibling","LayoutInitializer","styles","children","menuConfig","layoutConfig","htmlClassService","dispatch","loadedStyles","setLoadedStyles","builderState","actions","setMenuConfig","demo","setLayoutConfigs","setHtmlClassService","Array","isArray","getElementById","all","reverse","map","then","forEach","querySelector","removeChild","htmlClassServiceObjects"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,OAAZ,MAAyB,4BAAzB;AACA,SAASC,kBAAT,QAAmC,iBAAnC,C,CACA;;AAEA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,MAAvB,EAA+B;AAC9B,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,UAAMC,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAb;AAEAF,IAAAA,IAAI,CAACG,YAAL,CAAkB,KAAlB,EAAyB,YAAzB;AACAH,IAAAA,IAAI,CAACG,YAAL,CAAkB,MAAlB,EAA0B,UAA1B;AAEAH,IAAAA,IAAI,CAACI,MAAL,GAAcN,OAAd;AACAE,IAAAA,IAAI,CAACK,OAAL,GAAeN,MAAf;AAEAC,IAAAA,IAAI,CAACG,YAAL,CAAkB,MAAlB,EAA0BR,IAA1B;AAEAC,IAAAA,MAAM,CAACU,UAAP,CAAkBC,YAAlB,CAA+BP,IAA/B,EAAqCJ,MAAM,CAACY,WAA5C;AAEA,WAAOR,IAAP;AACA,GAdM,CAAP;AAeA;AAED;AACA;AACA;AACA;;;AACA,eAAe,SAASS,iBAAT,CAA2B;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBC,EAAAA,UAApB;AAAgCC,EAAAA,YAAhC;AAA8CC,EAAAA;AAA9C,CAA3B,EAA6F;AAC3G,QAAMC,QAAQ,GAAGzB,WAAW,EAA5B;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,EAAhD;AACA,QAAM6B,YAAY,GAAG3B,WAAW,CAAC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBA,OAAlB,CAAhC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,QAAQ,CAACvB,OAAO,CAAC2B,OAAR,CAAgBC,aAAhB,CAA8BR,UAA9B,CAAD,CAAR;AACA,GAFQ,EAEN,CAACG,QAAD,EAAWH,UAAX,CAFM,CAAT;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIyB,YAAY,CAACQ,IAAb,KAAsBH,YAAY,CAACL,YAAb,CAA0BQ,IAApD,EAA0D;AACzDN,MAAAA,QAAQ,CAACvB,OAAO,CAAC2B,OAAR,CAAgBG,gBAAhB,CAAiCT,YAAjC,CAAD,CAAR;AACA;AACD,GAJQ,EAIN,CAACE,QAAD,EAAWG,YAAX,EAAyBL,YAAzB,CAJM,CAAT;AAMAzB,EAAAA,SAAS,CAAC,MAAM;AACf2B,IAAAA,QAAQ,CAACvB,OAAO,CAAC2B,OAAR,CAAgBI,mBAAhB,CAAoCT,gBAApC,CAAD,CAAR;AACA,GAFQ,EAEN,CAACC,QAAD,EAAWD,gBAAX,CAFM,CAAT;AAIA1B,EAAAA,SAAS,CAAC,MAAM;AACf,QAAI,CAACoC,KAAK,CAACC,OAAN,CAAcf,MAAd,CAAL,EAA4B;AAC3BO,MAAAA,eAAe,CAACP,MAAD,CAAf;AAEA;AACA;;AAED,UAAMd,MAAM,GAAGK,QAAQ,CAACyB,cAAT,CAAwB,sBAAxB,CAAf;AAEA7B,IAAAA,OAAO,CAAC8B,GAAR,CAAY,CAAC,GAAGjB,MAAJ,EAAYkB,OAAZ,GAAsBC,GAAtB,CAA0BlC,IAAI,IAAID,OAAO,CAACC,IAAD,EAAOC,MAAP,CAAzC,CAAZ,EAAsEkC,IAAtE,CAA2E,MAAM;AAChFb,MAAAA,eAAe,CAACP,MAAD,CAAf;AACA,KAFD;AAIA,WAAO,MAAM;AACZA,MAAAA,MAAM,CAACqB,OAAP,CAAepC,IAAI,IAAI;AACtB,cAAMK,IAAI,GAAGC,QAAQ,CAAC+B,aAAT,CAAwB,cAAarC,IAAK,IAA1C,CAAb;;AAEA,YAAIK,IAAI,IAAIA,IAAI,CAACM,UAAjB,EAA6B;AAC5BN,UAAAA,IAAI,CAACM,UAAL,CAAgB2B,WAAhB,CAA4BjC,IAA5B;AACA;AACD,OAND;AAOA,KARD;AASA,GAtBQ,EAsBN,CAACU,MAAD,CAtBM,CAAT;AAwBA,SAAOM,YAAY,KAAKN,MAAjB,IAA2BI,gBAAgB,KAAKI,YAAY,CAACgB,uBAA7D;AAAA;AACN;AACA,4CAAGvB,QAAH,CAFM;AAAA;AAIN;AACA,sBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALD;AAOA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as builder from 'state/ducks/layout/builder';\nimport { LayoutSplashScreen } from './LayoutContext';\n// import builderActions from 'state/ducks/layout/actions';\n\nfunction loadCss(href, anchor) {\n\treturn new Promise((resolve, reject) => {\n\t\tconst link = document.createElement('link');\n\n\t\tlink.setAttribute('rel', 'stylesheet');\n\t\tlink.setAttribute('type', 'text/css');\n\n\t\tlink.onload = resolve;\n\t\tlink.onerror = reject;\n\n\t\tlink.setAttribute('href', href);\n\n\t\tanchor.parentNode.insertBefore(link, anchor.nextSibling);\n\n\t\treturn link;\n\t});\n}\n\n/**\n * Used to synchronize current layout `menuConfig`, `layoutConfig` and\n * `htmlClassService` with redux store.\n */\nexport default function LayoutInitializer({ styles, children, menuConfig, layoutConfig, htmlClassService }) {\n\tconst dispatch = useDispatch();\n\tconst [loadedStyles, setLoadedStyles] = useState();\n\tconst builderState = useSelector(({ builder }) => builder);\n\n\tuseEffect(() => {\n\t\tdispatch(builder.actions.setMenuConfig(menuConfig));\n\t}, [dispatch, menuConfig]);\n\n\tuseEffect(() => {\n\t\tif (layoutConfig.demo !== builderState.layoutConfig.demo) {\n\t\t\tdispatch(builder.actions.setLayoutConfigs(layoutConfig));\n\t\t}\n\t}, [dispatch, builderState, layoutConfig]);\n\n\tuseEffect(() => {\n\t\tdispatch(builder.actions.setHtmlClassService(htmlClassService));\n\t}, [dispatch, htmlClassService]);\n\n\tuseEffect(() => {\n\t\tif (!Array.isArray(styles)) {\n\t\t\tsetLoadedStyles(styles);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst anchor = document.getElementById('layout-styles-anchor');\n\n\t\tPromise.all([...styles].reverse().map(href => loadCss(href, anchor))).then(() => {\n\t\t\tsetLoadedStyles(styles);\n\t\t});\n\n\t\treturn () => {\n\t\t\tstyles.forEach(href => {\n\t\t\t\tconst link = document.querySelector(`link[href='${href}']`);\n\n\t\t\t\tif (link && link.parentNode) {\n\t\t\t\t\tlink.parentNode.removeChild(link);\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t}, [styles]);\n\n\treturn loadedStyles === styles && htmlClassService === builderState.htmlClassServiceObjects ? (\n\t\t// Render content when `htmlClassService` synchronized with redux store.\n\t\t<>{children}</>\n\t) : (\n\t\t// Otherwise sow loading splash screen.\n\t\t<LayoutSplashScreen />\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
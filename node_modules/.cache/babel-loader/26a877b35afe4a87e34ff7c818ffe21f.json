{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/QuestionToolbar/index.js\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Theme from 'app/assets/theme';\nimport { IconButton, Tooltip, Typography, Drawer, Button } from '@material-ui/core';\nimport { PostAdd, Close } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\nconst QuestionSectionDrawer = React.lazy(() => import('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/EditQuestionSectionDrawer'));\nconst ToolbarWrapper = styled.div`\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\ttop: 0%;\n\tright: 0%;\n\theight: 50px;\n\tbackground-color: ${Theme.ncpWhite};\n\tflex-direction: row;\n\tborder-bottom-left-radius: 5px;\n\tmin-width: 50px;\n`;\nconst TooltipText = styled(Typography)`\n\tfont-size: 14px;\n\tmargin-bottom: 0px;\n`;\n\nfunction QuestionToolbar(props) {\n  const {\n    handleAddSection,\n    questionType = 'matchHeading',\n    paragraphAmount,\n    drawerState,\n    questionSection,\n    handleAddQuestionSection,\n    setDrawerState,\n    handleEditQuestionSection\n  } = props;\n  const [questionTypeState, setQuestionType] = React.useState(questionType);\n\n  const toggleDrawer = open => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setDrawerState(open);\n  };\n\n  useEffect(() => {\n    if (questionSection.questionType) {\n      setQuestionType(questionSection.questionType);\n    }\n  }, [questionSection]);\n\n  const handleChangeQuestionType = value => {\n    setQuestionType(value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    key: 'right',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: 'right',\n    open: drawerState,\n    onClose: toggleDrawer(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      wrapperStyle: {\n        width: '300px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(QuestionSectionDrawer, {\n    questionSection: questionSection,\n    handleAddQuestionSection: handleAddQuestionSection,\n    handleEditQuestionSection: handleEditQuestionSection,\n    paragraphAmount: paragraphAmount,\n    questionType: questionTypeState,\n    toggleDrawer: toggleDrawer,\n    handleAddSection: handleAddSection,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(ToolbarWrapper, {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    title: /*#__PURE__*/React.createElement(TooltipText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Add Section\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleDrawer(true),\n    \"aria-label\": \"add question section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(PostAdd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })))));\n}\n\nexport default QuestionToolbar;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/QuestionToolbar/index.js"],"names":["React","useEffect","styled","Theme","IconButton","Tooltip","Typography","Drawer","Button","PostAdd","Close","LoadingIndicator","QuestionSectionDrawer","lazy","ToolbarWrapper","div","ncpWhite","TooltipText","QuestionToolbar","props","handleAddSection","questionType","paragraphAmount","drawerState","questionSection","handleAddQuestionSection","setDrawerState","handleEditQuestionSection","questionTypeState","setQuestionType","useState","toggleDrawer","open","event","type","key","handleChangeQuestionType","value","width"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Theme from 'app/assets/theme';\nimport { IconButton, Tooltip, Typography, Drawer, Button } from '@material-ui/core';\nimport { PostAdd, Close } from '@material-ui/icons';\nimport LoadingIndicator from 'app/views/components/common/LoadingIndicator';\n\nconst QuestionSectionDrawer = React.lazy(() =>\n\timport('app/views/pages/AdminCreateTest/components/AdminCreateReadingTest/components/EditQuestionSectionDrawer'),\n);\n\nconst ToolbarWrapper = styled.div`\n\tposition: absolute;\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\ttop: 0%;\n\tright: 0%;\n\theight: 50px;\n\tbackground-color: ${Theme.ncpWhite};\n\tflex-direction: row;\n\tborder-bottom-left-radius: 5px;\n\tmin-width: 50px;\n`;\n\nconst TooltipText = styled(Typography)`\n\tfont-size: 14px;\n\tmargin-bottom: 0px;\n`;\n\nfunction QuestionToolbar(props) {\n\tconst {\n\t\thandleAddSection,\n\t\tquestionType = 'matchHeading',\n\t\tparagraphAmount,\n\t\tdrawerState,\n\t\tquestionSection,\n\t\thandleAddQuestionSection,\n\t\tsetDrawerState,\n\t\thandleEditQuestionSection,\n\t} = props;\n\tconst [questionTypeState, setQuestionType] = React.useState(questionType);\n\tconst toggleDrawer = open => event => {\n\t\tif (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetDrawerState(open);\n\t};\n\tuseEffect(() => {\n\t\tif (questionSection.questionType) {\n\t\t\tsetQuestionType(questionSection.questionType);\n\t\t}\n\t}, [questionSection]);\n\n\tconst handleChangeQuestionType = value => {\n\t\tsetQuestionType(value);\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t{/* DRAWER */}\n\t\t\t<React.Fragment key={'right'}>\n\t\t\t\t<Drawer anchor={'right'} open={drawerState} onClose={toggleDrawer(false)}>\n\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator wrapperStyle={{ width: '300px' }}></LoadingIndicator>}>\n\t\t\t\t\t\t<QuestionSectionDrawer\n\t\t\t\t\t\t\tquestionSection={questionSection}\n\t\t\t\t\t\t\thandleAddQuestionSection={handleAddQuestionSection}\n\t\t\t\t\t\t\thandleEditQuestionSection={handleEditQuestionSection}\n\t\t\t\t\t\t\tparagraphAmount={paragraphAmount}\n\t\t\t\t\t\t\tquestionType={questionTypeState}\n\t\t\t\t\t\t\ttoggleDrawer={toggleDrawer}\n\t\t\t\t\t\t\thandleAddSection={handleAddSection}\n\t\t\t\t\t\t></QuestionSectionDrawer>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</Drawer>\n\t\t\t</React.Fragment>\n\n\t\t\t{/* TOOLBAR */}\n\t\t\t<ToolbarWrapper className=\"card\">\n\t\t\t\t<Tooltip title={<TooltipText>Add Section</TooltipText>}>\n\t\t\t\t\t<IconButton onClick={toggleDrawer(true)} aria-label=\"add question section\">\n\t\t\t\t\t\t<PostAdd></PostAdd>\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Tooltip>\n\n\t\t\t\t{/* <Tooltip title={<TooltipText>Add paragraph</TooltipText>}>\n\t\t\t\t<IconButton aria-label=\"add paragraph\">\n\t\t\t\t\t<PostAdd></PostAdd>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip> */}\n\t\t\t</ToolbarWrapper>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default QuestionToolbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/OptionsInput.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Grid, TextField, FormControl, InputAdornment, IconButton, OutlinedInput, InputLabel, Typography } from '@material-ui/core';\nimport { PlayArrow } from '@material-ui/icons';\nimport OptionsEdit from './OptionsEdit';\nconst Wrapper = styled.div``;\nconst ColumnTitle = styled(Typography)`\n\ttext-align: center;\n\tmargin-bottom: 12px !important;\n`;\n\nfunction OptionsInput(props) {\n  const {\n    handleAddOptions,\n    options,\n    handleEditOption,\n    handleRemoveOption,\n    questionType,\n    wrapperStyle\n  } = props;\n  const [option, changeOption] = useState('');\n\n  const handleChangeOption = value => {\n    if (questionType === 'TFN') {\n      value = value.toUpperCase();\n    }\n\n    changeOption(value);\n  };\n\n  const onAddOption = () => {\n    handleAddOptions(option);\n  };\n\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    style: wrapperStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ColumnTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, \"Add option\"), /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"outlined-adornment-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Option input\"), /*#__PURE__*/React.createElement(OutlinedInput, {\n    id: \"outlined-adornment-password\",\n    type: \"text\",\n    value: option,\n    onChange: event => handleChangeOption(event.target.value),\n    endAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"toggle password visibility\",\n      onClick: () => onAddOption(),\n      edge: \"end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(PlayArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }))),\n    labelWidth: 80,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ColumnTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 6\n    }\n  }, \"Edit options\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 6\n    }\n  }, options.map((option, idx) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(OptionsEdit, {\n      handleRemoveOption: handleRemoveOption,\n      handleEditOption: handleEditOption,\n      option: option,\n      idx: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 10\n      }\n    }));\n  })))));\n}\n\nexport default OptionsInput;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/CreateReadingTest/questionCreateForms/OptionsInput.js"],"names":["React","useState","styled","Grid","TextField","FormControl","InputAdornment","IconButton","OutlinedInput","InputLabel","Typography","PlayArrow","OptionsEdit","Wrapper","div","ColumnTitle","OptionsInput","props","handleAddOptions","options","handleEditOption","handleRemoveOption","questionType","wrapperStyle","option","changeOption","handleChangeOption","value","toUpperCase","onAddOption","event","target","map","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n\tGrid,\n\tTextField,\n\tFormControl,\n\tInputAdornment,\n\tIconButton,\n\tOutlinedInput,\n\tInputLabel,\n\tTypography,\n} from '@material-ui/core';\nimport { PlayArrow } from '@material-ui/icons';\nimport OptionsEdit from './OptionsEdit';\n\nconst Wrapper = styled.div``;\n\nconst ColumnTitle = styled(Typography)`\n\ttext-align: center;\n\tmargin-bottom: 12px !important;\n`;\n\nfunction OptionsInput(props) {\n\tconst { handleAddOptions, options, handleEditOption, handleRemoveOption, questionType, wrapperStyle } = props;\n\tconst [option, changeOption] = useState('');\n\n\tconst handleChangeOption = value => {\n\t\tif (questionType === 'TFN') {\n\t\t\tvalue = value.toUpperCase();\n\t\t}\n\t\tchangeOption(value);\n\t};\n\n\tconst onAddOption = () => {\n\t\thandleAddOptions(option);\n\t};\n\n\treturn (\n\t\t<Wrapper style={wrapperStyle}>\n\t\t\t<Grid container spacing={4}>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<ColumnTitle>Add option</ColumnTitle>\n\t\t\t\t\t<FormControl fullWidth variant=\"outlined\">\n\t\t\t\t\t\t<InputLabel htmlFor=\"outlined-adornment-password\">Option input</InputLabel>\n\t\t\t\t\t\t<OutlinedInput\n\t\t\t\t\t\t\tid=\"outlined-adornment-password\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={option}\n\t\t\t\t\t\t\tonChange={event => handleChangeOption(event.target.value)}\n\t\t\t\t\t\t\tendAdornment={\n\t\t\t\t\t\t\t\t<InputAdornment position=\"end\">\n\t\t\t\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\t\t\t\taria-label=\"toggle password visibility\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => onAddOption()}\n\t\t\t\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<PlayArrow></PlayArrow>\n\t\t\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t\t\t</InputAdornment>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabelWidth={80}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} md={6}>\n\t\t\t\t\t<ColumnTitle>Edit options</ColumnTitle>\n\t\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t\t{options.map((option, idx) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Grid item xs={12} key={idx}>\n\t\t\t\t\t\t\t\t\t<OptionsEdit\n\t\t\t\t\t\t\t\t\t\thandleRemoveOption={handleRemoveOption}\n\t\t\t\t\t\t\t\t\t\thandleEditOption={handleEditOption}\n\t\t\t\t\t\t\t\t\t\toption={option}\n\t\t\t\t\t\t\t\t\t\tidx={idx}\n\t\t\t\t\t\t\t\t\t></OptionsEdit>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</Wrapper>\n\t);\n}\n\nexport default OptionsInput;\n"]},"metadata":{},"sourceType":"module"}
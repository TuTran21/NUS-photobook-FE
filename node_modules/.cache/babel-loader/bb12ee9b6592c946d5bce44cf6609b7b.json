{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Form/EngageDropdown/index.js\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport Select, { components } from 'react-select'; // import SearchIcon from 'component\\s/EngageIcons/SearchIcon';\n\nimport ArrowIcon from \"./Arrow.svg\";\nconst Label = styled.label`\n    display: inline-block;\n    margin-bottom: 0 !important;\n    cursor: pointer;\n    line-height: 1.5;\n    font-family: 'Nunito',Helvetica,Arial,sans-serif;\n    font-size: 16px;\n}`;\nconst FormGroupStyled = styled.div`\n  margin-bottom: 0px;\n  min-width: 130px;\n  display: inline-block;\n`;\n/**\n *\n * @param {*} props { data,  }\n */\n\nconst DropdownIndicator = props => /*#__PURE__*/React.createElement(components.DropdownIndicator, Object.assign({}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }\n}), /*#__PURE__*/React.createElement(\"img\", {\n  alt: \"\",\n  src: ArrowIcon,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }\n}));\n\nconst StyledSelect = styled(Select)``;\nconst EngageDropdown = React.memo(({\n  title,\n  errors,\n  required,\n  disabled,\n  isClearable = false,\n  placeholder,\n  holderStyle,\n  value,\n  key,\n  ...restProps\n}) => /*#__PURE__*/React.createElement(FormGroupStyled, {\n  style: holderStyle,\n  className: errors ? 'errors' : '',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }\n}, !!title && /*#__PURE__*/React.createElement(Label, {\n  htmlFor: title,\n  className: classnames('eng-label--input-title', {\n    'eng-label--required': required\n  }),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }\n}, title), /*#__PURE__*/React.createElement(StyledSelect, Object.assign({\n  key: key,\n  value: value,\n  className: \"eng-select--primary\",\n  classNamePrefix: \"eng-select--primary\",\n  styles: {\n    placeholder: () => ({\n      color: 'rgba(48, 51, 66, 0.8)'\n    })\n  } // menuIsOpen\n  ,\n  components: {\n    DropdownIndicator\n  },\n  isClearable: isClearable && !disabled,\n  placeholder: placeholder || 'Choose an option'\n}, restProps, {\n  isDisabled: disabled,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 7\n  }\n}))));\nEngageDropdown.propTypes = {\n  errors: PropTypes.any,\n  title: PropTypes.any,\n  required: PropTypes.any,\n  labelClassName: PropTypes.any,\n  selectClassName: PropTypes.any,\n  isClearable: PropTypes.any,\n  disabled: PropTypes.any,\n  placeholder: PropTypes.any\n};\nexport default EngageDropdown;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Form/EngageDropdown/index.js"],"names":["PropTypes","React","classnames","styled","Select","components","Label","label","FormGroupStyled","div","DropdownIndicator","props","ArrowIcon","StyledSelect","EngageDropdown","memo","title","errors","required","disabled","isClearable","placeholder","holderStyle","value","key","restProps","color","propTypes","any","labelClassName","selectClassName"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC,C,CACA;;;AAGA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,EAPA;AASA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAI;AACnC;AACA;AACA;AACA,CAJA;AAMA;AACA;AACA;AACA;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,iBACxB,oBAAC,UAAD,CAAY,iBAAZ,oBAAkCA,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE;AAAK,EAAA,GAAG,EAAC,EAAT;AAAY,EAAA,GAAG,EAAEC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF;;AAMA,MAAMC,YAAY,GAAGV,MAAM,CAACC,MAAD,CAAS,EAApC;AAEA,MAAMU,cAAc,GAAGb,KAAK,CAACc,IAAN,CACrB,CAAC;AACCC,EAAAA,KADD;AAECC,EAAAA,MAFD;AAGCC,EAAAA,QAHD;AAICC,EAAAA,QAJD;AAKCC,EAAAA,WAAW,GAAG,KALf;AAMCC,EAAAA,WAND;AAOCC,EAAAA,WAPD;AAQCC,EAAAA,KARD;AASCC,EAAAA,GATD;AAUC,KAAGC;AAVJ,CAAD,kBAYE,oBAAC,eAAD;AAAiB,EAAA,KAAK,EAAEH,WAAxB;AAAqC,EAAA,SAAS,EAAEL,MAAM,GAAG,QAAH,GAAc,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC,CAACD,KAAF,iBACC,oBAAC,KAAD;AACE,EAAA,OAAO,EAAEA,KADX;AAEE,EAAA,SAAS,EAAEd,UAAU,CAAC,wBAAD,EAA2B;AAC9C,2BAAuBgB;AADuB,GAA3B,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAMGF,KANH,CAFJ,eAWE,oBAAC,YAAD;AACE,EAAA,GAAG,EAAEQ,GADP;AAEE,EAAA,KAAK,EAAED,KAFT;AAGE,EAAA,SAAS,EAAC,qBAHZ;AAIE,EAAA,eAAe,EAAC,qBAJlB;AAKE,EAAA,MAAM,EAAE;AACNF,IAAAA,WAAW,EAAE,OAAO;AAClBK,MAAAA,KAAK,EAAE;AADW,KAAP;AADP,GALV,CAUE;AAVF;AAWE,EAAA,UAAU,EAAE;AAAEhB,IAAAA;AAAF,GAXd;AAYE,EAAA,WAAW,EAAEU,WAAW,IAAI,CAACD,QAZ/B;AAaE,EAAA,WAAW,EAAEE,WAAW,IAAI;AAb9B,GAcMI,SAdN;AAeE,EAAA,UAAU,EAAEN,QAfd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAXF,CAbmB,CAAvB;AA6CAL,cAAc,CAACa,SAAf,GAA2B;AACzBV,EAAAA,MAAM,EAAEjB,SAAS,CAAC4B,GADO;AAEzBZ,EAAAA,KAAK,EAAEhB,SAAS,CAAC4B,GAFQ;AAGzBV,EAAAA,QAAQ,EAAElB,SAAS,CAAC4B,GAHK;AAIzBC,EAAAA,cAAc,EAAE7B,SAAS,CAAC4B,GAJD;AAKzBE,EAAAA,eAAe,EAAE9B,SAAS,CAAC4B,GALF;AAMzBR,EAAAA,WAAW,EAAEpB,SAAS,CAAC4B,GANE;AAOzBT,EAAAA,QAAQ,EAAEnB,SAAS,CAAC4B,GAPK;AAQzBP,EAAAA,WAAW,EAAErB,SAAS,CAAC4B;AARE,CAA3B;AAUA,eAAed,cAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport Select, { components } from 'react-select';\n// import SearchIcon from 'component\\s/EngageIcons/SearchIcon';\nimport ArrowIcon from './Arrow.svg';\n\nconst Label = styled.label`\n    display: inline-block;\n    margin-bottom: 0 !important;\n    cursor: pointer;\n    line-height: 1.5;\n    font-family: 'Nunito',Helvetica,Arial,sans-serif;\n    font-size: 16px;\n}`;\n\nconst FormGroupStyled = styled.div`\n  margin-bottom: 0px;\n  min-width: 130px;\n  display: inline-block;\n`;\n\n/**\n *\n * @param {*} props { data,  }\n */\nconst DropdownIndicator = (props) => (\n  <components.DropdownIndicator {...props}>\n    <img alt=\"\" src={ArrowIcon} />\n  </components.DropdownIndicator>\n);\n\nconst StyledSelect = styled(Select)``;\n\nconst EngageDropdown = React.memo(\n  ({\n    title,\n    errors,\n    required,\n    disabled,\n    isClearable = false,\n    placeholder,\n    holderStyle,\n    value,\n    key,\n    ...restProps\n  }) => (\n    <FormGroupStyled style={holderStyle} className={errors ? 'errors' : ''}>\n      {!!title && (\n        <Label\n          htmlFor={title}\n          className={classnames('eng-label--input-title', {\n            'eng-label--required': required,\n          })}\n        >\n          {title}\n        </Label>\n      )}\n      <StyledSelect\n        key={key}\n        value={value}\n        className=\"eng-select--primary\"\n        classNamePrefix=\"eng-select--primary\"\n        styles={{\n          placeholder: () => ({\n            color: 'rgba(48, 51, 66, 0.8)',\n          }),\n        }}\n        // menuIsOpen\n        components={{ DropdownIndicator }}\n        isClearable={isClearable && !disabled}\n        placeholder={placeholder || 'Choose an option'}\n        {...restProps}\n        isDisabled={disabled}\n      />\n    </FormGroupStyled>\n  ),\n);\n\nEngageDropdown.propTypes = {\n  errors: PropTypes.any,\n  title: PropTypes.any,\n  required: PropTypes.any,\n  labelClassName: PropTypes.any,\n  selectClassName: PropTypes.any,\n  isClearable: PropTypes.any,\n  disabled: PropTypes.any,\n  placeholder: PropTypes.any,\n};\nexport default EngageDropdown;\n"]},"metadata":{},"sourceType":"module"}
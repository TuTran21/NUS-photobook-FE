{"ast":null,"code":"import React from 'react';\nimport requireAuth from 'app/views/components/middleware/RequireAuth';\nimport requireAdminAuth from 'app/views/components/middleware/RequireAdminAuth';\nimport applyDashboardMenu from 'app/views/components/middleware/ApplyDashboardMenu'; // Component for\n// Lazy load Components\n\nconst LandingPage = React.lazy(() => import('app/views/pages/LandingPage'));\nconst ErrorsPage = React.lazy(() => import('app/views/pages/ErrorsPage'));\nconst LogoutPage = React.lazy(() => import('app/views/pages/LogoutPage'));\nconst LayoutBuilder = React.lazy(() => import('app/views/pages/LayoutBuilder')); // Auth\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\nconst ConfirmMailPage = React.lazy(() => import('app/views/pages/ConfirmEmail')); // Dashboard\n\nconst DashboardPage = React.lazy(() => import('app/views/pages/Dashboard'));\nconst AdminCreateBlog = React.lazy(() => import('../pages/AdminCreateBlog'));\nconst AdminUpdateBlog = React.lazy(() => import('../pages/AdminUpdateBlog'));\nconst CreateTestPage = React.lazy(() => import('app/views/pages/AdminCreateTest'));\nconst UserManagementPage = React.lazy(() => import('app/views/pages/UsersManagementPage'));\nconst TestManagementPage = React.lazy(() => import('app/views/pages/TestsManagementPage'));\nconst BlogManagementPage = React.lazy(() => import('../pages/BlogManagementPage')); // TEST\n\nconst Result = React.lazy(() => import('app/views/pages/Test/Result/Injectable'));\nconst ReadingTest = React.lazy(() => import('app/views/pages/Test/ReadingTest/Injectable'));\nconst TestDetails = React.lazy(() => import('app/views/pages/TestDetails/Injectable'));\nconst TestCollectionPage = React.lazy(() => import('app/views/pages/Test/Collection/Injectable')); // USER\n\nconst UserProfile = React.lazy(() => import('app/views/pages/UserProfile')); // BLOG\n\nconst Blog = React.lazy(() => import('app/views/pages/Blog')); // Routes\n\nconst routesConfig = [// Is not affected by layout\n{\n  path: '/',\n  hasLayout: true,\n  exact: true,\n  name: 'Landing Page',\n  hasLayout: false,\n  hasFooter: true,\n  hasHeader: true,\n  component: LandingPage\n}, {\n  path: '/auth',\n  exact: false,\n  hasLayout: false,\n  name: 'Auth Page',\n  component: AuthPage\n}, {\n  path: '/email/verify/:emailToken',\n  exact: false,\n  hasLayout: false,\n  name: 'Auth Page',\n  component: ConfirmMailPage\n}, {\n  path: '/logout',\n  exact: true,\n  hasLayout: false,\n  name: 'Logout Page',\n  component: LogoutPage\n}, {\n  path: '/400',\n  extraProps: {\n    code: '400'\n  },\n  exact: true,\n  hasLayout: false,\n  hasFooter: false,\n  hasHeader: false,\n  name: '400 Page',\n  component: ErrorsPage\n}, {\n  path: '/401',\n  extraProps: {\n    code: '401'\n  },\n  exact: true,\n  hasLayout: false,\n  hasFooter: false,\n  hasHeader: false,\n  name: '401 Page',\n  component: ErrorsPage\n}, {\n  path: '/403',\n  extraProps: {\n    code: '403'\n  },\n  exact: true,\n  hasLayout: false,\n  hasFooter: false,\n  hasHeader: false,\n  name: '404 Page',\n  component: ErrorsPage\n}, {\n  path: '/404',\n  extraProps: {\n    code: '404'\n  },\n  exact: true,\n  hasLayout: false,\n  hasFooter: false,\n  hasHeader: false,\n  name: '404 Page',\n  component: ErrorsPage\n}, {\n  path: '/500',\n  exact: true,\n  extraProps: {\n    code: '500'\n  },\n  hasLayout: false,\n  hasHeader: false,\n  hasFooter: false,\n  name: '500 Page',\n  component: ErrorsPage\n}, // Affected by layout\n{\n  path: '/dashboard',\n  hasLayout: true,\n  exact: true,\n  name: 'Dashboard',\n  component: applyDashboardMenu(requireAdminAuth(DashboardPage))\n}, {\n  path: '/admin/test/create',\n  hasLayout: false,\n  hasFooter: false,\n  exact: true,\n  name: 'Admin create test',\n  component: applyDashboardMenu(requireAdminAuth(CreateTestPage))\n}, {\n  path: '/admin/test/edit/:id',\n  hasLayout: false,\n  hasFooter: false,\n  exact: true,\n  name: 'Admin edit test',\n  component: applyDashboardMenu(requireAdminAuth(CreateTestPage))\n}, {\n  path: '/builder',\n  hasLayout: true,\n  exact: true,\n  name: 'Layout Builder',\n  component: LayoutBuilder\n}, {\n  path: '/admin/users',\n  hasLayout: true,\n  exact: true,\n  name: 'User Management',\n  component: applyDashboardMenu(requireAdminAuth(UserManagementPage))\n}, {\n  path: '/admin/tests',\n  hasLayout: true,\n  exact: true,\n  name: 'Test Management',\n  component: applyDashboardMenu(requireAdminAuth(TestManagementPage))\n}, {\n  path: '/admin/blogs',\n  hasLayout: true,\n  exact: true,\n  name: 'Blog Management',\n  component: applyDashboardMenu(requireAdminAuth(BlogManagementPage))\n}, {\n  path: '/admin/blog/create',\n  hasLayout: true,\n  exact: true,\n  name: 'Blog Create',\n  component: applyDashboardMenu(requireAdminAuth(AdminCreateBlog))\n}, {\n  path: '/admin/blog/edit/:id',\n  hasLayout: true,\n  exact: true,\n  name: 'Blog Create',\n  component: applyDashboardMenu(requireAdminAuth(AdminUpdateBlog))\n}, {\n  path: '/test/:testId',\n  hasLayout: true,\n  hasHeader: true,\n  hasFooter: true,\n  exact: true,\n  name: 'Test Details',\n  component: TestDetails\n}, {\n  path: '/test/:testId/reading',\n  hasLayout: false,\n  hasHeader: true,\n  hasFooter: false,\n  exact: true,\n  name: 'Reading Test',\n  component: requireAuth(ReadingTest)\n}, {\n  path: '/collection',\n  hasLayout: true,\n  exact: true,\n  name: 'Test collection',\n  component: TestCollectionPage\n}, {\n  path: '/result/reading/:resultId',\n  hasLayout: true,\n  exact: true,\n  name: 'Reading Result',\n  component: Result\n}, {\n  path: '/user/:userId',\n  hasLayout: true,\n  exact: true,\n  name: 'User Profile',\n  component: UserProfile\n}, {\n  path: '/blog/:id',\n  hasLayout: true,\n  hasHeader: true,\n  hasFooter: true,\n  exact: true,\n  name: 'Blog',\n  component: Blog\n}];\nexport default routesConfig;","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/router/config.js"],"names":["React","requireAuth","requireAdminAuth","applyDashboardMenu","LandingPage","lazy","ErrorsPage","LogoutPage","LayoutBuilder","AuthPage","ConfirmMailPage","DashboardPage","AdminCreateBlog","AdminUpdateBlog","CreateTestPage","UserManagementPage","TestManagementPage","BlogManagementPage","Result","ReadingTest","TestDetails","TestCollectionPage","UserProfile","Blog","routesConfig","path","hasLayout","exact","name","hasFooter","hasHeader","component","extraProps","code"],"mappings":"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","sourcesContent":["import React from 'react';\nimport requireAuth from 'app/views/components/middleware/RequireAuth';\nimport requireAdminAuth from 'app/views/components/middleware/RequireAdminAuth';\nimport applyDashboardMenu from 'app/views/components/middleware/ApplyDashboardMenu';\n// Component for\n// Lazy load Components\nconst LandingPage = React.lazy(() => import('app/views/pages/LandingPage'));\nconst ErrorsPage = React.lazy(() => import('app/views/pages/ErrorsPage'));\nconst LogoutPage = React.lazy(() => import('app/views/pages/LogoutPage'));\nconst LayoutBuilder = React.lazy(() => import('app/views/pages/LayoutBuilder'));\n// Auth\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\nconst ConfirmMailPage = React.lazy(() => import('app/views/pages/ConfirmEmail'));\n// Dashboard\nconst DashboardPage = React.lazy(() => import('app/views/pages/Dashboard'));\nconst AdminCreateBlog = React.lazy(() => import('../pages/AdminCreateBlog'));\nconst AdminUpdateBlog = React.lazy(() => import('../pages/AdminUpdateBlog'));\nconst CreateTestPage = React.lazy(() => import('app/views/pages/AdminCreateTest'));\nconst UserManagementPage = React.lazy(() => import('app/views/pages/UsersManagementPage'));\nconst TestManagementPage = React.lazy(() => import('app/views/pages/TestsManagementPage'));\nconst BlogManagementPage = React.lazy(() => import('../pages/BlogManagementPage'));\n\n// TEST\nconst Result = React.lazy(() => import('app/views/pages/Test/Result/Injectable'));\nconst ReadingTest = React.lazy(() => import('app/views/pages/Test/ReadingTest/Injectable'));\nconst TestDetails = React.lazy(() => import('app/views/pages/TestDetails/Injectable'));\nconst TestCollectionPage = React.lazy(() => import('app/views/pages/Test/Collection/Injectable'));\n// USER\nconst UserProfile = React.lazy(() => import('app/views/pages/UserProfile'));\n// BLOG\nconst Blog = React.lazy(() => import('app/views/pages/Blog'));\n\n// Routes\nconst routesConfig = [\n\t// Is not affected by layout\n\t{\n\t\tpath: '/',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Landing Page',\n\t\thasLayout: false,\n\t\thasFooter: true,\n\t\thasHeader: true,\n\t\tcomponent: LandingPage,\n\t},\n\t{ path: '/auth', exact: false, hasLayout: false, name: 'Auth Page', component: AuthPage },\n\t{\n\t\tpath: '/email/verify/:emailToken',\n\t\texact: false,\n\t\thasLayout: false,\n\t\tname: 'Auth Page',\n\t\tcomponent: ConfirmMailPage,\n\t},\n\t{ path: '/logout', exact: true, hasLayout: false, name: 'Logout Page', component: LogoutPage },\n\t{\n\t\tpath: '/400',\n\t\textraProps: { code: '400' },\n\t\texact: true,\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\thasHeader: false,\n\t\tname: '400 Page',\n\t\tcomponent: ErrorsPage,\n\t},\n\t{\n\t\tpath: '/401',\n\t\textraProps: { code: '401' },\n\t\texact: true,\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\thasHeader: false,\n\t\tname: '401 Page',\n\t\tcomponent: ErrorsPage,\n\t},\n\t{\n\t\tpath: '/403',\n\t\textraProps: { code: '403' },\n\t\texact: true,\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\thasHeader: false,\n\t\tname: '404 Page',\n\t\tcomponent: ErrorsPage,\n\t},\n\t{\n\t\tpath: '/404',\n\t\textraProps: { code: '404' },\n\t\texact: true,\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\thasHeader: false,\n\t\tname: '404 Page',\n\t\tcomponent: ErrorsPage,\n\t},\n\t{\n\t\tpath: '/500',\n\t\texact: true,\n\t\textraProps: { code: '500' },\n\t\thasLayout: false,\n\t\thasHeader: false,\n\t\thasFooter: false,\n\t\tname: '500 Page',\n\t\tcomponent: ErrorsPage,\n\t},\n\t// Affected by layout\n\t{\n\t\tpath: '/dashboard',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Dashboard',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(DashboardPage)),\n\t},\n\t{\n\t\tpath: '/admin/test/create',\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\texact: true,\n\t\tname: 'Admin create test',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(CreateTestPage)),\n\t},\n\t{\n\t\tpath: '/admin/test/edit/:id',\n\t\thasLayout: false,\n\t\thasFooter: false,\n\t\texact: true,\n\t\tname: 'Admin edit test',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(CreateTestPage)),\n\t},\n\t{ path: '/builder', hasLayout: true, exact: true, name: 'Layout Builder', component: LayoutBuilder },\n\t{\n\t\tpath: '/admin/users',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'User Management',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(UserManagementPage)),\n\t},\n\t{\n\t\tpath: '/admin/tests',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Test Management',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(TestManagementPage)),\n\t},\n\t{\n\t\tpath: '/admin/blogs',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Blog Management',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(BlogManagementPage)),\n\t},\n\t{\n\t\tpath: '/admin/blog/create',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Blog Create',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(AdminCreateBlog)),\n\t},\n\t{\n\t\tpath: '/admin/blog/edit/:id',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Blog Create',\n\t\tcomponent: applyDashboardMenu(requireAdminAuth(AdminUpdateBlog)),\n\t},\n\t{\n\t\tpath: '/test/:testId',\n\t\thasLayout: true,\n\t\thasHeader: true,\n\t\thasFooter: true,\n\t\texact: true,\n\t\tname: 'Test Details',\n\t\tcomponent: TestDetails,\n\t},\n\t{\n\t\tpath: '/test/:testId/reading',\n\t\thasLayout: false,\n\t\thasHeader: true,\n\t\thasFooter: false,\n\t\texact: true,\n\t\tname: 'Reading Test',\n\t\tcomponent: requireAuth(ReadingTest),\n\t},\n\t{\n\t\tpath: '/collection',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Test collection',\n\t\tcomponent: TestCollectionPage,\n\t},\n\n\t{\n\t\tpath: '/result/reading/:resultId',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'Reading Result',\n\t\tcomponent: Result,\n\t},\n\t{\n\t\tpath: '/user/:userId',\n\t\thasLayout: true,\n\t\texact: true,\n\t\tname: 'User Profile',\n\t\tcomponent: UserProfile,\n\t},\n\t{\n\t\tpath: '/blog/:id',\n\t\thasLayout: true,\n\t\thasHeader: true,\n\t\thasFooter: true,\n\t\texact: true,\n\t\tname: 'Blog',\n\t\tcomponent: Blog,\n\t},\n];\n\nexport default routesConfig;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/ResultCircle/index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport styled from 'styled-components';\nimport Theme from 'app/themes/styles';\nconst Label = styled.p`\n\tdisplay: block;\n\tmargin: 0px;\n\tfont-size: 13px;\n\tfont-weight: 800;\n\tcolor: #787878;\n`;\nconst BackgroundCircle = styled(CircularProgress)`\n\tposition: absolute;\n\tcolor: ${Theme.ncpLight} !important;\n`;\nconst Wrapper = styled(Box)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\nexport function CircularProgressWithLabel(props) {\n  const {\n    label\n  } = props;\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    position: \"relative\",\n    display: \"inline-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgress, Object.assign({\n    variant: \"static\"\n  }, props, {\n    style: {\n      zIndex: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }\n  })), /*#__PURE__*/React.createElement(BackgroundCircle, {\n    variant: \"static\",\n    value: 100,\n    size: props.size,\n    thickness: props.thickness,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    right: 0,\n    position: \"absolute\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    flexDirection: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    variant: \"caption\",\n    component: \"div\",\n    color: \"textSecondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, label), props.children));\n}\nCircularProgressWithLabel.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.number.isRequired\n};\nexport default function CircularIncrement(props) {\n  const {\n    value = 100,\n    interval = 20,\n    incrementByValue = 0.5,\n    label = ''\n  } = props;\n  const [progress, setProgress] = React.useState(0);\n  React.useEffect(() => {\n    const timer = setInterval(() => {\n      setProgress(prevProgress => prevProgress == value ? value : prevProgress + incrementByValue);\n    }, interval);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(CircularProgressWithLabel, Object.assign({\n    value: progress,\n    label: label\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }\n  })));\n}","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/Test/ResultCircle/index.js"],"names":["React","PropTypes","CircularProgress","Typography","Box","styled","Theme","Label","p","BackgroundCircle","ncpLight","Wrapper","CircularProgressWithLabel","props","label","zIndex","size","thickness","children","propTypes","string","value","number","isRequired","CircularIncrement","interval","incrementByValue","progress","setProgress","useState","useEffect","timer","setInterval","prevProgress","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport styled from 'styled-components';\nimport Theme from 'app/themes/styles';\n\nconst Label = styled.p`\n\tdisplay: block;\n\tmargin: 0px;\n\tfont-size: 13px;\n\tfont-weight: 800;\n\tcolor: #787878;\n`;\n\nconst BackgroundCircle = styled(CircularProgress)`\n\tposition: absolute;\n\tcolor: ${Theme.ncpLight} !important;\n`;\n\nconst Wrapper = styled(Box)`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n`;\n\nexport function CircularProgressWithLabel(props) {\n\tconst { label } = props;\n\treturn (\n\t\t<Wrapper position=\"relative\" display=\"inline-flex\">\n\t\t\t<CircularProgress variant=\"static\" {...props} style={{ zIndex: 2 }} />\n\t\t\t<BackgroundCircle\n\t\t\t\tvariant=\"static\"\n\t\t\t\tvalue={100}\n\t\t\t\tsize={props.size}\n\t\t\t\tthickness={props.thickness}\n\t\t\t></BackgroundCircle>\n\t\t\t<Box\n\t\t\t\ttop={0}\n\t\t\t\tleft={0}\n\t\t\t\tbottom={0}\n\t\t\t\tright={0}\n\t\t\t\tposition=\"absolute\"\n\t\t\t\tdisplay=\"flex\"\n\t\t\t\talignItems=\"center\"\n\t\t\t\tjustifyContent=\"center\"\n\t\t\t\tflexDirection=\"column\"\n\t\t\t>\n\t\t\t\t<Label variant=\"caption\" component=\"div\" color=\"textSecondary\">\n\t\t\t\t\t{label}\n\t\t\t\t</Label>\n\t\t\t\t{props.children}\n\t\t\t</Box>\n\t\t</Wrapper>\n\t);\n}\n\nCircularProgressWithLabel.propTypes = {\n\tlabel: PropTypes.string,\n\tvalue: PropTypes.number.isRequired,\n};\n\nexport default function CircularIncrement(props) {\n\tconst { value = 100, interval = 20, incrementByValue = 0.5, label = '' } = props;\n\tconst [progress, setProgress] = React.useState(0);\n\tReact.useEffect(() => {\n\t\tconst timer = setInterval(() => {\n\t\t\tsetProgress(prevProgress => (prevProgress == value ? value : prevProgress + incrementByValue));\n\t\t}, interval);\n\n\t\treturn () => {\n\t\t\tclearInterval(timer);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CircularProgressWithLabel value={progress} label={label} {...props} />\n\t\t</React.Fragment>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}
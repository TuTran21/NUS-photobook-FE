{"ast":null,"code":"var _jsxFileName = \"/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/layout/components/UserProfile.js\";\n\n/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { connect } from 'react-redux';\nimport { toAbsoluteUrl } from '../../../../themes/_metronic';\nimport HeaderDropdownToggle from '../CustomDropdowns/HeaderDropdownToggle';\nimport { useLazyQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport { CircularProgress, Button, Dialog } from '@material-ui/core';\nimport history from 'utils/history';\nimport authActions from 'state/ducks/auth/actions';\nimport LoadingIndicator from '../../common/LoadingIndicator';\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction UserProfile(props) {\n  const {\n    showHi,\n    showAvatar,\n    showBadge,\n    activeUser,\n    logout\n  } = props;\n  const [loginModalState, setOpenLoginModal] = React.useState({\n    isOpen: false,\n    formType: 'login'\n  });\n  const [getProfileId, profileIdRes] = useLazyQuery(UserQueries.GET_MY_PROFILE, {\n    onCompleted: () => history.push(`/user/${profileIdRes.data.getMyProfile.userId}`),\n    fetchPolicy: 'network-only'\n  });\n\n  const handleOpenLoginModal = (isOpen, formType) => {\n    return setOpenLoginModal({\n      isOpen: isOpen,\n      formType: formType\n    });\n  };\n\n  const user = activeUser;\n\n  if (user.username) {\n    const welcomeName = user.firstName && user.lastName ? user.firstName + ' ' + user.lastName : user.username ? user.username : 'Undefined';\n    return /*#__PURE__*/React.createElement(Dropdown, {\n      className: \"kt-header__topbar-item kt-header__topbar-item--user\",\n      drop: \"down\",\n      alignRight: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      as: HeaderDropdownToggle,\n      id: \"dropdown-toggle-user-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, showHi && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-header__topbar-welcome kt-hidden-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Hi,\"), showHi && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-header__topbar-username kt-hidden-mobile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, welcomeName), showAvatar && /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Pic\",\n      src: user.avatar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), showBadge && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-badge kt-badge--username kt-badge--lg kt-badge--rounded kt-badge--bold kt-hidden-\",\n      style: {\n        backgroundSize: 'cover',\n        backgroundImage: `url(${user.avatar})`,\n        backgroundColor: 'transparent'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, !user.avatar ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, welcomeName.charAt(0)) : null)), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      style: {\n        zIndex: 90\n      },\n      className: \"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-user-card kt-user-card--skin-dark kt-notification-item-padding-x\",\n      style: {\n        backgroundImage: `url()`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-user-card__avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, !user.avatar ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold  kt-font-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, welcomeName.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold  kt-font-success\",\n      style: {\n        borderRadius: '50%',\n        backgroundSize: 'cover',\n        backgroundImage: `url(${user.avatar})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-user-card__name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, welcomeName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"kt-notification__item\",\n      onClick: () => getProfileId(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification__item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"flaticon2-calendar-3 kt-font-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification__item-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification__item-title kt-font-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, \"My Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification__item-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, \"Account settings and more\")), profileIdRes.loading && /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: \"40px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"kt-notification__custom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => logout(),\n      className: \"btn btn-label-brand btn-sm btn-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }\n    }, \"Sign Out\")))));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => handleOpenLoginModal(false),\n    \"aria-labelledby\": \"login-modal-in-authorize-popup\",\n    open: loginModalState.isOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Suspense, {\n    fallback: /*#__PURE__*/React.createElement(LoadingIndicator, {\n      hasSpacing: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(AuthPage, {\n    isModal: true,\n    formTypeDefault: loginModalState.formType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => handleOpenLoginModal(true, 'login'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"large\",\n    onClick: () => handleOpenLoginModal(true, 'register'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }\n  }, \"Sign up\"));\n}\n\nconst mapStateToProps = ({\n  auth: {\n    activeUser\n  }\n}) => ({\n  activeUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  const logout = () => dispatch(authActions.logout());\n\n  return {\n    logout\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/home/nus/TuTran/projects/Web/training/photobook/FE/src/app/views/components/layout/components/UserProfile.js"],"names":["React","Link","Redirect","Dropdown","connect","toAbsoluteUrl","HeaderDropdownToggle","useLazyQuery","UserQueries","CircularProgress","Button","Dialog","history","authActions","LoadingIndicator","AuthPage","lazy","UserProfile","props","showHi","showAvatar","showBadge","activeUser","logout","loginModalState","setOpenLoginModal","useState","isOpen","formType","getProfileId","profileIdRes","GET_MY_PROFILE","onCompleted","push","data","getMyProfile","userId","fetchPolicy","handleOpenLoginModal","user","username","welcomeName","firstName","lastName","avatar","backgroundSize","backgroundImage","backgroundColor","charAt","zIndex","borderRadius","loading","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { connect } from 'react-redux';\nimport { toAbsoluteUrl } from '../../../../themes/_metronic';\nimport HeaderDropdownToggle from '../CustomDropdowns/HeaderDropdownToggle';\nimport { useLazyQuery } from '@apollo/client';\nimport UserQueries from 'graphql/queries/User';\nimport { CircularProgress, Button, Dialog } from '@material-ui/core';\nimport history from 'utils/history';\nimport authActions from 'state/ducks/auth/actions';\nimport LoadingIndicator from '../../common/LoadingIndicator';\n\nconst AuthPage = React.lazy(() => import('app/views/pages/AuthPage/Injectable'));\n\nfunction UserProfile(props) {\n\tconst { showHi, showAvatar, showBadge, activeUser, logout } = props;\n\tconst [loginModalState, setOpenLoginModal] = React.useState({ isOpen: false, formType: 'login' });\n\tconst [getProfileId, profileIdRes] = useLazyQuery(UserQueries.GET_MY_PROFILE, {\n\t\tonCompleted: () => history.push(`/user/${profileIdRes.data.getMyProfile.userId}`),\n\t\tfetchPolicy: 'network-only',\n\t});\n\n\tconst handleOpenLoginModal = (isOpen, formType) => {\n\t\treturn setOpenLoginModal({ isOpen: isOpen, formType: formType });\n\t};\n\n\tconst user = activeUser;\n\n\tif (user.username) {\n\t\tconst welcomeName =\n\t\t\tuser.firstName && user.lastName\n\t\t\t\t? user.firstName + ' ' + user.lastName\n\t\t\t\t: user.username\n\t\t\t\t? user.username\n\t\t\t\t: 'Undefined';\n\t\treturn (\n\t\t\t<Dropdown className=\"kt-header__topbar-item kt-header__topbar-item--user\" drop=\"down\" alignRight>\n\t\t\t\t<Dropdown.Toggle as={HeaderDropdownToggle} id=\"dropdown-toggle-user-profile\">\n\t\t\t\t\t{showHi && <span className=\"kt-header__topbar-welcome kt-hidden-mobile\">Hi,</span>}\n\n\t\t\t\t\t{showHi && <span className=\"kt-header__topbar-username kt-hidden-mobile\">{welcomeName}</span>}\n\n\t\t\t\t\t{showAvatar && <img alt=\"Pic\" src={user.avatar} />}\n\n\t\t\t\t\t{showBadge && (\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"kt-badge kt-badge--username kt-badge--lg kt-badge--rounded kt-badge--bold kt-hidden-\"\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\t\tbackgroundImage: `url(${user.avatar})`,\n\t\t\t\t\t\t\t\tbackgroundColor: 'transparent',\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* If user doesnt have avatar, render font by their names */}\n\t\t\t\t\t\t\t{!user.avatar ? (\n\t\t\t\t\t\t\t\t<span className=\"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold\">\n\t\t\t\t\t\t\t\t\t{welcomeName.charAt(0)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t</Dropdown.Toggle>\n\t\t\t\t<Dropdown.Menu\n\t\t\t\t\tstyle={{ zIndex: 90 }}\n\t\t\t\t\tclassName=\"dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl\"\n\t\t\t\t>\n\t\t\t\t\t{/** ClassName should be 'dropdown-menu dropdown-menu-fit dropdown-menu-right dropdown-menu-anim dropdown-menu-top-unround dropdown-menu-xl' */}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"kt-user-card kt-user-card--skin-dark kt-notification-item-padding-x\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundImage: `url()`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"kt-user-card__avatar\">\n\t\t\t\t\t\t\t{!user.avatar ? (\n\t\t\t\t\t\t\t\t<span className=\"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold  kt-font-success\">\n\t\t\t\t\t\t\t\t\t{welcomeName.charAt(0)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName=\"kt-badge kt-badge--lg kt-badge--rounded kt-badge--bold  kt-font-success\"\n\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\tborderRadius: '50%',\n\t\t\t\t\t\t\t\t\t\tbackgroundSize: 'cover',\n\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${user.avatar})`,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t></span>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"kt-user-card__name\">{welcomeName}</div>\n\t\t\t\t\t\t{/* <div className=\"kt-user-card__badge\">\n\t\t\t\t\t\t\t\t<span className=\"btn btn-success btn-sm btn-bold btn-font-md\">23 messages</span>\n\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"kt-notification\">\n\t\t\t\t\t\t<a className=\"kt-notification__item\" onClick={() => getProfileId()}>\n\t\t\t\t\t\t\t<div className=\"kt-notification__item-icon\">\n\t\t\t\t\t\t\t\t<i className=\"flaticon2-calendar-3 kt-font-success\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"kt-notification__item-details\">\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-title kt-font-bold\">My Profile</div>\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-time\">Account settings and more</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t{profileIdRes.loading && <CircularProgress color=\"primary\" size=\"40px\"></CircularProgress>}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t{/* <a className=\"kt-notification__item\">\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-icon\">\n\t\t\t\t\t\t\t\t\t<i className=\"flaticon2-mail kt-font-warning\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-title kt-font-bold\">My Messages</div>\n\t\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-time\">Inbox and tasks</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</a> */}\n\t\t\t\t\t\t{/* <a className=\"kt-notification__item\">\n\t\t\t\t\t\t\t<div className=\"kt-notification__item-icon\">\n\t\t\t\t\t\t\t\t<i className=\"flaticon2-rocket-1 kt-font-danger\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"kt-notification__item-details\">\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-title kt-font-bold\">My Activities</div>\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-time\">Logs and notifications</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a> */}\n\t\t\t\t\t\t{/* <a className=\"kt-notification__item\">\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-icon\">\n\t\t\t\t\t\t\t\t\t<i className=\"flaticon2-hourglass kt-font-brand\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-details\">\n\t\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-title kt-font-bold\">My Tasks</div>\n\t\t\t\t\t\t\t\t\t<div className=\"kt-notification__item-time\">latest tasks and projects</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</a> */}\n\t\t\t\t\t\t<div className=\"kt-notification__custom\">\n\t\t\t\t\t\t\t<Button onClick={() => logout()} className=\"btn btn-label-brand btn-sm btn-bold\">\n\t\t\t\t\t\t\t\tSign Out\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Dropdown.Menu>\n\t\t\t</Dropdown>\n\t\t);\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<React.Fragment>\n\t\t\t\t<Dialog\n\t\t\t\t\tonClose={() => handleOpenLoginModal(false)}\n\t\t\t\t\taria-labelledby=\"login-modal-in-authorize-popup\"\n\t\t\t\t\topen={loginModalState.isOpen}\n\t\t\t\t>\n\t\t\t\t\t<React.Suspense fallback={<LoadingIndicator hasSpacing />}>\n\t\t\t\t\t\t<AuthPage isModal={true} formTypeDefault={loginModalState.formType}></AuthPage>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</Dialog>\n\t\t\t</React.Fragment>\n\t\t\t<Button color=\"primary\" size=\"large\" onClick={() => handleOpenLoginModal(true, 'login')}>\n\t\t\t\tLogin\n\t\t\t</Button>\n\t\t\t<Button color=\"primary\" size=\"large\" onClick={() => handleOpenLoginModal(true, 'register')}>\n\t\t\t\tSign up\n\t\t\t</Button>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = ({ auth: { activeUser } }) => ({\n\tactiveUser,\n});\n\nconst mapDispatchToProps = dispatch => {\n\tconst logout = () => dispatch(authActions.logout());\n\n\treturn {\n\t\tlogout,\n\t};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}